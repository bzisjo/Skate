
mpu_manual.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  000024aa  0000253e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000024aa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006b  00800108  00800108  00002546  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002546  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002578  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000188  00000000  00000000  000025b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001e9e  00000000  00000000  00002740  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c54  00000000  00000000  000045de  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f2a  00000000  00000000  00005232  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005fc  00000000  00000000  0000615c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007ca  00000000  00000000  00006758  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000214d  00000000  00000000  00006f22  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000160  00000000  00000000  0000906f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__ctors_end>
       4:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
       8:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
       c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      10:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      14:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      18:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      1c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      20:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      24:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      28:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      2c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      30:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      34:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      38:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      3c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      40:	0c 94 cb 09 	jmp	0x1396	; 0x1396 <__vector_16>
      44:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      48:	0c 94 e6 0b 	jmp	0x17cc	; 0x17cc <__vector_18>
      4c:	0c 94 11 0c 	jmp	0x1822	; 0x1822 <__vector_19>
      50:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      54:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      58:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      5c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      60:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      64:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
      68:	03 6e       	ori	r16, 0xE3	; 227
      6a:	db 36       	cpi	r29, 0x6B	; 107
      6c:	3d 9a       	sbi	0x07, 5	; 7
      6e:	99 99       	sbic	0x13, 1	; 19
      70:	99 3d       	cpi	r25, 0xD9	; 217
      72:	ab aa       	std	Y+51, r10	; 0x33
      74:	aa 2a       	or	r10, r26
      76:	3e 00       	.word	0x003e	; ????
      78:	00 00       	nop
      7a:	80 3f       	cpi	r24, 0xF0	; 240
      7c:	08 4a       	sbci	r16, 0xA8	; 168
      7e:	d7 3b       	cpi	r29, 0xB7	; 183
      80:	3b ce       	rjmp	.-906    	; 0xfffffcf8 <__eeprom_end+0xff7efcf8>
      82:	01 6e       	ori	r16, 0xE1	; 225
      84:	84 bc       	out	0x24, r8	; 36
      86:	bf fd       	.word	0xfdbf	; ????
      88:	c1 2f       	mov	r28, r17
      8a:	3d 6c       	ori	r19, 0xCD	; 205
      8c:	74 31       	cpi	r23, 0x14	; 20
      8e:	9a bd       	out	0x2a, r25	; 42
      90:	56 83       	std	Z+6, r21	; 0x06
      92:	3d da       	rcall	.-2950   	; 0xfffff50e <__eeprom_end+0xff7ef50e>
      94:	3d 00       	.word	0x003d	; ????
      96:	c7 7f       	andi	r28, 0xF7	; 247
      98:	11 be       	out	0x31, r1	; 49
      9a:	d9 e4       	ldi	r29, 0x49	; 73
      9c:	bb 4c       	sbci	r27, 0xCB	; 203
      9e:	3e 91       	ld	r19, -X
      a0:	6b aa       	std	Y+51, r6	; 0x33
      a2:	aa be       	out	0x3a, r10	; 58
      a4:	00 00       	nop
      a6:	00 80       	ld	r0, Z
      a8:	3f 07       	cpc	r19, r31
      aa:	2c 7a       	andi	r18, 0xAC	; 172
      ac:	a5 ba       	out	0x15, r10	; 21
      ae:	6c c5       	rjmp	.+2776   	; 0xb88 <__stack+0x289>
      b0:	90 da       	rcall	.-2784   	; 0xfffff5d2 <__eeprom_end+0xff7ef5d2>
      b2:	3b 93       	.word	0x933b	; ????
      b4:	65 fc       	sbrc	r6, 5
      b6:	8b bc       	out	0x2b, r8	; 43
      b8:	53 f8       	bld	r5, 3
      ba:	10 fd       	sbrc	r17, 0
      bc:	3c 56       	subi	r19, 0x6C	; 108
      be:	92 83       	std	Z+2, r25	; 0x02
      c0:	4d bd       	out	0x2d, r20	; 45
      c2:	87 9d       	mul	r24, r7
      c4:	3a b6       	in	r3, 0x3a	; 58
      c6:	3d cb       	rjmp	.-2438   	; 0xfffff742 <__eeprom_end+0xff7ef742>
      c8:	c9 bf       	out	0x39, r28	; 57
      ca:	5b be       	out	0x3b, r5	; 59
      cc:	73 da       	rcall	.-2842   	; 0xfffff5b4 <__eeprom_end+0xff7ef5b4>
      ce:	0f c9       	rjmp	.-3554   	; 0xfffff2ee <__eeprom_end+0xff7ef2ee>
      d0:	3f 00       	.word	0x003f	; ????

000000d2 <__trampolines_end>:
      d2:	00 40       	sbci	r16, 0x00	; 0
      d4:	7a 10       	cpse	r7, r10
      d6:	f3 5a       	subi	r31, 0xA3	; 163
      d8:	00 a0       	ldd	r0, Z+32	; 0x20
      da:	72 4e       	sbci	r23, 0xE2	; 226
      dc:	18 09       	sbc	r17, r8
      de:	00 10       	cpse	r0, r0
      e0:	a5 d4       	rcall	.+2378   	; 0xa2c <__stack+0x12d>
      e2:	e8 00       	.word	0x00e8	; ????
      e4:	00 e8       	ldi	r16, 0x80	; 128
      e6:	76 48       	sbci	r23, 0x86	; 134
      e8:	17 00       	.word	0x0017	; ????
      ea:	00 e4       	ldi	r16, 0x40	; 64
      ec:	0b 54       	subi	r16, 0x4B	; 75
      ee:	02 00       	.word	0x0002	; ????
      f0:	00 ca       	rjmp	.-3072   	; 0xfffff4f2 <__eeprom_end+0xff7ef4f2>
      f2:	9a 3b       	cpi	r25, 0xBA	; 186
      f4:	00 00       	nop
      f6:	00 e1       	ldi	r16, 0x10	; 16
      f8:	f5 05       	cpc	r31, r5
      fa:	00 00       	nop
      fc:	80 96       	adiw	r24, 0x20	; 32
      fe:	98 00       	.word	0x0098	; ????
     100:	00 00       	nop
     102:	40 42       	sbci	r20, 0x20	; 32
     104:	0f 00       	.word	0x000f	; ????
     106:	00 00       	nop
     108:	a0 86       	std	Z+8, r10	; 0x08
     10a:	01 00       	.word	0x0001	; ????
     10c:	00 00       	nop
     10e:	10 27       	eor	r17, r16
     110:	00 00       	nop
     112:	00 00       	nop
     114:	e8 03       	fmulsu	r22, r16
     116:	00 00       	nop
     118:	00 00       	nop
     11a:	64 00       	.word	0x0064	; ????
     11c:	00 00       	nop
     11e:	00 00       	nop
     120:	0a 00       	.word	0x000a	; ????
     122:	00 00       	nop
     124:	00 00       	nop
     126:	01 00       	.word	0x0001	; ????
     128:	00 00       	nop
     12a:	00 00       	nop
     12c:	2c 76       	andi	r18, 0x6C	; 108
     12e:	d8 88       	ldd	r13, Y+16	; 0x10
     130:	dc 67       	ori	r29, 0x7C	; 124
     132:	4f 08       	sbc	r4, r15
     134:	23 df       	rcall	.-442    	; 0xffffff7c <__eeprom_end+0xff7eff7c>
     136:	c1 df       	rcall	.-126    	; 0xba <__SREG__+0x7b>
     138:	ae 59       	subi	r26, 0x9E	; 158
     13a:	e1 b1       	in	r30, 0x01	; 1
     13c:	b7 96       	adiw	r30, 0x27	; 39
     13e:	e5 e3       	ldi	r30, 0x35	; 53
     140:	e4 53       	subi	r30, 0x34	; 52
     142:	c6 3a       	cpi	r28, 0xA6	; 166
     144:	e6 51       	subi	r30, 0x16	; 22
     146:	99 76       	andi	r25, 0x69	; 105
     148:	96 e8       	ldi	r25, 0x86	; 134
     14a:	e6 c2       	rjmp	.+1484   	; 0x718 <mpu6050_writeBit+0x46>
     14c:	84 26       	eor	r8, r20
     14e:	eb 89       	ldd	r30, Y+19	; 0x13
     150:	8c 9b       	sbis	0x11, 4	; 17
     152:	62 ed       	ldi	r22, 0xD2	; 210
     154:	40 7c       	andi	r20, 0xC0	; 192
     156:	6f fc       	.word	0xfc6f	; ????
     158:	ef bc       	out	0x2f, r14	; 47
     15a:	9c 9f       	mul	r25, r28
     15c:	40 f2       	brcs	.-112    	; 0xee <__trampolines_end+0x1c>
     15e:	ba a5       	ldd	r27, Y+42	; 0x2a
     160:	6f a5       	ldd	r22, Y+47	; 0x2f
     162:	f4 90       	lpm	r15, Z
     164:	05 5a       	subi	r16, 0xA5	; 165
     166:	2a f7       	brpl	.-54     	; 0x132 <__trampolines_end+0x60>
     168:	5c 93       	st	X, r21
     16a:	6b 6c       	ori	r22, 0xCB	; 203
     16c:	f9 67       	ori	r31, 0x79	; 121
     16e:	6d c1       	rjmp	.+730    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
     170:	1b fc       	.word	0xfc1b	; ????
     172:	e0 e4       	ldi	r30, 0x40	; 64
     174:	0d 47       	sbci	r16, 0x7D	; 125
     176:	fe f5       	brtc	.+126    	; 0x1f6 <.do_clear_bss_loop>
     178:	20 e6       	ldi	r18, 0x60	; 96
     17a:	b5 00       	.word	0x00b5	; ????
     17c:	d0 ed       	ldi	r29, 0xD0	; 208
     17e:	90 2e       	mov	r9, r16
     180:	03 00       	.word	0x0003	; ????
     182:	94 35       	cpi	r25, 0x54	; 84
     184:	77 05       	cpc	r23, r7
     186:	00 80       	ld	r0, Z
     188:	84 1e       	adc	r8, r20
     18a:	08 00       	.word	0x0008	; ????
     18c:	00 20       	and	r0, r0
     18e:	4e 0a       	sbc	r4, r30
     190:	00 00       	nop
     192:	00 c8       	rjmp	.-4096   	; 0xfffff194 <__eeprom_end+0xff7ef194>
     194:	0c 33       	cpi	r16, 0x3C	; 60
     196:	33 33       	cpi	r19, 0x33	; 51
     198:	33 0f       	add	r19, r19
     19a:	98 6e       	ori	r25, 0xE8	; 232
     19c:	12 83       	std	Z+2, r17	; 0x02
     19e:	11 41       	sbci	r17, 0x11	; 17
     1a0:	ef 8d       	ldd	r30, Y+31	; 0x1f
     1a2:	21 14       	cp	r2, r1
     1a4:	89 3b       	cpi	r24, 0xB9	; 185
     1a6:	e6 55       	subi	r30, 0x56	; 86
     1a8:	16 cf       	rjmp	.-468    	; 0xffffffd6 <__eeprom_end+0xff7effd6>
     1aa:	fe e6       	ldi	r31, 0x6E	; 110
     1ac:	db 18       	sub	r13, r11
     1ae:	d1 84       	ldd	r13, Z+9	; 0x09
     1b0:	4b 38       	cpi	r20, 0x8B	; 139
     1b2:	1b f7       	brvc	.-58     	; 0x17a <__trampolines_end+0xa8>
     1b4:	7c 1d       	adc	r23, r12
     1b6:	90 1d       	adc	r25, r0
     1b8:	a4 bb       	out	0x14, r26	; 20
     1ba:	e4 24       	eor	r14, r4
     1bc:	20 32       	cpi	r18, 0x20	; 32
     1be:	84 72       	andi	r24, 0x24	; 36
     1c0:	5e 22       	and	r5, r30
     1c2:	81 00       	.word	0x0081	; ????
     1c4:	c9 f1       	breq	.+114    	; 0x238 <i2c_start+0x22>
     1c6:	24 ec       	ldi	r18, 0xC4	; 196
     1c8:	a1 e5       	ldi	r26, 0x51	; 81
     1ca:	3d 27       	eor	r19, r29

000001cc <__ctors_end>:
     1cc:	11 24       	eor	r1, r1
     1ce:	1f be       	out	0x3f, r1	; 63
     1d0:	cf ef       	ldi	r28, 0xFF	; 255
     1d2:	d8 e0       	ldi	r29, 0x08	; 8
     1d4:	de bf       	out	0x3e, r29	; 62
     1d6:	cd bf       	out	0x3d, r28	; 61

000001d8 <__do_copy_data>:
     1d8:	11 e0       	ldi	r17, 0x01	; 1
     1da:	a0 e0       	ldi	r26, 0x00	; 0
     1dc:	b1 e0       	ldi	r27, 0x01	; 1
     1de:	ea ea       	ldi	r30, 0xAA	; 170
     1e0:	f4 e2       	ldi	r31, 0x24	; 36
     1e2:	02 c0       	rjmp	.+4      	; 0x1e8 <__do_copy_data+0x10>
     1e4:	05 90       	lpm	r0, Z+
     1e6:	0d 92       	st	X+, r0
     1e8:	a8 30       	cpi	r26, 0x08	; 8
     1ea:	b1 07       	cpc	r27, r17
     1ec:	d9 f7       	brne	.-10     	; 0x1e4 <__do_copy_data+0xc>

000001ee <__do_clear_bss>:
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	a8 e0       	ldi	r26, 0x08	; 8
     1f2:	b1 e0       	ldi	r27, 0x01	; 1
     1f4:	01 c0       	rjmp	.+2      	; 0x1f8 <.do_clear_bss_start>

000001f6 <.do_clear_bss_loop>:
     1f6:	1d 92       	st	X+, r1

000001f8 <.do_clear_bss_start>:
     1f8:	a3 37       	cpi	r26, 0x73	; 115
     1fa:	b2 07       	cpc	r27, r18
     1fc:	e1 f7       	brne	.-8      	; 0x1f6 <.do_clear_bss_loop>
     1fe:	0e 94 b6 01 	call	0x36c	; 0x36c <main>
     202:	0c 94 53 12 	jmp	0x24a6	; 0x24a6 <_exit>

00000206 <__bad_interrupt>:
     206:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000020a <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
     20a:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     20e:	82 e0       	ldi	r24, 0x02	; 2
     210:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
     214:	08 95       	ret

00000216 <i2c_start>:
     216:	94 ea       	ldi	r25, 0xA4	; 164
     218:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     21c:	4f ef       	ldi	r20, 0xFF	; 255
     21e:	50 e0       	ldi	r21, 0x00	; 0
     220:	60 e0       	ldi	r22, 0x00	; 0
     222:	70 e0       	ldi	r23, 0x00	; 0
     224:	ec eb       	ldi	r30, 0xBC	; 188
     226:	f0 e0       	ldi	r31, 0x00	; 0
     228:	90 81       	ld	r25, Z
     22a:	99 23       	and	r25, r25
     22c:	34 f0       	brlt	.+12     	; 0x23a <i2c_start+0x24>
     22e:	41 50       	subi	r20, 0x01	; 1
     230:	51 09       	sbc	r21, r1
     232:	61 09       	sbc	r22, r1
     234:	71 09       	sbc	r23, r1
     236:	c0 f7       	brcc	.-16     	; 0x228 <i2c_start+0x12>
     238:	04 c0       	rjmp	.+8      	; 0x242 <i2c_start+0x2c>
     23a:	45 2b       	or	r20, r21
     23c:	46 2b       	or	r20, r22
     23e:	47 2b       	or	r20, r23
     240:	41 f1       	breq	.+80     	; 0x292 <i2c_start+0x7c>
     242:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     246:	98 7f       	andi	r25, 0xF8	; 248
     248:	98 30       	cpi	r25, 0x08	; 8
     24a:	11 f0       	breq	.+4      	; 0x250 <i2c_start+0x3a>
     24c:	90 31       	cpi	r25, 0x10	; 16
     24e:	19 f5       	brne	.+70     	; 0x296 <i2c_start+0x80>
     250:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     254:	84 e8       	ldi	r24, 0x84	; 132
     256:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     25a:	8f ef       	ldi	r24, 0xFF	; 255
     25c:	90 e0       	ldi	r25, 0x00	; 0
     25e:	a0 e0       	ldi	r26, 0x00	; 0
     260:	b0 e0       	ldi	r27, 0x00	; 0
     262:	ec eb       	ldi	r30, 0xBC	; 188
     264:	f0 e0       	ldi	r31, 0x00	; 0
     266:	20 81       	ld	r18, Z
     268:	22 23       	and	r18, r18
     26a:	2c f0       	brlt	.+10     	; 0x276 <i2c_start+0x60>
     26c:	01 97       	sbiw	r24, 0x01	; 1
     26e:	a1 09       	sbc	r26, r1
     270:	b1 09       	sbc	r27, r1
     272:	c8 f7       	brcc	.-14     	; 0x266 <i2c_start+0x50>
     274:	04 c0       	rjmp	.+8      	; 0x27e <i2c_start+0x68>
     276:	89 2b       	or	r24, r25
     278:	8a 2b       	or	r24, r26
     27a:	8b 2b       	or	r24, r27
     27c:	71 f0       	breq	.+28     	; 0x29a <i2c_start+0x84>
     27e:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     282:	98 7f       	andi	r25, 0xF8	; 248
     284:	98 31       	cpi	r25, 0x18	; 24
     286:	59 f0       	breq	.+22     	; 0x29e <i2c_start+0x88>
     288:	81 e0       	ldi	r24, 0x01	; 1
     28a:	90 34       	cpi	r25, 0x40	; 64
     28c:	49 f4       	brne	.+18     	; 0x2a0 <i2c_start+0x8a>
     28e:	80 e0       	ldi	r24, 0x00	; 0
     290:	08 95       	ret
     292:	81 e0       	ldi	r24, 0x01	; 1
     294:	08 95       	ret
     296:	81 e0       	ldi	r24, 0x01	; 1
     298:	08 95       	ret
     29a:	81 e0       	ldi	r24, 0x01	; 1
     29c:	08 95       	ret
     29e:	80 e0       	ldi	r24, 0x00	; 0
     2a0:	08 95       	ret

000002a2 <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     2a2:	84 e9       	ldi	r24, 0x94	; 148
     2a4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
     2a8:	80 e0       	ldi	r24, 0x00	; 0
     2aa:	90 e0       	ldi	r25, 0x00	; 0
     2ac:	ec eb       	ldi	r30, 0xBC	; 188
     2ae:	f0 e0       	ldi	r31, 0x00	; 0
     2b0:	20 81       	ld	r18, Z
     2b2:	24 ff       	sbrs	r18, 4
     2b4:	05 c0       	rjmp	.+10     	; 0x2c0 <i2c_stop+0x1e>
     2b6:	01 96       	adiw	r24, 0x01	; 1
     2b8:	81 15       	cp	r24, r1
     2ba:	21 e0       	ldi	r18, 0x01	; 1
     2bc:	92 07       	cpc	r25, r18
     2be:	c1 f7       	brne	.-16     	; 0x2b0 <i2c_stop+0xe>
     2c0:	08 95       	ret

000002c2 <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     2c2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     2c6:	84 e8       	ldi	r24, 0x84	; 132
     2c8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
     2cc:	8f ef       	ldi	r24, 0xFF	; 255
     2ce:	90 e0       	ldi	r25, 0x00	; 0
     2d0:	a0 e0       	ldi	r26, 0x00	; 0
     2d2:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     2d4:	ec eb       	ldi	r30, 0xBC	; 188
     2d6:	f0 e0       	ldi	r31, 0x00	; 0
     2d8:	20 81       	ld	r18, Z
     2da:	22 23       	and	r18, r18
     2dc:	2c f0       	brlt	.+10     	; 0x2e8 <i2c_write+0x26>
     2de:	01 97       	sbiw	r24, 0x01	; 1
     2e0:	a1 09       	sbc	r26, r1
     2e2:	b1 09       	sbc	r27, r1
     2e4:	c8 f7       	brcc	.-14     	; 0x2d8 <i2c_write+0x16>
     2e6:	04 c0       	rjmp	.+8      	; 0x2f0 <i2c_write+0x2e>
	if(i2c_timer == 0)
     2e8:	89 2b       	or	r24, r25
     2ea:	8a 2b       	or	r24, r26
     2ec:	8b 2b       	or	r24, r27
     2ee:	41 f0       	breq	.+16     	; 0x300 <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     2f0:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
     2f4:	98 7f       	andi	r25, 0xF8	; 248
     2f6:	81 e0       	ldi	r24, 0x01	; 1
     2f8:	98 32       	cpi	r25, 0x28	; 40
     2fa:	19 f4       	brne	.+6      	; 0x302 <i2c_write+0x40>
     2fc:	80 e0       	ldi	r24, 0x00	; 0
     2fe:	08 95       	ret
     300:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
     302:	08 95       	ret

00000304 <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     304:	84 ec       	ldi	r24, 0xC4	; 196
     306:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	i2c_timer = I2C_TIMER_DELAY;
     30a:	8f ef       	ldi	r24, 0xFF	; 255
     30c:	90 e0       	ldi	r25, 0x00	; 0
     30e:	a0 e0       	ldi	r26, 0x00	; 0
     310:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     312:	ec eb       	ldi	r30, 0xBC	; 188
     314:	f0 e0       	ldi	r31, 0x00	; 0
     316:	20 81       	ld	r18, Z
     318:	22 23       	and	r18, r18
     31a:	2c f0       	brlt	.+10     	; 0x326 <i2c_readAck+0x22>
     31c:	01 97       	sbiw	r24, 0x01	; 1
     31e:	a1 09       	sbc	r26, r1
     320:	b1 09       	sbc	r27, r1
     322:	c8 f7       	brcc	.-14     	; 0x316 <i2c_readAck+0x12>
     324:	04 c0       	rjmp	.+8      	; 0x32e <i2c_readAck+0x2a>
	if(i2c_timer == 0)
     326:	89 2b       	or	r24, r25
     328:	8a 2b       	or	r24, r26
     32a:	8b 2b       	or	r24, r27
     32c:	19 f0       	breq	.+6      	; 0x334 <i2c_readAck+0x30>
		return 0;

    return TWDR;
     32e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     332:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
     334:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
     336:	08 95       	ret

00000338 <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
     338:	84 e8       	ldi	r24, 0x84	; 132
     33a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	i2c_timer = I2C_TIMER_DELAY;
     33e:	8f ef       	ldi	r24, 0xFF	; 255
     340:	90 e0       	ldi	r25, 0x00	; 0
     342:	a0 e0       	ldi	r26, 0x00	; 0
     344:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     346:	ec eb       	ldi	r30, 0xBC	; 188
     348:	f0 e0       	ldi	r31, 0x00	; 0
     34a:	20 81       	ld	r18, Z
     34c:	22 23       	and	r18, r18
     34e:	2c f0       	brlt	.+10     	; 0x35a <i2c_readNak+0x22>
     350:	01 97       	sbiw	r24, 0x01	; 1
     352:	a1 09       	sbc	r26, r1
     354:	b1 09       	sbc	r27, r1
     356:	c8 f7       	brcc	.-14     	; 0x34a <i2c_readNak+0x12>
     358:	04 c0       	rjmp	.+8      	; 0x362 <i2c_readNak+0x2a>
	if(i2c_timer == 0)
     35a:	89 2b       	or	r24, r25
     35c:	8a 2b       	or	r24, r26
     35e:	8b 2b       	or	r24, r27
     360:	19 f0       	breq	.+6      	; 0x368 <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
     362:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     366:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
     368:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
     36a:	08 95       	ret

0000036c <main>:
#include "mpu6050/mpu6050.h"

#define UART_BAUD_RATE 9600
#include "uart/uart.h"

int main(void) {
     36c:	cf 93       	push	r28
     36e:	df 93       	push	r29
     370:	cd b7       	in	r28, 0x3d	; 61
     372:	de b7       	in	r29, 0x3e	; 62
     374:	a6 97       	sbiw	r28, 0x26	; 38
     376:	0f b6       	in	r0, 0x3f	; 63
     378:	f8 94       	cli
     37a:	de bf       	out	0x3e, r29	; 62
     37c:	0f be       	out	0x3f, r0	; 63
     37e:	cd bf       	out	0x3d, r28	; 61
	int16_t az = 0;
	int16_t gx = 0;
	int16_t gy = 0;
	int16_t gz = 0;
	*/
	double qw = 1.0f;
     380:	80 e0       	ldi	r24, 0x00	; 0
     382:	90 e0       	ldi	r25, 0x00	; 0
     384:	a0 e8       	ldi	r26, 0x80	; 128
     386:	bf e3       	ldi	r27, 0x3F	; 63
     388:	89 83       	std	Y+1, r24	; 0x01
     38a:	9a 83       	std	Y+2, r25	; 0x02
     38c:	ab 83       	std	Y+3, r26	; 0x03
     38e:	bc 83       	std	Y+4, r27	; 0x04
	double qx = 0.0f;
     390:	1d 82       	std	Y+5, r1	; 0x05
     392:	1e 82       	std	Y+6, r1	; 0x06
     394:	1f 82       	std	Y+7, r1	; 0x07
     396:	18 86       	std	Y+8, r1	; 0x08
	double qy = 0.0f;
     398:	19 86       	std	Y+9, r1	; 0x09
     39a:	1a 86       	std	Y+10, r1	; 0x0a
     39c:	1b 86       	std	Y+11, r1	; 0x0b
     39e:	1c 86       	std	Y+12, r1	; 0x0c
	double qz = 0.0f;
     3a0:	1d 86       	std	Y+13, r1	; 0x0d
     3a2:	1e 86       	std	Y+14, r1	; 0x0e
     3a4:	1f 86       	std	Y+15, r1	; 0x0f
     3a6:	18 8a       	std	Y+16, r1	; 0x10
	double roll = 0.0f;
     3a8:	19 8a       	std	Y+17, r1	; 0x11
     3aa:	1a 8a       	std	Y+18, r1	; 0x12
     3ac:	1b 8a       	std	Y+19, r1	; 0x13
     3ae:	1c 8a       	std	Y+20, r1	; 0x14
	double pitch = 0.0f;
     3b0:	1d 8a       	std	Y+21, r1	; 0x15
     3b2:	1e 8a       	std	Y+22, r1	; 0x16
     3b4:	1f 8a       	std	Y+23, r1	; 0x17
     3b6:	18 8e       	std	Y+24, r1	; 0x18
	double yaw = 0.0f;
     3b8:	19 8e       	std	Y+25, r1	; 0x19
     3ba:	1a 8e       	std	Y+26, r1	; 0x1a
     3bc:	1b 8e       	std	Y+27, r1	; 0x1b
     3be:	1c 8e       	std	Y+28, r1	; 0x1c
	double pitch_d = 0.0f;
	double yaw_d = 0.0f;
	#endif

	//init uart
	uart_init(UART_BAUD_SELECT(UART_BAUD_RATE,F_CPU));
     3c0:	83 e3       	ldi	r24, 0x33	; 51
     3c2:	90 e0       	ldi	r25, 0x00	; 0
     3c4:	0e 94 3b 0c 	call	0x1876	; 0x1876 <uart_init>

	//init interrupt
	sei();
     3c8:	78 94       	sei

	//init mpu6050
	mpu6050_init();
     3ca:	0e 94 a0 03 	call	0x740	; 0x740 <mpu6050_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3ce:	2f e7       	ldi	r18, 0x7F	; 127
     3d0:	88 e3       	ldi	r24, 0x38	; 56
     3d2:	91 e0       	ldi	r25, 0x01	; 1
     3d4:	21 50       	subi	r18, 0x01	; 1
     3d6:	80 40       	sbci	r24, 0x00	; 0
     3d8:	90 40       	sbci	r25, 0x00	; 0
     3da:	e1 f7       	brne	.-8      	; 0x3d4 <main+0x68>
     3dc:	00 c0       	rjmp	.+0      	; 0x3de <main+0x72>
     3de:	00 00       	nop
		mpu6050_getRawData(&ax, &ay, &az, &gx, &gy, &gz);
		mpu6050_getConvData(&axg, &ayg, &azg, &gxds, &gyds, &gzds);
		#endif
		
		#if MPU6050_GETATTITUDE == 1
		mpu6050_getQuaternion(&qw, &qx, &qy, &qz);
     3e0:	9e 01       	movw	r18, r28
     3e2:	23 5f       	subi	r18, 0xF3	; 243
     3e4:	3f 4f       	sbci	r19, 0xFF	; 255
     3e6:	ae 01       	movw	r20, r28
     3e8:	47 5f       	subi	r20, 0xF7	; 247
     3ea:	5f 4f       	sbci	r21, 0xFF	; 255
     3ec:	be 01       	movw	r22, r28
     3ee:	6b 5f       	subi	r22, 0xFB	; 251
     3f0:	7f 4f       	sbci	r23, 0xFF	; 255
     3f2:	ce 01       	movw	r24, r28
     3f4:	01 96       	adiw	r24, 0x01	; 1
     3f6:	0e 94 ef 09 	call	0x13de	; 0x13de <mpu6050_getQuaternion>
		//mpu6050_getRawData(&ax, &ay, &az, &gx, &gy, &gz);
		//uart_puts("A\r\n");
		//mpu6050_updateQuaternion();	//applies mahony filter to deal with drift?
		//uart_puts("B\r\n");
		mpu6050_getRollPitchYaw(&roll, &pitch, &yaw);
     3fa:	ae 01       	movw	r20, r28
     3fc:	47 5e       	subi	r20, 0xE7	; 231
     3fe:	5f 4f       	sbci	r21, 0xFF	; 255
     400:	be 01       	movw	r22, r28
     402:	6b 5e       	subi	r22, 0xEB	; 235
     404:	7f 4f       	sbci	r23, 0xFF	; 255
     406:	ce 01       	movw	r24, r28
     408:	41 96       	adiw	r24, 0x11	; 17
     40a:	0e 94 2c 0a 	call	0x1458	; 0x1458 <mpu6050_getRollPitchYaw>
     40e:	8f e1       	ldi	r24, 0x1F	; 31
     410:	9e e4       	ldi	r25, 0x4E	; 78
     412:	01 97       	sbiw	r24, 0x01	; 1
     414:	f1 f7       	brne	.-4      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     416:	00 c0       	rjmp	.+0      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     418:	00 00       	nop
		uart_putc('\n');
		*/
		
		//change values to degrees
		roll_d = roll*180/3.1415;
		pitch_d = pitch*180/3.1415;
     41a:	20 e0       	ldi	r18, 0x00	; 0
     41c:	30 e0       	ldi	r19, 0x00	; 0
     41e:	44 e3       	ldi	r20, 0x34	; 52
     420:	53 e4       	ldi	r21, 0x43	; 67
     422:	6d 89       	ldd	r22, Y+21	; 0x15
     424:	7e 89       	ldd	r23, Y+22	; 0x16
     426:	8f 89       	ldd	r24, Y+23	; 0x17
     428:	98 8d       	ldd	r25, Y+24	; 0x18
     42a:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     42e:	26 e5       	ldi	r18, 0x56	; 86
     430:	3e e0       	ldi	r19, 0x0E	; 14
     432:	49 e4       	ldi	r20, 0x49	; 73
     434:	50 e4       	ldi	r21, 0x40	; 64
     436:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__divsf3>
     43a:	4b 01       	movw	r8, r22
     43c:	5c 01       	movw	r10, r24
		yaw_d = yaw*180/3.1415;
     43e:	20 e0       	ldi	r18, 0x00	; 0
     440:	30 e0       	ldi	r19, 0x00	; 0
     442:	44 e3       	ldi	r20, 0x34	; 52
     444:	53 e4       	ldi	r21, 0x43	; 67
     446:	69 8d       	ldd	r22, Y+25	; 0x19
     448:	7a 8d       	ldd	r23, Y+26	; 0x1a
     44a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     44c:	9c 8d       	ldd	r25, Y+28	; 0x1c
     44e:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     452:	26 e5       	ldi	r18, 0x56	; 86
     454:	3e e0       	ldi	r19, 0x0E	; 14
     456:	49 e4       	ldi	r20, 0x49	; 73
     458:	50 e4       	ldi	r21, 0x40	; 64
     45a:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__divsf3>
     45e:	6b 01       	movw	r12, r22
     460:	7c 01       	movw	r14, r24
		
		char itmp[10];
		dtostrf(roll_d, 3, 5, itmp); uart_puts(itmp); uart_putc(' ');
     462:	20 e0       	ldi	r18, 0x00	; 0
     464:	30 e0       	ldi	r19, 0x00	; 0
     466:	44 e3       	ldi	r20, 0x34	; 52
     468:	53 e4       	ldi	r21, 0x43	; 67
     46a:	69 89       	ldd	r22, Y+17	; 0x11
     46c:	7a 89       	ldd	r23, Y+18	; 0x12
     46e:	8b 89       	ldd	r24, Y+19	; 0x13
     470:	9c 89       	ldd	r25, Y+20	; 0x14
     472:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     476:	26 e5       	ldi	r18, 0x56	; 86
     478:	3e e0       	ldi	r19, 0x0E	; 14
     47a:	49 e4       	ldi	r20, 0x49	; 73
     47c:	50 e4       	ldi	r21, 0x40	; 64
     47e:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__divsf3>
     482:	8e 01       	movw	r16, r28
     484:	03 5e       	subi	r16, 0xE3	; 227
     486:	1f 4f       	sbci	r17, 0xFF	; 255
     488:	25 e0       	ldi	r18, 0x05	; 5
     48a:	43 e0       	ldi	r20, 0x03	; 3
     48c:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <dtostrf>
     490:	c8 01       	movw	r24, r16
     492:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <uart_puts>
     496:	80 e2       	ldi	r24, 0x20	; 32
     498:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <uart_putc>
		dtostrf(pitch_d, 3, 5, itmp); uart_puts(itmp); uart_putc(' ');
     49c:	25 e0       	ldi	r18, 0x05	; 5
     49e:	43 e0       	ldi	r20, 0x03	; 3
     4a0:	c5 01       	movw	r24, r10
     4a2:	b4 01       	movw	r22, r8
     4a4:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <dtostrf>
     4a8:	c8 01       	movw	r24, r16
     4aa:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <uart_puts>
     4ae:	80 e2       	ldi	r24, 0x20	; 32
     4b0:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <uart_putc>
		dtostrf(yaw_d, 3, 5, itmp); uart_puts(itmp); uart_putc(' ');
     4b4:	25 e0       	ldi	r18, 0x05	; 5
     4b6:	43 e0       	ldi	r20, 0x03	; 3
     4b8:	c7 01       	movw	r24, r14
     4ba:	b6 01       	movw	r22, r12
     4bc:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <dtostrf>
     4c0:	c8 01       	movw	r24, r16
     4c2:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <uart_puts>
     4c6:	80 e2       	ldi	r24, 0x20	; 32
     4c8:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <uart_putc>
		uart_puts("\r\n");
     4cc:	84 e0       	ldi	r24, 0x04	; 4
     4ce:	91 e0       	ldi	r25, 0x01	; 1
     4d0:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <uart_puts>
		
		uart_puts("\r\n");
     4d4:	84 e0       	ldi	r24, 0x04	; 4
     4d6:	91 e0       	ldi	r25, 0x01	; 1
     4d8:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <uart_puts>
     4dc:	9f ef       	ldi	r25, 0xFF	; 255
     4de:	29 e6       	ldi	r18, 0x69	; 105
     4e0:	88 e1       	ldi	r24, 0x18	; 24
     4e2:	91 50       	subi	r25, 0x01	; 1
     4e4:	20 40       	sbci	r18, 0x00	; 0
     4e6:	80 40       	sbci	r24, 0x00	; 0
     4e8:	e1 f7       	brne	.-8      	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     4ea:	00 c0       	rjmp	.+0      	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
     4ec:	00 00       	nop
     4ee:	78 cf       	rjmp	.-272    	; 0x3e0 <main+0x74>

000004f0 <mpu6050_readBytes>:
    *azg = (double)(az)/MPU6050_AGAIN;
    *gxds = (double)(gx)/MPU6050_GGAIN;
	*gyds = (double)(gy)/MPU6050_GGAIN;
	*gzds = (double)(gz)/MPU6050_GGAIN;
	#endif
}
     4f0:	af 92       	push	r10
     4f2:	bf 92       	push	r11
     4f4:	cf 92       	push	r12
     4f6:	df 92       	push	r13
     4f8:	ff 92       	push	r15
     4fa:	0f 93       	push	r16
     4fc:	1f 93       	push	r17
     4fe:	cf 93       	push	r28
     500:	df 93       	push	r29
     502:	66 23       	and	r22, r22
     504:	b9 f1       	breq	.+110    	; 0x574 <mpu6050_readBytes+0x84>
     506:	c5 2f       	mov	r28, r21
     508:	d4 2f       	mov	r29, r20
     50a:	f6 2e       	mov	r15, r22
     50c:	18 2f       	mov	r17, r24
     50e:	80 ed       	ldi	r24, 0xD0	; 208
     510:	0e 94 0b 01 	call	0x216	; 0x216 <i2c_start>
     514:	81 2f       	mov	r24, r17
     516:	0e 94 61 01 	call	0x2c2	; 0x2c2 <i2c_write>
     51a:	8a e1       	ldi	r24, 0x1A	; 26
     51c:	8a 95       	dec	r24
     51e:	f1 f7       	brne	.-4      	; 0x51c <mpu6050_readBytes+0x2c>
     520:	00 c0       	rjmp	.+0      	; 0x522 <mpu6050_readBytes+0x32>
     522:	81 ed       	ldi	r24, 0xD1	; 209
     524:	0e 94 0b 01 	call	0x216	; 0x216 <i2c_start>
     528:	0d 2f       	mov	r16, r29
     52a:	1c 2f       	mov	r17, r28
     52c:	cc 24       	eor	r12, r12
     52e:	ca 94       	dec	r12
     530:	cf 0c       	add	r12, r15
     532:	d1 2c       	mov	r13, r1
     534:	ef ef       	ldi	r30, 0xFF	; 255
     536:	ce 1a       	sub	r12, r30
     538:	de 0a       	sbc	r13, r30
     53a:	c0 e0       	ldi	r28, 0x00	; 0
     53c:	d0 e0       	ldi	r29, 0x00	; 0
     53e:	af 2c       	mov	r10, r15
     540:	b1 2c       	mov	r11, r1
     542:	f1 e0       	ldi	r31, 0x01	; 1
     544:	af 1a       	sub	r10, r31
     546:	b1 08       	sbc	r11, r1
     548:	ac 16       	cp	r10, r28
     54a:	bd 06       	cpc	r11, r29
     54c:	29 f4       	brne	.+10     	; 0x558 <mpu6050_readBytes+0x68>
     54e:	0e 94 9c 01 	call	0x338	; 0x338 <i2c_readNak>
     552:	f8 01       	movw	r30, r16
     554:	80 83       	st	Z, r24
     556:	04 c0       	rjmp	.+8      	; 0x560 <mpu6050_readBytes+0x70>
     558:	0e 94 82 01 	call	0x304	; 0x304 <i2c_readAck>
     55c:	f8 01       	movw	r30, r16
     55e:	80 83       	st	Z, r24
     560:	21 96       	adiw	r28, 0x01	; 1
     562:	0f 5f       	subi	r16, 0xFF	; 255
     564:	1f 4f       	sbci	r17, 0xFF	; 255
     566:	cc 15       	cp	r28, r12
     568:	dd 05       	cpc	r29, r13
     56a:	71 f7       	brne	.-36     	; 0x548 <mpu6050_readBytes+0x58>
     56c:	cf 2d       	mov	r28, r15
     56e:	0e 94 51 01 	call	0x2a2	; 0x2a2 <i2c_stop>
     572:	01 c0       	rjmp	.+2      	; 0x576 <mpu6050_readBytes+0x86>
     574:	c0 e0       	ldi	r28, 0x00	; 0
     576:	8c 2f       	mov	r24, r28
     578:	df 91       	pop	r29
     57a:	cf 91       	pop	r28
     57c:	1f 91       	pop	r17
     57e:	0f 91       	pop	r16
     580:	ff 90       	pop	r15
     582:	df 90       	pop	r13
     584:	cf 90       	pop	r12
     586:	bf 90       	pop	r11
     588:	af 90       	pop	r10
     58a:	08 95       	ret

0000058c <mpu6050_readByte>:
     58c:	ab 01       	movw	r20, r22
     58e:	61 e0       	ldi	r22, 0x01	; 1
     590:	0e 94 78 02 	call	0x4f0	; 0x4f0 <mpu6050_readBytes>
     594:	08 95       	ret

00000596 <mpu6050_writeBytes>:
     596:	ef 92       	push	r14
     598:	ff 92       	push	r15
     59a:	0f 93       	push	r16
     59c:	1f 93       	push	r17
     59e:	cf 93       	push	r28
     5a0:	df 93       	push	r29
     5a2:	66 23       	and	r22, r22
     5a4:	d1 f0       	breq	.+52     	; 0x5da <mpu6050_writeBytes+0x44>
     5a6:	7a 01       	movw	r14, r20
     5a8:	16 2f       	mov	r17, r22
     5aa:	c8 2f       	mov	r28, r24
     5ac:	80 ed       	ldi	r24, 0xD0	; 208
     5ae:	0e 94 0b 01 	call	0x216	; 0x216 <i2c_start>
     5b2:	8c 2f       	mov	r24, r28
     5b4:	0e 94 61 01 	call	0x2c2	; 0x2c2 <i2c_write>
     5b8:	e7 01       	movw	r28, r14
     5ba:	6f ef       	ldi	r22, 0xFF	; 255
     5bc:	61 0f       	add	r22, r17
     5be:	06 2f       	mov	r16, r22
     5c0:	10 e0       	ldi	r17, 0x00	; 0
     5c2:	0f 5f       	subi	r16, 0xFF	; 255
     5c4:	1f 4f       	sbci	r17, 0xFF	; 255
     5c6:	0e 0d       	add	r16, r14
     5c8:	1f 1d       	adc	r17, r15
     5ca:	89 91       	ld	r24, Y+
     5cc:	0e 94 61 01 	call	0x2c2	; 0x2c2 <i2c_write>
     5d0:	c0 17       	cp	r28, r16
     5d2:	d1 07       	cpc	r29, r17
     5d4:	d1 f7       	brne	.-12     	; 0x5ca <mpu6050_writeBytes+0x34>
     5d6:	0e 94 51 01 	call	0x2a2	; 0x2a2 <i2c_stop>
     5da:	df 91       	pop	r29
     5dc:	cf 91       	pop	r28
     5de:	1f 91       	pop	r17
     5e0:	0f 91       	pop	r16
     5e2:	ff 90       	pop	r15
     5e4:	ef 90       	pop	r14
     5e6:	08 95       	ret

000005e8 <mpu6050_writeByte>:
     5e8:	cf 93       	push	r28
     5ea:	df 93       	push	r29
     5ec:	1f 92       	push	r1
     5ee:	cd b7       	in	r28, 0x3d	; 61
     5f0:	de b7       	in	r29, 0x3e	; 62
     5f2:	69 83       	std	Y+1, r22	; 0x01
     5f4:	ae 01       	movw	r20, r28
     5f6:	4f 5f       	subi	r20, 0xFF	; 255
     5f8:	5f 4f       	sbci	r21, 0xFF	; 255
     5fa:	61 e0       	ldi	r22, 0x01	; 1
     5fc:	0e 94 cb 02 	call	0x596	; 0x596 <mpu6050_writeBytes>
     600:	0f 90       	pop	r0
     602:	df 91       	pop	r29
     604:	cf 91       	pop	r28
     606:	08 95       	ret

00000608 <mpu6050_readBit>:
     608:	ff 92       	push	r15
     60a:	0f 93       	push	r16
     60c:	1f 93       	push	r17
     60e:	cf 93       	push	r28
     610:	df 93       	push	r29
     612:	1f 92       	push	r1
     614:	cd b7       	in	r28, 0x3d	; 61
     616:	de b7       	in	r29, 0x3e	; 62
     618:	f6 2e       	mov	r15, r22
     61a:	8a 01       	movw	r16, r20
     61c:	be 01       	movw	r22, r28
     61e:	6f 5f       	subi	r22, 0xFF	; 255
     620:	7f 4f       	sbci	r23, 0xFF	; 255
     622:	0e 94 c6 02 	call	0x58c	; 0x58c <mpu6050_readByte>
     626:	21 e0       	ldi	r18, 0x01	; 1
     628:	30 e0       	ldi	r19, 0x00	; 0
     62a:	02 c0       	rjmp	.+4      	; 0x630 <mpu6050_readBit+0x28>
     62c:	22 0f       	add	r18, r18
     62e:	33 1f       	adc	r19, r19
     630:	fa 94       	dec	r15
     632:	e2 f7       	brpl	.-8      	; 0x62c <mpu6050_readBit+0x24>
     634:	99 81       	ldd	r25, Y+1	; 0x01
     636:	29 23       	and	r18, r25
     638:	f8 01       	movw	r30, r16
     63a:	20 83       	st	Z, r18
     63c:	0f 90       	pop	r0
     63e:	df 91       	pop	r29
     640:	cf 91       	pop	r28
     642:	1f 91       	pop	r17
     644:	0f 91       	pop	r16
     646:	ff 90       	pop	r15
     648:	08 95       	ret

0000064a <mpu6050_writeBits>:
     64a:	ef 92       	push	r14
     64c:	ff 92       	push	r15
     64e:	0f 93       	push	r16
     650:	1f 93       	push	r17
     652:	cf 93       	push	r28
     654:	df 93       	push	r29
     656:	1f 92       	push	r1
     658:	cd b7       	in	r28, 0x3d	; 61
     65a:	de b7       	in	r29, 0x3e	; 62
     65c:	44 23       	and	r20, r20
     65e:	89 f1       	breq	.+98     	; 0x6c2 <mpu6050_writeBits+0x78>
     660:	f2 2e       	mov	r15, r18
     662:	14 2f       	mov	r17, r20
     664:	06 2f       	mov	r16, r22
     666:	e8 2e       	mov	r14, r24
     668:	19 82       	std	Y+1, r1	; 0x01
     66a:	be 01       	movw	r22, r28
     66c:	6f 5f       	subi	r22, 0xFF	; 255
     66e:	7f 4f       	sbci	r23, 0xFF	; 255
     670:	0e 94 c6 02 	call	0x58c	; 0x58c <mpu6050_readByte>
     674:	88 23       	and	r24, r24
     676:	29 f1       	breq	.+74     	; 0x6c2 <mpu6050_writeBits+0x78>
     678:	40 2f       	mov	r20, r16
     67a:	50 e0       	ldi	r21, 0x00	; 0
     67c:	41 1b       	sub	r20, r17
     67e:	51 09       	sbc	r21, r1
     680:	4f 5f       	subi	r20, 0xFF	; 255
     682:	5f 4f       	sbci	r21, 0xFF	; 255
     684:	81 e0       	ldi	r24, 0x01	; 1
     686:	90 e0       	ldi	r25, 0x00	; 0
     688:	02 c0       	rjmp	.+4      	; 0x68e <mpu6050_writeBits+0x44>
     68a:	88 0f       	add	r24, r24
     68c:	99 1f       	adc	r25, r25
     68e:	1a 95       	dec	r17
     690:	e2 f7       	brpl	.-8      	; 0x68a <mpu6050_writeBits+0x40>
     692:	01 97       	sbiw	r24, 0x01	; 1
     694:	04 2e       	mov	r0, r20
     696:	02 c0       	rjmp	.+4      	; 0x69c <mpu6050_writeBits+0x52>
     698:	88 0f       	add	r24, r24
     69a:	99 1f       	adc	r25, r25
     69c:	0a 94       	dec	r0
     69e:	e2 f7       	brpl	.-8      	; 0x698 <mpu6050_writeBits+0x4e>
     6a0:	2f 2d       	mov	r18, r15
     6a2:	30 e0       	ldi	r19, 0x00	; 0
     6a4:	02 c0       	rjmp	.+4      	; 0x6aa <mpu6050_writeBits+0x60>
     6a6:	22 0f       	add	r18, r18
     6a8:	33 1f       	adc	r19, r19
     6aa:	4a 95       	dec	r20
     6ac:	e2 f7       	brpl	.-8      	; 0x6a6 <mpu6050_writeBits+0x5c>
     6ae:	68 2f       	mov	r22, r24
     6b0:	60 95       	com	r22
     6b2:	99 81       	ldd	r25, Y+1	; 0x01
     6b4:	69 23       	and	r22, r25
     6b6:	82 23       	and	r24, r18
     6b8:	68 2b       	or	r22, r24
     6ba:	69 83       	std	Y+1, r22	; 0x01
     6bc:	8e 2d       	mov	r24, r14
     6be:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <mpu6050_writeByte>
     6c2:	0f 90       	pop	r0
     6c4:	df 91       	pop	r29
     6c6:	cf 91       	pop	r28
     6c8:	1f 91       	pop	r17
     6ca:	0f 91       	pop	r16
     6cc:	ff 90       	pop	r15
     6ce:	ef 90       	pop	r14
     6d0:	08 95       	ret

000006d2 <mpu6050_writeBit>:
     6d2:	ff 92       	push	r15
     6d4:	0f 93       	push	r16
     6d6:	1f 93       	push	r17
     6d8:	cf 93       	push	r28
     6da:	df 93       	push	r29
     6dc:	1f 92       	push	r1
     6de:	cd b7       	in	r28, 0x3d	; 61
     6e0:	de b7       	in	r29, 0x3e	; 62
     6e2:	18 2f       	mov	r17, r24
     6e4:	06 2f       	mov	r16, r22
     6e6:	f4 2e       	mov	r15, r20
     6e8:	be 01       	movw	r22, r28
     6ea:	6f 5f       	subi	r22, 0xFF	; 255
     6ec:	7f 4f       	sbci	r23, 0xFF	; 255
     6ee:	0e 94 c6 02 	call	0x58c	; 0x58c <mpu6050_readByte>
     6f2:	ff 20       	and	r15, r15
     6f4:	51 f0       	breq	.+20     	; 0x70a <mpu6050_writeBit+0x38>
     6f6:	61 e0       	ldi	r22, 0x01	; 1
     6f8:	70 e0       	ldi	r23, 0x00	; 0
     6fa:	02 c0       	rjmp	.+4      	; 0x700 <mpu6050_writeBit+0x2e>
     6fc:	66 0f       	add	r22, r22
     6fe:	77 1f       	adc	r23, r23
     700:	0a 95       	dec	r16
     702:	e2 f7       	brpl	.-8      	; 0x6fc <mpu6050_writeBit+0x2a>
     704:	89 81       	ldd	r24, Y+1	; 0x01
     706:	68 2b       	or	r22, r24
     708:	0a c0       	rjmp	.+20     	; 0x71e <mpu6050_writeBit+0x4c>
     70a:	61 e0       	ldi	r22, 0x01	; 1
     70c:	70 e0       	ldi	r23, 0x00	; 0
     70e:	02 c0       	rjmp	.+4      	; 0x714 <mpu6050_writeBit+0x42>
     710:	66 0f       	add	r22, r22
     712:	77 1f       	adc	r23, r23
     714:	0a 95       	dec	r16
     716:	e2 f7       	brpl	.-8      	; 0x710 <mpu6050_writeBit+0x3e>
     718:	60 95       	com	r22
     71a:	89 81       	ldd	r24, Y+1	; 0x01
     71c:	68 23       	and	r22, r24
     71e:	69 83       	std	Y+1, r22	; 0x01
     720:	81 2f       	mov	r24, r17
     722:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <mpu6050_writeByte>
     726:	0f 90       	pop	r0
     728:	df 91       	pop	r29
     72a:	cf 91       	pop	r28
     72c:	1f 91       	pop	r17
     72e:	0f 91       	pop	r16
     730:	ff 90       	pop	r15
     732:	08 95       	ret

00000734 <mpu6050_setSleepDisabled>:
     734:	40 e0       	ldi	r20, 0x00	; 0
     736:	66 e0       	ldi	r22, 0x06	; 6
     738:	8b e6       	ldi	r24, 0x6B	; 107
     73a:	0e 94 69 03 	call	0x6d2	; 0x6d2 <mpu6050_writeBit>
     73e:	08 95       	ret

00000740 <mpu6050_init>:
     740:	0e 94 05 01 	call	0x20a	; 0x20a <i2c_init>
     744:	2a e1       	ldi	r18, 0x1A	; 26
     746:	2a 95       	dec	r18
     748:	f1 f7       	brne	.-4      	; 0x746 <mpu6050_init+0x6>
     74a:	00 c0       	rjmp	.+0      	; 0x74c <mpu6050_init+0xc>
     74c:	8f ef       	ldi	r24, 0xFF	; 255
     74e:	90 e7       	ldi	r25, 0x70	; 112
     750:	22 e0       	ldi	r18, 0x02	; 2
     752:	81 50       	subi	r24, 0x01	; 1
     754:	90 40       	sbci	r25, 0x00	; 0
     756:	20 40       	sbci	r18, 0x00	; 0
     758:	e1 f7       	brne	.-8      	; 0x752 <mpu6050_init+0x12>
     75a:	00 c0       	rjmp	.+0      	; 0x75c <mpu6050_init+0x1c>
     75c:	00 00       	nop
     75e:	0e 94 9a 03 	call	0x734	; 0x734 <mpu6050_setSleepDisabled>
     762:	8f e1       	ldi	r24, 0x1F	; 31
     764:	9e e4       	ldi	r25, 0x4E	; 78
     766:	01 97       	sbiw	r24, 0x01	; 1
     768:	f1 f7       	brne	.-4      	; 0x766 <mpu6050_init+0x26>
     76a:	00 c0       	rjmp	.+0      	; 0x76c <mpu6050_init+0x2c>
     76c:	00 00       	nop
     76e:	21 e0       	ldi	r18, 0x01	; 1
     770:	43 e0       	ldi	r20, 0x03	; 3
     772:	62 e0       	ldi	r22, 0x02	; 2
     774:	8b e6       	ldi	r24, 0x6B	; 107
     776:	0e 94 25 03 	call	0x64a	; 0x64a <mpu6050_writeBits>
     77a:	23 e0       	ldi	r18, 0x03	; 3
     77c:	43 e0       	ldi	r20, 0x03	; 3
     77e:	62 e0       	ldi	r22, 0x02	; 2
     780:	8a e1       	ldi	r24, 0x1A	; 26
     782:	0e 94 25 03 	call	0x64a	; 0x64a <mpu6050_writeBits>
     786:	64 e0       	ldi	r22, 0x04	; 4
     788:	89 e1       	ldi	r24, 0x19	; 25
     78a:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <mpu6050_writeByte>
     78e:	21 e0       	ldi	r18, 0x01	; 1
     790:	42 e0       	ldi	r20, 0x02	; 2
     792:	64 e0       	ldi	r22, 0x04	; 4
     794:	8b e1       	ldi	r24, 0x1B	; 27
     796:	0e 94 25 03 	call	0x64a	; 0x64a <mpu6050_writeBits>
     79a:	20 e0       	ldi	r18, 0x00	; 0
     79c:	42 e0       	ldi	r20, 0x02	; 2
     79e:	64 e0       	ldi	r22, 0x04	; 4
     7a0:	8c e1       	ldi	r24, 0x1C	; 28
     7a2:	0e 94 25 03 	call	0x64a	; 0x64a <mpu6050_writeBits>
     7a6:	85 b5       	in	r24, 0x25	; 37
     7a8:	85 60       	ori	r24, 0x05	; 5
     7aa:	85 bd       	out	0x25, r24	; 37
     7ac:	ee e6       	ldi	r30, 0x6E	; 110
     7ae:	f0 e0       	ldi	r31, 0x00	; 0
     7b0:	80 81       	ld	r24, Z
     7b2:	81 60       	ori	r24, 0x01	; 1
     7b4:	80 83       	st	Z, r24
     7b6:	08 95       	ret

000007b8 <mpu6050_mahonyUpdate>:
volatile float q0 = 1.0f, q1 = 0.0f, q2 = 0.0f, q3 = 0.0f;
volatile float integralFBx = 0.0f,  integralFBy = 0.0f, integralFBz = 0.0f;
/*
 * Mahony update function (for 6DOF)
 */
void mpu6050_mahonyUpdate(float gx, float gy, float gz, float ax, float ay, float az) {
     7b8:	4f 92       	push	r4
     7ba:	5f 92       	push	r5
     7bc:	6f 92       	push	r6
     7be:	7f 92       	push	r7
     7c0:	8f 92       	push	r8
     7c2:	9f 92       	push	r9
     7c4:	af 92       	push	r10
     7c6:	bf 92       	push	r11
     7c8:	cf 92       	push	r12
     7ca:	df 92       	push	r13
     7cc:	ef 92       	push	r14
     7ce:	ff 92       	push	r15
     7d0:	0f 93       	push	r16
     7d2:	1f 93       	push	r17
     7d4:	cf 93       	push	r28
     7d6:	df 93       	push	r29
     7d8:	cd b7       	in	r28, 0x3d	; 61
     7da:	de b7       	in	r29, 0x3e	; 62
     7dc:	a4 97       	sbiw	r28, 0x24	; 36
     7de:	0f b6       	in	r0, 0x3f	; 63
     7e0:	f8 94       	cli
     7e2:	de bf       	out	0x3e, r29	; 62
     7e4:	0f be       	out	0x3f, r0	; 63
     7e6:	cd bf       	out	0x3d, r28	; 61
     7e8:	6d 87       	std	Y+13, r22	; 0x0d
     7ea:	7e 87       	std	Y+14, r23	; 0x0e
     7ec:	8f 87       	std	Y+15, r24	; 0x0f
     7ee:	98 8b       	std	Y+16, r25	; 0x10
     7f0:	29 8b       	std	Y+17, r18	; 0x11
     7f2:	3a 8b       	std	Y+18, r19	; 0x12
     7f4:	4b 8b       	std	Y+19, r20	; 0x13
     7f6:	5c 8b       	std	Y+20, r21	; 0x14
     7f8:	ed 8a       	std	Y+21, r14	; 0x15
     7fa:	fe 8a       	std	Y+22, r15	; 0x16
     7fc:	0f 8b       	std	Y+23, r16	; 0x17
     7fe:	18 8f       	std	Y+24, r17	; 0x18
	float halfvx, halfvy, halfvz;
	float halfex, halfey, halfez;
	float qa, qb, qc;

	// Compute feedback only if accelerometer measurement valid (avoids NaN in accelerometer normalisation)
	if(!((ax == 0.0f) && (ay == 0.0f) && (az == 0.0f))) {
     800:	20 e0       	ldi	r18, 0x00	; 0
     802:	30 e0       	ldi	r19, 0x00	; 0
     804:	a9 01       	movw	r20, r18
     806:	c6 01       	movw	r24, r12
     808:	b5 01       	movw	r22, r10
     80a:	0e 94 72 0d 	call	0x1ae4	; 0x1ae4 <__cmpsf2>
     80e:	81 11       	cpse	r24, r1
     810:	17 c0       	rjmp	.+46     	; 0x840 <mpu6050_mahonyUpdate+0x88>
     812:	20 e0       	ldi	r18, 0x00	; 0
     814:	30 e0       	ldi	r19, 0x00	; 0
     816:	a9 01       	movw	r20, r18
     818:	6f a9       	ldd	r22, Y+55	; 0x37
     81a:	78 ad       	ldd	r23, Y+56	; 0x38
     81c:	89 ad       	ldd	r24, Y+57	; 0x39
     81e:	9a ad       	ldd	r25, Y+58	; 0x3a
     820:	0e 94 72 0d 	call	0x1ae4	; 0x1ae4 <__cmpsf2>
     824:	81 11       	cpse	r24, r1
     826:	0c c0       	rjmp	.+24     	; 0x840 <mpu6050_mahonyUpdate+0x88>
     828:	20 e0       	ldi	r18, 0x00	; 0
     82a:	30 e0       	ldi	r19, 0x00	; 0
     82c:	a9 01       	movw	r20, r18
     82e:	6b ad       	ldd	r22, Y+59	; 0x3b
     830:	7c ad       	ldd	r23, Y+60	; 0x3c
     832:	8d ad       	ldd	r24, Y+61	; 0x3d
     834:	9e ad       	ldd	r25, Y+62	; 0x3e
     836:	0e 94 72 0d 	call	0x1ae4	; 0x1ae4 <__cmpsf2>
     83a:	88 23       	and	r24, r24
     83c:	09 f4       	brne	.+2      	; 0x840 <mpu6050_mahonyUpdate+0x88>
     83e:	1a c2       	rjmp	.+1076   	; 0xc74 <__stack+0x375>

		// Normalise accelerometer measurement
		norm = sqrt(ax * ax + ay * ay + az * az);
     840:	a6 01       	movw	r20, r12
     842:	95 01       	movw	r18, r10
     844:	c6 01       	movw	r24, r12
     846:	b5 01       	movw	r22, r10
     848:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     84c:	2b 01       	movw	r4, r22
     84e:	3c 01       	movw	r6, r24
     850:	2f a9       	ldd	r18, Y+55	; 0x37
     852:	38 ad       	ldd	r19, Y+56	; 0x38
     854:	49 ad       	ldd	r20, Y+57	; 0x39
     856:	5a ad       	ldd	r21, Y+58	; 0x3a
     858:	ca 01       	movw	r24, r20
     85a:	b9 01       	movw	r22, r18
     85c:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     860:	69 83       	std	Y+1, r22	; 0x01
     862:	7a 83       	std	Y+2, r23	; 0x02
     864:	8b 83       	std	Y+3, r24	; 0x03
     866:	9c 83       	std	Y+4, r25	; 0x04
     868:	9b 01       	movw	r18, r22
     86a:	ac 01       	movw	r20, r24
     86c:	c3 01       	movw	r24, r6
     86e:	b2 01       	movw	r22, r4
     870:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
     874:	6d 8f       	std	Y+29, r22	; 0x1d
     876:	7e 8f       	std	Y+30, r23	; 0x1e
     878:	8f 8f       	std	Y+31, r24	; 0x1f
     87a:	98 a3       	std	Y+32, r25	; 0x20
     87c:	2b ad       	ldd	r18, Y+59	; 0x3b
     87e:	3c ad       	ldd	r19, Y+60	; 0x3c
     880:	4d ad       	ldd	r20, Y+61	; 0x3d
     882:	5e ad       	ldd	r21, Y+62	; 0x3e
     884:	ca 01       	movw	r24, r20
     886:	b9 01       	movw	r22, r18
     888:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     88c:	69 8f       	std	Y+25, r22	; 0x19
     88e:	7a 8f       	std	Y+26, r23	; 0x1a
     890:	8b 8f       	std	Y+27, r24	; 0x1b
     892:	9c 8f       	std	Y+28, r25	; 0x1c
     894:	29 81       	ldd	r18, Y+1	; 0x01
     896:	3a 81       	ldd	r19, Y+2	; 0x02
     898:	4b 81       	ldd	r20, Y+3	; 0x03
     89a:	5c 81       	ldd	r21, Y+4	; 0x04
     89c:	c3 01       	movw	r24, r6
     89e:	b2 01       	movw	r22, r4
     8a0:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
     8a4:	2b 01       	movw	r4, r22
     8a6:	3c 01       	movw	r6, r24
     8a8:	29 8d       	ldd	r18, Y+25	; 0x19
     8aa:	3a 8d       	ldd	r19, Y+26	; 0x1a
     8ac:	4b 8d       	ldd	r20, Y+27	; 0x1b
     8ae:	5c 8d       	ldd	r21, Y+28	; 0x1c
     8b0:	c3 01       	movw	r24, r6
     8b2:	b2 01       	movw	r22, r4
     8b4:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
     8b8:	0e 94 71 0f 	call	0x1ee2	; 0x1ee2 <sqrt>
     8bc:	2b 01       	movw	r4, r22
     8be:	3c 01       	movw	r6, r24
		ax /= norm;
     8c0:	9b 01       	movw	r18, r22
     8c2:	ac 01       	movw	r20, r24
     8c4:	c6 01       	movw	r24, r12
     8c6:	b5 01       	movw	r22, r10
     8c8:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__divsf3>
     8cc:	69 83       	std	Y+1, r22	; 0x01
     8ce:	7a 83       	std	Y+2, r23	; 0x02
     8d0:	8b 83       	std	Y+3, r24	; 0x03
     8d2:	9c 83       	std	Y+4, r25	; 0x04
		ay /= norm;
     8d4:	a3 01       	movw	r20, r6
     8d6:	92 01       	movw	r18, r4
     8d8:	6f a9       	ldd	r22, Y+55	; 0x37
     8da:	78 ad       	ldd	r23, Y+56	; 0x38
     8dc:	89 ad       	ldd	r24, Y+57	; 0x39
     8de:	9a ad       	ldd	r25, Y+58	; 0x3a
     8e0:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__divsf3>
     8e4:	6d 83       	std	Y+5, r22	; 0x05
     8e6:	7e 83       	std	Y+6, r23	; 0x06
     8e8:	8f 83       	std	Y+7, r24	; 0x07
     8ea:	98 87       	std	Y+8, r25	; 0x08
		az /= norm;
     8ec:	a3 01       	movw	r20, r6
     8ee:	92 01       	movw	r18, r4
     8f0:	6b ad       	ldd	r22, Y+59	; 0x3b
     8f2:	7c ad       	ldd	r23, Y+60	; 0x3c
     8f4:	8d ad       	ldd	r24, Y+61	; 0x3d
     8f6:	9e ad       	ldd	r25, Y+62	; 0x3e
     8f8:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__divsf3>
     8fc:	69 87       	std	Y+9, r22	; 0x09
     8fe:	7a 87       	std	Y+10, r23	; 0x0a
     900:	8b 87       	std	Y+11, r24	; 0x0b
     902:	9c 87       	std	Y+12, r25	; 0x0c

		// Estimated direction of gravity and vector perpendicular to magnetic flux
		halfvx = q1 * q3 - q0 * q2;
     904:	60 91 1c 01 	lds	r22, 0x011C	; 0x80011c <q1>
     908:	70 91 1d 01 	lds	r23, 0x011D	; 0x80011d <q1+0x1>
     90c:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <q1+0x2>
     910:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <q1+0x3>
     914:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <q3>
     918:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <q3+0x1>
     91c:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <q3+0x2>
     920:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <q3+0x3>
     924:	80 90 00 01 	lds	r8, 0x0100	; 0x800100 <__data_start>
     928:	90 90 01 01 	lds	r9, 0x0101	; 0x800101 <__data_start+0x1>
     92c:	a0 90 02 01 	lds	r10, 0x0102	; 0x800102 <__data_start+0x2>
     930:	b0 90 03 01 	lds	r11, 0x0103	; 0x800103 <__data_start+0x3>
     934:	40 90 18 01 	lds	r4, 0x0118	; 0x800118 <q2>
     938:	50 90 19 01 	lds	r5, 0x0119	; 0x800119 <q2+0x1>
     93c:	60 90 1a 01 	lds	r6, 0x011A	; 0x80011a <q2+0x2>
     940:	70 90 1b 01 	lds	r7, 0x011B	; 0x80011b <q2+0x3>
     944:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     948:	6b 01       	movw	r12, r22
     94a:	7c 01       	movw	r14, r24
     94c:	a3 01       	movw	r20, r6
     94e:	92 01       	movw	r18, r4
     950:	c5 01       	movw	r24, r10
     952:	b4 01       	movw	r22, r8
     954:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     958:	9b 01       	movw	r18, r22
     95a:	ac 01       	movw	r20, r24
     95c:	c7 01       	movw	r24, r14
     95e:	b6 01       	movw	r22, r12
     960:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <__subsf3>
     964:	69 8f       	std	Y+25, r22	; 0x19
     966:	7a 8f       	std	Y+26, r23	; 0x1a
     968:	8b 8f       	std	Y+27, r24	; 0x1b
     96a:	9c 8f       	std	Y+28, r25	; 0x1c
		halfvy = q0 * q1 + q2 * q3;
     96c:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
     970:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_start+0x1>
     974:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_start+0x2>
     978:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_start+0x3>
     97c:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <q1>
     980:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <q1+0x1>
     984:	40 91 1e 01 	lds	r20, 0x011E	; 0x80011e <q1+0x2>
     988:	50 91 1f 01 	lds	r21, 0x011F	; 0x80011f <q1+0x3>
     98c:	80 90 18 01 	lds	r8, 0x0118	; 0x800118 <q2>
     990:	90 90 19 01 	lds	r9, 0x0119	; 0x800119 <q2+0x1>
     994:	a0 90 1a 01 	lds	r10, 0x011A	; 0x80011a <q2+0x2>
     998:	b0 90 1b 01 	lds	r11, 0x011B	; 0x80011b <q2+0x3>
     99c:	40 90 14 01 	lds	r4, 0x0114	; 0x800114 <q3>
     9a0:	50 90 15 01 	lds	r5, 0x0115	; 0x800115 <q3+0x1>
     9a4:	60 90 16 01 	lds	r6, 0x0116	; 0x800116 <q3+0x2>
     9a8:	70 90 17 01 	lds	r7, 0x0117	; 0x800117 <q3+0x3>
     9ac:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     9b0:	6b 01       	movw	r12, r22
     9b2:	7c 01       	movw	r14, r24
     9b4:	a3 01       	movw	r20, r6
     9b6:	92 01       	movw	r18, r4
     9b8:	c5 01       	movw	r24, r10
     9ba:	b4 01       	movw	r22, r8
     9bc:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     9c0:	9b 01       	movw	r18, r22
     9c2:	ac 01       	movw	r20, r24
     9c4:	c7 01       	movw	r24, r14
     9c6:	b6 01       	movw	r22, r12
     9c8:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
     9cc:	6d 8f       	std	Y+29, r22	; 0x1d
     9ce:	7e 8f       	std	Y+30, r23	; 0x1e
     9d0:	8f 8f       	std	Y+31, r24	; 0x1f
     9d2:	98 a3       	std	Y+32, r25	; 0x20
		halfvz = q0 * q0 - 0.5f + q3 * q3;
     9d4:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
     9d8:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_start+0x1>
     9dc:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_start+0x2>
     9e0:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_start+0x3>
     9e4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     9e8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     9ec:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <__data_start+0x2>
     9f0:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <__data_start+0x3>
     9f4:	80 90 14 01 	lds	r8, 0x0114	; 0x800114 <q3>
     9f8:	90 90 15 01 	lds	r9, 0x0115	; 0x800115 <q3+0x1>
     9fc:	a0 90 16 01 	lds	r10, 0x0116	; 0x800116 <q3+0x2>
     a00:	b0 90 17 01 	lds	r11, 0x0117	; 0x800117 <q3+0x3>
     a04:	40 90 14 01 	lds	r4, 0x0114	; 0x800114 <q3>
     a08:	50 90 15 01 	lds	r5, 0x0115	; 0x800115 <q3+0x1>
     a0c:	60 90 16 01 	lds	r6, 0x0116	; 0x800116 <q3+0x2>
     a10:	70 90 17 01 	lds	r7, 0x0117	; 0x800117 <q3+0x3>
     a14:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     a18:	20 e0       	ldi	r18, 0x00	; 0
     a1a:	30 e0       	ldi	r19, 0x00	; 0
     a1c:	40 e0       	ldi	r20, 0x00	; 0
     a1e:	5f e3       	ldi	r21, 0x3F	; 63
     a20:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <__subsf3>
     a24:	6b 01       	movw	r12, r22
     a26:	7c 01       	movw	r14, r24
     a28:	a3 01       	movw	r20, r6
     a2a:	92 01       	movw	r18, r4
     a2c:	c5 01       	movw	r24, r10
     a2e:	b4 01       	movw	r22, r8
     a30:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     a34:	9b 01       	movw	r18, r22
     a36:	ac 01       	movw	r20, r24
     a38:	c7 01       	movw	r24, r14
     a3a:	b6 01       	movw	r22, r12
     a3c:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
     a40:	6b 01       	movw	r12, r22
     a42:	7c 01       	movw	r14, r24

		// Error is sum of cross product between estimated and measured direction of gravity
		halfex = (ay * halfvz - az * halfvy);
     a44:	9b 01       	movw	r18, r22
     a46:	ac 01       	movw	r20, r24
     a48:	6d 81       	ldd	r22, Y+5	; 0x05
     a4a:	7e 81       	ldd	r23, Y+6	; 0x06
     a4c:	8f 81       	ldd	r24, Y+7	; 0x07
     a4e:	98 85       	ldd	r25, Y+8	; 0x08
     a50:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     a54:	4b 01       	movw	r8, r22
     a56:	5c 01       	movw	r10, r24
     a58:	2d 8d       	ldd	r18, Y+29	; 0x1d
     a5a:	3e 8d       	ldd	r19, Y+30	; 0x1e
     a5c:	4f 8d       	ldd	r20, Y+31	; 0x1f
     a5e:	58 a1       	ldd	r21, Y+32	; 0x20
     a60:	69 85       	ldd	r22, Y+9	; 0x09
     a62:	7a 85       	ldd	r23, Y+10	; 0x0a
     a64:	8b 85       	ldd	r24, Y+11	; 0x0b
     a66:	9c 85       	ldd	r25, Y+12	; 0x0c
     a68:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     a6c:	9b 01       	movw	r18, r22
     a6e:	ac 01       	movw	r20, r24
     a70:	c5 01       	movw	r24, r10
     a72:	b4 01       	movw	r22, r8
     a74:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <__subsf3>
     a78:	69 a3       	std	Y+33, r22	; 0x21
     a7a:	7a a3       	std	Y+34, r23	; 0x22
     a7c:	8b a3       	std	Y+35, r24	; 0x23
     a7e:	9c a3       	std	Y+36, r25	; 0x24
		halfey = (az * halfvx - ax * halfvz);
     a80:	29 8d       	ldd	r18, Y+25	; 0x19
     a82:	3a 8d       	ldd	r19, Y+26	; 0x1a
     a84:	4b 8d       	ldd	r20, Y+27	; 0x1b
     a86:	5c 8d       	ldd	r21, Y+28	; 0x1c
     a88:	69 85       	ldd	r22, Y+9	; 0x09
     a8a:	7a 85       	ldd	r23, Y+10	; 0x0a
     a8c:	8b 85       	ldd	r24, Y+11	; 0x0b
     a8e:	9c 85       	ldd	r25, Y+12	; 0x0c
     a90:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     a94:	4b 01       	movw	r8, r22
     a96:	5c 01       	movw	r10, r24
     a98:	a7 01       	movw	r20, r14
     a9a:	96 01       	movw	r18, r12
     a9c:	69 81       	ldd	r22, Y+1	; 0x01
     a9e:	7a 81       	ldd	r23, Y+2	; 0x02
     aa0:	8b 81       	ldd	r24, Y+3	; 0x03
     aa2:	9c 81       	ldd	r25, Y+4	; 0x04
     aa4:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     aa8:	9b 01       	movw	r18, r22
     aaa:	ac 01       	movw	r20, r24
     aac:	c5 01       	movw	r24, r10
     aae:	b4 01       	movw	r22, r8
     ab0:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <__subsf3>
     ab4:	2b 01       	movw	r4, r22
     ab6:	3c 01       	movw	r6, r24
		halfez = (ax * halfvy - ay * halfvx);
     ab8:	2d 8d       	ldd	r18, Y+29	; 0x1d
     aba:	3e 8d       	ldd	r19, Y+30	; 0x1e
     abc:	4f 8d       	ldd	r20, Y+31	; 0x1f
     abe:	58 a1       	ldd	r21, Y+32	; 0x20
     ac0:	69 81       	ldd	r22, Y+1	; 0x01
     ac2:	7a 81       	ldd	r23, Y+2	; 0x02
     ac4:	8b 81       	ldd	r24, Y+3	; 0x03
     ac6:	9c 81       	ldd	r25, Y+4	; 0x04
     ac8:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     acc:	6b 01       	movw	r12, r22
     ace:	7c 01       	movw	r14, r24
     ad0:	29 8d       	ldd	r18, Y+25	; 0x19
     ad2:	3a 8d       	ldd	r19, Y+26	; 0x1a
     ad4:	4b 8d       	ldd	r20, Y+27	; 0x1b
     ad6:	5c 8d       	ldd	r21, Y+28	; 0x1c
     ad8:	6d 81       	ldd	r22, Y+5	; 0x05
     ada:	7e 81       	ldd	r23, Y+6	; 0x06
     adc:	8f 81       	ldd	r24, Y+7	; 0x07
     ade:	98 85       	ldd	r25, Y+8	; 0x08
     ae0:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     ae4:	9b 01       	movw	r18, r22
     ae6:	ac 01       	movw	r20, r24
     ae8:	c7 01       	movw	r24, r14
     aea:	b6 01       	movw	r22, r12
     aec:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <__subsf3>
     af0:	4b 01       	movw	r8, r22
     af2:	5c 01       	movw	r10, r24

		// Compute and apply integral feedback if enabled
		if(mpu6050_mahonytwoKiDef > 0.0f) {
			integralFBx += mpu6050_mahonytwoKiDef * halfex * (1.0f / mpu6050_mahonysampleFreq);	// integral error scaled by Ki
     af4:	c0 90 10 01 	lds	r12, 0x0110	; 0x800110 <integralFBx>
     af8:	d0 90 11 01 	lds	r13, 0x0111	; 0x800111 <integralFBx+0x1>
     afc:	e0 90 12 01 	lds	r14, 0x0112	; 0x800112 <integralFBx+0x2>
     b00:	f0 90 13 01 	lds	r15, 0x0113	; 0x800113 <integralFBx+0x3>
     b04:	2d ec       	ldi	r18, 0xCD	; 205
     b06:	3c ec       	ldi	r19, 0xCC	; 204
     b08:	4c e4       	ldi	r20, 0x4C	; 76
     b0a:	5e e3       	ldi	r21, 0x3E	; 62
     b0c:	69 a1       	ldd	r22, Y+33	; 0x21
     b0e:	7a a1       	ldd	r23, Y+34	; 0x22
     b10:	8b a1       	ldd	r24, Y+35	; 0x23
     b12:	9c a1       	ldd	r25, Y+36	; 0x24
     b14:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     b18:	2a e8       	ldi	r18, 0x8A	; 138
     b1a:	3b e4       	ldi	r19, 0x4B	; 75
     b1c:	46 e8       	ldi	r20, 0x86	; 134
     b1e:	5c e3       	ldi	r21, 0x3C	; 60
     b20:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     b24:	a7 01       	movw	r20, r14
     b26:	96 01       	movw	r18, r12
     b28:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
     b2c:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <integralFBx>
     b30:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <integralFBx+0x1>
     b34:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <integralFBx+0x2>
     b38:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <integralFBx+0x3>
			integralFBy += mpu6050_mahonytwoKiDef * halfey * (1.0f / mpu6050_mahonysampleFreq);
     b3c:	c0 90 0c 01 	lds	r12, 0x010C	; 0x80010c <integralFBy>
     b40:	d0 90 0d 01 	lds	r13, 0x010D	; 0x80010d <integralFBy+0x1>
     b44:	e0 90 0e 01 	lds	r14, 0x010E	; 0x80010e <integralFBy+0x2>
     b48:	f0 90 0f 01 	lds	r15, 0x010F	; 0x80010f <integralFBy+0x3>
     b4c:	2d ec       	ldi	r18, 0xCD	; 205
     b4e:	3c ec       	ldi	r19, 0xCC	; 204
     b50:	4c e4       	ldi	r20, 0x4C	; 76
     b52:	5e e3       	ldi	r21, 0x3E	; 62
     b54:	c3 01       	movw	r24, r6
     b56:	b2 01       	movw	r22, r4
     b58:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     b5c:	2a e8       	ldi	r18, 0x8A	; 138
     b5e:	3b e4       	ldi	r19, 0x4B	; 75
     b60:	46 e8       	ldi	r20, 0x86	; 134
     b62:	5c e3       	ldi	r21, 0x3C	; 60
     b64:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     b68:	a7 01       	movw	r20, r14
     b6a:	96 01       	movw	r18, r12
     b6c:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
     b70:	60 93 0c 01 	sts	0x010C, r22	; 0x80010c <integralFBy>
     b74:	70 93 0d 01 	sts	0x010D, r23	; 0x80010d <integralFBy+0x1>
     b78:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <integralFBy+0x2>
     b7c:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <integralFBy+0x3>
			integralFBz += mpu6050_mahonytwoKiDef * halfez * (1.0f / mpu6050_mahonysampleFreq);
     b80:	c0 90 08 01 	lds	r12, 0x0108	; 0x800108 <__data_end>
     b84:	d0 90 09 01 	lds	r13, 0x0109	; 0x800109 <__data_end+0x1>
     b88:	e0 90 0a 01 	lds	r14, 0x010A	; 0x80010a <__data_end+0x2>
     b8c:	f0 90 0b 01 	lds	r15, 0x010B	; 0x80010b <__data_end+0x3>
     b90:	2d ec       	ldi	r18, 0xCD	; 205
     b92:	3c ec       	ldi	r19, 0xCC	; 204
     b94:	4c e4       	ldi	r20, 0x4C	; 76
     b96:	5e e3       	ldi	r21, 0x3E	; 62
     b98:	c5 01       	movw	r24, r10
     b9a:	b4 01       	movw	r22, r8
     b9c:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     ba0:	2a e8       	ldi	r18, 0x8A	; 138
     ba2:	3b e4       	ldi	r19, 0x4B	; 75
     ba4:	46 e8       	ldi	r20, 0x86	; 134
     ba6:	5c e3       	ldi	r21, 0x3C	; 60
     ba8:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     bac:	a7 01       	movw	r20, r14
     bae:	96 01       	movw	r18, r12
     bb0:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
     bb4:	60 93 08 01 	sts	0x0108, r22	; 0x800108 <__data_end>
     bb8:	70 93 09 01 	sts	0x0109, r23	; 0x800109 <__data_end+0x1>
     bbc:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end+0x2>
     bc0:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__data_end+0x3>
			gx += integralFBx;	// apply integral feedback
     bc4:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <integralFBx>
     bc8:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <integralFBx+0x1>
     bcc:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <integralFBx+0x2>
     bd0:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <integralFBx+0x3>
     bd4:	6d 85       	ldd	r22, Y+13	; 0x0d
     bd6:	7e 85       	ldd	r23, Y+14	; 0x0e
     bd8:	8f 85       	ldd	r24, Y+15	; 0x0f
     bda:	98 89       	ldd	r25, Y+16	; 0x10
     bdc:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
     be0:	6d 83       	std	Y+5, r22	; 0x05
     be2:	7e 83       	std	Y+6, r23	; 0x06
     be4:	8f 83       	std	Y+7, r24	; 0x07
     be6:	98 87       	std	Y+8, r25	; 0x08
			gy += integralFBy;
     be8:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <integralFBy>
     bec:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <integralFBy+0x1>
     bf0:	40 91 0e 01 	lds	r20, 0x010E	; 0x80010e <integralFBy+0x2>
     bf4:	50 91 0f 01 	lds	r21, 0x010F	; 0x80010f <integralFBy+0x3>
     bf8:	69 89       	ldd	r22, Y+17	; 0x11
     bfa:	7a 89       	ldd	r23, Y+18	; 0x12
     bfc:	8b 89       	ldd	r24, Y+19	; 0x13
     bfe:	9c 89       	ldd	r25, Y+20	; 0x14
     c00:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
     c04:	6b 01       	movw	r12, r22
     c06:	7c 01       	movw	r14, r24
			gz += integralFBz;
     c08:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
     c0c:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
     c10:	40 91 0a 01 	lds	r20, 0x010A	; 0x80010a <__data_end+0x2>
     c14:	50 91 0b 01 	lds	r21, 0x010B	; 0x80010b <__data_end+0x3>
     c18:	6d 89       	ldd	r22, Y+21	; 0x15
     c1a:	7e 89       	ldd	r23, Y+22	; 0x16
     c1c:	8f 89       	ldd	r24, Y+23	; 0x17
     c1e:	98 8d       	ldd	r25, Y+24	; 0x18
     c20:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
     c24:	69 87       	std	Y+9, r22	; 0x09
     c26:	7a 87       	std	Y+10, r23	; 0x0a
     c28:	8b 87       	std	Y+11, r24	; 0x0b
     c2a:	9c 87       	std	Y+12, r25	; 0x0c
			integralFBy = 0.0f;
			integralFBz = 0.0f;
		}

		// Apply proportional feedback
		gx += mpu6050_mahonytwoKpDef * halfex;
     c2c:	2d 81       	ldd	r18, Y+5	; 0x05
     c2e:	3e 81       	ldd	r19, Y+6	; 0x06
     c30:	4f 81       	ldd	r20, Y+7	; 0x07
     c32:	58 85       	ldd	r21, Y+8	; 0x08
     c34:	69 a1       	ldd	r22, Y+33	; 0x21
     c36:	7a a1       	ldd	r23, Y+34	; 0x22
     c38:	8b a1       	ldd	r24, Y+35	; 0x23
     c3a:	9c a1       	ldd	r25, Y+36	; 0x24
     c3c:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
     c40:	6d 87       	std	Y+13, r22	; 0x0d
     c42:	7e 87       	std	Y+14, r23	; 0x0e
     c44:	8f 87       	std	Y+15, r24	; 0x0f
     c46:	98 8b       	std	Y+16, r25	; 0x10
		gy += mpu6050_mahonytwoKpDef * halfey;
     c48:	a7 01       	movw	r20, r14
     c4a:	96 01       	movw	r18, r12
     c4c:	c3 01       	movw	r24, r6
     c4e:	b2 01       	movw	r22, r4
     c50:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
     c54:	69 8b       	std	Y+17, r22	; 0x11
     c56:	7a 8b       	std	Y+18, r23	; 0x12
     c58:	8b 8b       	std	Y+19, r24	; 0x13
     c5a:	9c 8b       	std	Y+20, r25	; 0x14
		gz += mpu6050_mahonytwoKpDef * halfez;
     c5c:	29 85       	ldd	r18, Y+9	; 0x09
     c5e:	3a 85       	ldd	r19, Y+10	; 0x0a
     c60:	4b 85       	ldd	r20, Y+11	; 0x0b
     c62:	5c 85       	ldd	r21, Y+12	; 0x0c
     c64:	c5 01       	movw	r24, r10
     c66:	b4 01       	movw	r22, r8
     c68:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
     c6c:	6d 8b       	std	Y+21, r22	; 0x15
     c6e:	7e 8b       	std	Y+22, r23	; 0x16
     c70:	8f 8b       	std	Y+23, r24	; 0x17
     c72:	98 8f       	std	Y+24, r25	; 0x18
	}

	// Integrate rate of change of quaternion
	gx *= (0.5f * (1.0f / mpu6050_mahonysampleFreq));		// pre-multiply common factors
     c74:	2a e8       	ldi	r18, 0x8A	; 138
     c76:	3b e4       	ldi	r19, 0x4B	; 75
     c78:	46 e0       	ldi	r20, 0x06	; 6
     c7a:	5c e3       	ldi	r21, 0x3C	; 60
     c7c:	6d 85       	ldd	r22, Y+13	; 0x0d
     c7e:	7e 85       	ldd	r23, Y+14	; 0x0e
     c80:	8f 85       	ldd	r24, Y+15	; 0x0f
     c82:	98 89       	ldd	r25, Y+16	; 0x10
     c84:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     c88:	6d 83       	std	Y+5, r22	; 0x05
     c8a:	7e 83       	std	Y+6, r23	; 0x06
     c8c:	8f 83       	std	Y+7, r24	; 0x07
     c8e:	98 87       	std	Y+8, r25	; 0x08
	gy *= (0.5f * (1.0f / mpu6050_mahonysampleFreq));
     c90:	2a e8       	ldi	r18, 0x8A	; 138
     c92:	3b e4       	ldi	r19, 0x4B	; 75
     c94:	46 e0       	ldi	r20, 0x06	; 6
     c96:	5c e3       	ldi	r21, 0x3C	; 60
     c98:	69 89       	ldd	r22, Y+17	; 0x11
     c9a:	7a 89       	ldd	r23, Y+18	; 0x12
     c9c:	8b 89       	ldd	r24, Y+19	; 0x13
     c9e:	9c 89       	ldd	r25, Y+20	; 0x14
     ca0:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     ca4:	69 87       	std	Y+9, r22	; 0x09
     ca6:	7a 87       	std	Y+10, r23	; 0x0a
     ca8:	8b 87       	std	Y+11, r24	; 0x0b
     caa:	9c 87       	std	Y+12, r25	; 0x0c
	gz *= (0.5f * (1.0f / mpu6050_mahonysampleFreq));
     cac:	2a e8       	ldi	r18, 0x8A	; 138
     cae:	3b e4       	ldi	r19, 0x4B	; 75
     cb0:	46 e0       	ldi	r20, 0x06	; 6
     cb2:	5c e3       	ldi	r21, 0x3C	; 60
     cb4:	6d 89       	ldd	r22, Y+21	; 0x15
     cb6:	7e 89       	ldd	r23, Y+22	; 0x16
     cb8:	8f 89       	ldd	r24, Y+23	; 0x17
     cba:	98 8d       	ldd	r25, Y+24	; 0x18
     cbc:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     cc0:	6d 87       	std	Y+13, r22	; 0x0d
     cc2:	7e 87       	std	Y+14, r23	; 0x0e
     cc4:	8f 87       	std	Y+15, r24	; 0x0f
     cc6:	98 8b       	std	Y+16, r25	; 0x10
	qa = q0;
     cc8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     ccc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     cd0:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
     cd4:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
     cd8:	89 8b       	std	Y+17, r24	; 0x11
     cda:	9a 8b       	std	Y+18, r25	; 0x12
     cdc:	ab 8b       	std	Y+19, r26	; 0x13
     cde:	bc 8b       	std	Y+20, r27	; 0x14
	qb = q1;
     ce0:	80 90 1c 01 	lds	r8, 0x011C	; 0x80011c <q1>
     ce4:	90 90 1d 01 	lds	r9, 0x011D	; 0x80011d <q1+0x1>
     ce8:	a0 90 1e 01 	lds	r10, 0x011E	; 0x80011e <q1+0x2>
     cec:	b0 90 1f 01 	lds	r11, 0x011F	; 0x80011f <q1+0x3>
	qc = q2;
     cf0:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <q2>
     cf4:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <q2+0x1>
     cf8:	a0 91 1a 01 	lds	r26, 0x011A	; 0x80011a <q2+0x2>
     cfc:	b0 91 1b 01 	lds	r27, 0x011B	; 0x80011b <q2+0x3>
     d00:	8d 8b       	std	Y+21, r24	; 0x15
     d02:	9e 8b       	std	Y+22, r25	; 0x16
     d04:	af 8b       	std	Y+23, r26	; 0x17
     d06:	b8 8f       	std	Y+24, r27	; 0x18
	q0 += (-qb * gx - qc * gy - q3 * gz);
     d08:	40 90 14 01 	lds	r4, 0x0114	; 0x800114 <q3>
     d0c:	50 90 15 01 	lds	r5, 0x0115	; 0x800115 <q3+0x1>
     d10:	60 90 16 01 	lds	r6, 0x0116	; 0x800116 <q3+0x2>
     d14:	70 90 17 01 	lds	r7, 0x0117	; 0x800117 <q3+0x3>
     d18:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <__data_start>
     d1c:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <__data_start+0x1>
     d20:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <__data_start+0x2>
     d24:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <__data_start+0x3>
     d28:	c5 01       	movw	r24, r10
     d2a:	b4 01       	movw	r22, r8
     d2c:	90 58       	subi	r25, 0x80	; 128
     d2e:	2d 81       	ldd	r18, Y+5	; 0x05
     d30:	3e 81       	ldd	r19, Y+6	; 0x06
     d32:	4f 81       	ldd	r20, Y+7	; 0x07
     d34:	58 85       	ldd	r21, Y+8	; 0x08
     d36:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     d3a:	69 83       	std	Y+1, r22	; 0x01
     d3c:	7a 83       	std	Y+2, r23	; 0x02
     d3e:	8b 83       	std	Y+3, r24	; 0x03
     d40:	9c 83       	std	Y+4, r25	; 0x04
     d42:	2d 89       	ldd	r18, Y+21	; 0x15
     d44:	3e 89       	ldd	r19, Y+22	; 0x16
     d46:	4f 89       	ldd	r20, Y+23	; 0x17
     d48:	58 8d       	ldd	r21, Y+24	; 0x18
     d4a:	69 85       	ldd	r22, Y+9	; 0x09
     d4c:	7a 85       	ldd	r23, Y+10	; 0x0a
     d4e:	8b 85       	ldd	r24, Y+11	; 0x0b
     d50:	9c 85       	ldd	r25, Y+12	; 0x0c
     d52:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     d56:	9b 01       	movw	r18, r22
     d58:	ac 01       	movw	r20, r24
     d5a:	69 81       	ldd	r22, Y+1	; 0x01
     d5c:	7a 81       	ldd	r23, Y+2	; 0x02
     d5e:	8b 81       	ldd	r24, Y+3	; 0x03
     d60:	9c 81       	ldd	r25, Y+4	; 0x04
     d62:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <__subsf3>
     d66:	69 83       	std	Y+1, r22	; 0x01
     d68:	7a 83       	std	Y+2, r23	; 0x02
     d6a:	8b 83       	std	Y+3, r24	; 0x03
     d6c:	9c 83       	std	Y+4, r25	; 0x04
     d6e:	a3 01       	movw	r20, r6
     d70:	92 01       	movw	r18, r4
     d72:	6d 85       	ldd	r22, Y+13	; 0x0d
     d74:	7e 85       	ldd	r23, Y+14	; 0x0e
     d76:	8f 85       	ldd	r24, Y+15	; 0x0f
     d78:	98 89       	ldd	r25, Y+16	; 0x10
     d7a:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     d7e:	9b 01       	movw	r18, r22
     d80:	ac 01       	movw	r20, r24
     d82:	69 81       	ldd	r22, Y+1	; 0x01
     d84:	7a 81       	ldd	r23, Y+2	; 0x02
     d86:	8b 81       	ldd	r24, Y+3	; 0x03
     d88:	9c 81       	ldd	r25, Y+4	; 0x04
     d8a:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <__subsf3>
     d8e:	a7 01       	movw	r20, r14
     d90:	96 01       	movw	r18, r12
     d92:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
     d96:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
     d9a:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
     d9e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
     da2:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
	q1 += (qa * gx + qc * gz - q3 * gy);
     da6:	40 90 14 01 	lds	r4, 0x0114	; 0x800114 <q3>
     daa:	50 90 15 01 	lds	r5, 0x0115	; 0x800115 <q3+0x1>
     dae:	60 90 16 01 	lds	r6, 0x0116	; 0x800116 <q3+0x2>
     db2:	70 90 17 01 	lds	r7, 0x0117	; 0x800117 <q3+0x3>
     db6:	c0 90 1c 01 	lds	r12, 0x011C	; 0x80011c <q1>
     dba:	d0 90 1d 01 	lds	r13, 0x011D	; 0x80011d <q1+0x1>
     dbe:	e0 90 1e 01 	lds	r14, 0x011E	; 0x80011e <q1+0x2>
     dc2:	f0 90 1f 01 	lds	r15, 0x011F	; 0x80011f <q1+0x3>
     dc6:	29 89       	ldd	r18, Y+17	; 0x11
     dc8:	3a 89       	ldd	r19, Y+18	; 0x12
     dca:	4b 89       	ldd	r20, Y+19	; 0x13
     dcc:	5c 89       	ldd	r21, Y+20	; 0x14
     dce:	6d 81       	ldd	r22, Y+5	; 0x05
     dd0:	7e 81       	ldd	r23, Y+6	; 0x06
     dd2:	8f 81       	ldd	r24, Y+7	; 0x07
     dd4:	98 85       	ldd	r25, Y+8	; 0x08
     dd6:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     dda:	69 83       	std	Y+1, r22	; 0x01
     ddc:	7a 83       	std	Y+2, r23	; 0x02
     dde:	8b 83       	std	Y+3, r24	; 0x03
     de0:	9c 83       	std	Y+4, r25	; 0x04
     de2:	2d 89       	ldd	r18, Y+21	; 0x15
     de4:	3e 89       	ldd	r19, Y+22	; 0x16
     de6:	4f 89       	ldd	r20, Y+23	; 0x17
     de8:	58 8d       	ldd	r21, Y+24	; 0x18
     dea:	6d 85       	ldd	r22, Y+13	; 0x0d
     dec:	7e 85       	ldd	r23, Y+14	; 0x0e
     dee:	8f 85       	ldd	r24, Y+15	; 0x0f
     df0:	98 89       	ldd	r25, Y+16	; 0x10
     df2:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     df6:	9b 01       	movw	r18, r22
     df8:	ac 01       	movw	r20, r24
     dfa:	69 81       	ldd	r22, Y+1	; 0x01
     dfc:	7a 81       	ldd	r23, Y+2	; 0x02
     dfe:	8b 81       	ldd	r24, Y+3	; 0x03
     e00:	9c 81       	ldd	r25, Y+4	; 0x04
     e02:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
     e06:	69 83       	std	Y+1, r22	; 0x01
     e08:	7a 83       	std	Y+2, r23	; 0x02
     e0a:	8b 83       	std	Y+3, r24	; 0x03
     e0c:	9c 83       	std	Y+4, r25	; 0x04
     e0e:	a3 01       	movw	r20, r6
     e10:	92 01       	movw	r18, r4
     e12:	69 85       	ldd	r22, Y+9	; 0x09
     e14:	7a 85       	ldd	r23, Y+10	; 0x0a
     e16:	8b 85       	ldd	r24, Y+11	; 0x0b
     e18:	9c 85       	ldd	r25, Y+12	; 0x0c
     e1a:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     e1e:	9b 01       	movw	r18, r22
     e20:	ac 01       	movw	r20, r24
     e22:	69 81       	ldd	r22, Y+1	; 0x01
     e24:	7a 81       	ldd	r23, Y+2	; 0x02
     e26:	8b 81       	ldd	r24, Y+3	; 0x03
     e28:	9c 81       	ldd	r25, Y+4	; 0x04
     e2a:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <__subsf3>
     e2e:	a7 01       	movw	r20, r14
     e30:	96 01       	movw	r18, r12
     e32:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
     e36:	60 93 1c 01 	sts	0x011C, r22	; 0x80011c <q1>
     e3a:	70 93 1d 01 	sts	0x011D, r23	; 0x80011d <q1+0x1>
     e3e:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <q1+0x2>
     e42:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <q1+0x3>
	q2 += (qa * gy - qb * gz + q3 * gx);
     e46:	40 90 14 01 	lds	r4, 0x0114	; 0x800114 <q3>
     e4a:	50 90 15 01 	lds	r5, 0x0115	; 0x800115 <q3+0x1>
     e4e:	60 90 16 01 	lds	r6, 0x0116	; 0x800116 <q3+0x2>
     e52:	70 90 17 01 	lds	r7, 0x0117	; 0x800117 <q3+0x3>
     e56:	c0 90 18 01 	lds	r12, 0x0118	; 0x800118 <q2>
     e5a:	d0 90 19 01 	lds	r13, 0x0119	; 0x800119 <q2+0x1>
     e5e:	e0 90 1a 01 	lds	r14, 0x011A	; 0x80011a <q2+0x2>
     e62:	f0 90 1b 01 	lds	r15, 0x011B	; 0x80011b <q2+0x3>
     e66:	29 89       	ldd	r18, Y+17	; 0x11
     e68:	3a 89       	ldd	r19, Y+18	; 0x12
     e6a:	4b 89       	ldd	r20, Y+19	; 0x13
     e6c:	5c 89       	ldd	r21, Y+20	; 0x14
     e6e:	69 85       	ldd	r22, Y+9	; 0x09
     e70:	7a 85       	ldd	r23, Y+10	; 0x0a
     e72:	8b 85       	ldd	r24, Y+11	; 0x0b
     e74:	9c 85       	ldd	r25, Y+12	; 0x0c
     e76:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     e7a:	69 83       	std	Y+1, r22	; 0x01
     e7c:	7a 83       	std	Y+2, r23	; 0x02
     e7e:	8b 83       	std	Y+3, r24	; 0x03
     e80:	9c 83       	std	Y+4, r25	; 0x04
     e82:	a5 01       	movw	r20, r10
     e84:	94 01       	movw	r18, r8
     e86:	6d 85       	ldd	r22, Y+13	; 0x0d
     e88:	7e 85       	ldd	r23, Y+14	; 0x0e
     e8a:	8f 85       	ldd	r24, Y+15	; 0x0f
     e8c:	98 89       	ldd	r25, Y+16	; 0x10
     e8e:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     e92:	9b 01       	movw	r18, r22
     e94:	ac 01       	movw	r20, r24
     e96:	69 81       	ldd	r22, Y+1	; 0x01
     e98:	7a 81       	ldd	r23, Y+2	; 0x02
     e9a:	8b 81       	ldd	r24, Y+3	; 0x03
     e9c:	9c 81       	ldd	r25, Y+4	; 0x04
     e9e:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <__subsf3>
     ea2:	69 83       	std	Y+1, r22	; 0x01
     ea4:	7a 83       	std	Y+2, r23	; 0x02
     ea6:	8b 83       	std	Y+3, r24	; 0x03
     ea8:	9c 83       	std	Y+4, r25	; 0x04
     eaa:	a3 01       	movw	r20, r6
     eac:	92 01       	movw	r18, r4
     eae:	6d 81       	ldd	r22, Y+5	; 0x05
     eb0:	7e 81       	ldd	r23, Y+6	; 0x06
     eb2:	8f 81       	ldd	r24, Y+7	; 0x07
     eb4:	98 85       	ldd	r25, Y+8	; 0x08
     eb6:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     eba:	9b 01       	movw	r18, r22
     ebc:	ac 01       	movw	r20, r24
     ebe:	69 81       	ldd	r22, Y+1	; 0x01
     ec0:	7a 81       	ldd	r23, Y+2	; 0x02
     ec2:	8b 81       	ldd	r24, Y+3	; 0x03
     ec4:	9c 81       	ldd	r25, Y+4	; 0x04
     ec6:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
     eca:	a7 01       	movw	r20, r14
     ecc:	96 01       	movw	r18, r12
     ece:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
     ed2:	60 93 18 01 	sts	0x0118, r22	; 0x800118 <q2>
     ed6:	70 93 19 01 	sts	0x0119, r23	; 0x800119 <q2+0x1>
     eda:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <q2+0x2>
     ede:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <q2+0x3>
	q3 += (qa * gz + qb * gy - qc * gx);
     ee2:	c0 90 14 01 	lds	r12, 0x0114	; 0x800114 <q3>
     ee6:	d0 90 15 01 	lds	r13, 0x0115	; 0x800115 <q3+0x1>
     eea:	e0 90 16 01 	lds	r14, 0x0116	; 0x800116 <q3+0x2>
     eee:	f0 90 17 01 	lds	r15, 0x0117	; 0x800117 <q3+0x3>
     ef2:	29 89       	ldd	r18, Y+17	; 0x11
     ef4:	3a 89       	ldd	r19, Y+18	; 0x12
     ef6:	4b 89       	ldd	r20, Y+19	; 0x13
     ef8:	5c 89       	ldd	r21, Y+20	; 0x14
     efa:	6d 85       	ldd	r22, Y+13	; 0x0d
     efc:	7e 85       	ldd	r23, Y+14	; 0x0e
     efe:	8f 85       	ldd	r24, Y+15	; 0x0f
     f00:	98 89       	ldd	r25, Y+16	; 0x10
     f02:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     f06:	2b 01       	movw	r4, r22
     f08:	3c 01       	movw	r6, r24
     f0a:	a5 01       	movw	r20, r10
     f0c:	94 01       	movw	r18, r8
     f0e:	69 85       	ldd	r22, Y+9	; 0x09
     f10:	7a 85       	ldd	r23, Y+10	; 0x0a
     f12:	8b 85       	ldd	r24, Y+11	; 0x0b
     f14:	9c 85       	ldd	r25, Y+12	; 0x0c
     f16:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     f1a:	9b 01       	movw	r18, r22
     f1c:	ac 01       	movw	r20, r24
     f1e:	c3 01       	movw	r24, r6
     f20:	b2 01       	movw	r22, r4
     f22:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
     f26:	4b 01       	movw	r8, r22
     f28:	5c 01       	movw	r10, r24
     f2a:	2d 89       	ldd	r18, Y+21	; 0x15
     f2c:	3e 89       	ldd	r19, Y+22	; 0x16
     f2e:	4f 89       	ldd	r20, Y+23	; 0x17
     f30:	58 8d       	ldd	r21, Y+24	; 0x18
     f32:	6d 81       	ldd	r22, Y+5	; 0x05
     f34:	7e 81       	ldd	r23, Y+6	; 0x06
     f36:	8f 81       	ldd	r24, Y+7	; 0x07
     f38:	98 85       	ldd	r25, Y+8	; 0x08
     f3a:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
     f3e:	9b 01       	movw	r18, r22
     f40:	ac 01       	movw	r20, r24
     f42:	c5 01       	movw	r24, r10
     f44:	b4 01       	movw	r22, r8
     f46:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <__subsf3>
     f4a:	a7 01       	movw	r20, r14
     f4c:	96 01       	movw	r18, r12
     f4e:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
     f52:	60 93 14 01 	sts	0x0114, r22	; 0x800114 <q3>
     f56:	70 93 15 01 	sts	0x0115, r23	; 0x800115 <q3+0x1>
     f5a:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <q3+0x2>
     f5e:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <q3+0x3>

	// Normalise quaternion
	norm = sqrt(q0 * q0 + q1 * q1 + q2 * q2 + q3 * q3);
     f62:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <__data_start>
     f66:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <__data_start+0x1>
     f6a:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <__data_start+0x2>
     f6e:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <__data_start+0x3>
     f72:	80 90 00 01 	lds	r8, 0x0100	; 0x800100 <__data_start>
     f76:	90 90 01 01 	lds	r9, 0x0101	; 0x800101 <__data_start+0x1>
     f7a:	a0 90 02 01 	lds	r10, 0x0102	; 0x800102 <__data_start+0x2>
     f7e:	b0 90 03 01 	lds	r11, 0x0103	; 0x800103 <__data_start+0x3>
     f82:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <q1>
     f86:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <q1+0x1>
     f8a:	a0 91 1e 01 	lds	r26, 0x011E	; 0x80011e <q1+0x2>
     f8e:	b0 91 1f 01 	lds	r27, 0x011F	; 0x80011f <q1+0x3>
     f92:	8d 83       	std	Y+5, r24	; 0x05
     f94:	9e 83       	std	Y+6, r25	; 0x06
     f96:	af 83       	std	Y+7, r26	; 0x07
     f98:	b8 87       	std	Y+8, r27	; 0x08
     f9a:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <q1>
     f9e:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <q1+0x1>
     fa2:	a0 91 1e 01 	lds	r26, 0x011E	; 0x80011e <q1+0x2>
     fa6:	b0 91 1f 01 	lds	r27, 0x011F	; 0x80011f <q1+0x3>
     faa:	89 87       	std	Y+9, r24	; 0x09
     fac:	9a 87       	std	Y+10, r25	; 0x0a
     fae:	ab 87       	std	Y+11, r26	; 0x0b
     fb0:	bc 87       	std	Y+12, r27	; 0x0c
     fb2:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <q2>
     fb6:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <q2+0x1>
     fba:	a0 91 1a 01 	lds	r26, 0x011A	; 0x80011a <q2+0x2>
     fbe:	b0 91 1b 01 	lds	r27, 0x011B	; 0x80011b <q2+0x3>
     fc2:	8d 87       	std	Y+13, r24	; 0x0d
     fc4:	9e 87       	std	Y+14, r25	; 0x0e
     fc6:	af 87       	std	Y+15, r26	; 0x0f
     fc8:	b8 8b       	std	Y+16, r27	; 0x10
     fca:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <q2>
     fce:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <q2+0x1>
     fd2:	a0 91 1a 01 	lds	r26, 0x011A	; 0x80011a <q2+0x2>
     fd6:	b0 91 1b 01 	lds	r27, 0x011B	; 0x80011b <q2+0x3>
     fda:	89 8b       	std	Y+17, r24	; 0x11
     fdc:	9a 8b       	std	Y+18, r25	; 0x12
     fde:	ab 8b       	std	Y+19, r26	; 0x13
     fe0:	bc 8b       	std	Y+20, r27	; 0x14
     fe2:	40 90 14 01 	lds	r4, 0x0114	; 0x800114 <q3>
     fe6:	50 90 15 01 	lds	r5, 0x0115	; 0x800115 <q3+0x1>
     fea:	60 90 16 01 	lds	r6, 0x0116	; 0x800116 <q3+0x2>
     fee:	70 90 17 01 	lds	r7, 0x0117	; 0x800117 <q3+0x3>
     ff2:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <q3>
     ff6:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <q3+0x1>
     ffa:	a0 91 16 01 	lds	r26, 0x0116	; 0x800116 <q3+0x2>
     ffe:	b0 91 17 01 	lds	r27, 0x0117	; 0x800117 <q3+0x3>
    1002:	8d 8b       	std	Y+21, r24	; 0x15
    1004:	9e 8b       	std	Y+22, r25	; 0x16
    1006:	af 8b       	std	Y+23, r26	; 0x17
    1008:	b8 8f       	std	Y+24, r27	; 0x18
    100a:	a5 01       	movw	r20, r10
    100c:	94 01       	movw	r18, r8
    100e:	c7 01       	movw	r24, r14
    1010:	b6 01       	movw	r22, r12
    1012:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    1016:	69 83       	std	Y+1, r22	; 0x01
    1018:	7a 83       	std	Y+2, r23	; 0x02
    101a:	8b 83       	std	Y+3, r24	; 0x03
    101c:	9c 83       	std	Y+4, r25	; 0x04
    101e:	29 85       	ldd	r18, Y+9	; 0x09
    1020:	3a 85       	ldd	r19, Y+10	; 0x0a
    1022:	4b 85       	ldd	r20, Y+11	; 0x0b
    1024:	5c 85       	ldd	r21, Y+12	; 0x0c
    1026:	6d 81       	ldd	r22, Y+5	; 0x05
    1028:	7e 81       	ldd	r23, Y+6	; 0x06
    102a:	8f 81       	ldd	r24, Y+7	; 0x07
    102c:	98 85       	ldd	r25, Y+8	; 0x08
    102e:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    1032:	9b 01       	movw	r18, r22
    1034:	ac 01       	movw	r20, r24
    1036:	69 81       	ldd	r22, Y+1	; 0x01
    1038:	7a 81       	ldd	r23, Y+2	; 0x02
    103a:	8b 81       	ldd	r24, Y+3	; 0x03
    103c:	9c 81       	ldd	r25, Y+4	; 0x04
    103e:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
    1042:	69 83       	std	Y+1, r22	; 0x01
    1044:	7a 83       	std	Y+2, r23	; 0x02
    1046:	8b 83       	std	Y+3, r24	; 0x03
    1048:	9c 83       	std	Y+4, r25	; 0x04
    104a:	29 89       	ldd	r18, Y+17	; 0x11
    104c:	3a 89       	ldd	r19, Y+18	; 0x12
    104e:	4b 89       	ldd	r20, Y+19	; 0x13
    1050:	5c 89       	ldd	r21, Y+20	; 0x14
    1052:	6d 85       	ldd	r22, Y+13	; 0x0d
    1054:	7e 85       	ldd	r23, Y+14	; 0x0e
    1056:	8f 85       	ldd	r24, Y+15	; 0x0f
    1058:	98 89       	ldd	r25, Y+16	; 0x10
    105a:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    105e:	9b 01       	movw	r18, r22
    1060:	ac 01       	movw	r20, r24
    1062:	69 81       	ldd	r22, Y+1	; 0x01
    1064:	7a 81       	ldd	r23, Y+2	; 0x02
    1066:	8b 81       	ldd	r24, Y+3	; 0x03
    1068:	9c 81       	ldd	r25, Y+4	; 0x04
    106a:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
    106e:	69 83       	std	Y+1, r22	; 0x01
    1070:	7a 83       	std	Y+2, r23	; 0x02
    1072:	8b 83       	std	Y+3, r24	; 0x03
    1074:	9c 83       	std	Y+4, r25	; 0x04
    1076:	a5 01       	movw	r20, r10
    1078:	94 01       	movw	r18, r8
    107a:	c7 01       	movw	r24, r14
    107c:	b6 01       	movw	r22, r12
    107e:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    1082:	6b 01       	movw	r12, r22
    1084:	7c 01       	movw	r14, r24
    1086:	29 85       	ldd	r18, Y+9	; 0x09
    1088:	3a 85       	ldd	r19, Y+10	; 0x0a
    108a:	4b 85       	ldd	r20, Y+11	; 0x0b
    108c:	5c 85       	ldd	r21, Y+12	; 0x0c
    108e:	6d 81       	ldd	r22, Y+5	; 0x05
    1090:	7e 81       	ldd	r23, Y+6	; 0x06
    1092:	8f 81       	ldd	r24, Y+7	; 0x07
    1094:	98 85       	ldd	r25, Y+8	; 0x08
    1096:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    109a:	9b 01       	movw	r18, r22
    109c:	ac 01       	movw	r20, r24
    109e:	c7 01       	movw	r24, r14
    10a0:	b6 01       	movw	r22, r12
    10a2:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
    10a6:	6b 01       	movw	r12, r22
    10a8:	7c 01       	movw	r14, r24
    10aa:	29 89       	ldd	r18, Y+17	; 0x11
    10ac:	3a 89       	ldd	r19, Y+18	; 0x12
    10ae:	4b 89       	ldd	r20, Y+19	; 0x13
    10b0:	5c 89       	ldd	r21, Y+20	; 0x14
    10b2:	6d 85       	ldd	r22, Y+13	; 0x0d
    10b4:	7e 85       	ldd	r23, Y+14	; 0x0e
    10b6:	8f 85       	ldd	r24, Y+15	; 0x0f
    10b8:	98 89       	ldd	r25, Y+16	; 0x10
    10ba:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    10be:	9b 01       	movw	r18, r22
    10c0:	ac 01       	movw	r20, r24
    10c2:	c7 01       	movw	r24, r14
    10c4:	b6 01       	movw	r22, r12
    10c6:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
    10ca:	6b 01       	movw	r12, r22
    10cc:	7c 01       	movw	r14, r24
    10ce:	2d 89       	ldd	r18, Y+21	; 0x15
    10d0:	3e 89       	ldd	r19, Y+22	; 0x16
    10d2:	4f 89       	ldd	r20, Y+23	; 0x17
    10d4:	58 8d       	ldd	r21, Y+24	; 0x18
    10d6:	c3 01       	movw	r24, r6
    10d8:	b2 01       	movw	r22, r4
    10da:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    10de:	9b 01       	movw	r18, r22
    10e0:	ac 01       	movw	r20, r24
    10e2:	c7 01       	movw	r24, r14
    10e4:	b6 01       	movw	r22, r12
    10e6:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
    10ea:	0e 94 71 0f 	call	0x1ee2	; 0x1ee2 <sqrt>
    10ee:	6b 01       	movw	r12, r22
    10f0:	7c 01       	movw	r14, r24
	q0 /= norm;
    10f2:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
    10f6:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_start+0x1>
    10fa:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_start+0x2>
    10fe:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_start+0x3>
    1102:	a7 01       	movw	r20, r14
    1104:	96 01       	movw	r18, r12
    1106:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__divsf3>
    110a:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
    110e:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
    1112:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
    1116:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
	q1 /= norm;
    111a:	60 91 1c 01 	lds	r22, 0x011C	; 0x80011c <q1>
    111e:	70 91 1d 01 	lds	r23, 0x011D	; 0x80011d <q1+0x1>
    1122:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <q1+0x2>
    1126:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <q1+0x3>
    112a:	a7 01       	movw	r20, r14
    112c:	96 01       	movw	r18, r12
    112e:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__divsf3>
    1132:	60 93 1c 01 	sts	0x011C, r22	; 0x80011c <q1>
    1136:	70 93 1d 01 	sts	0x011D, r23	; 0x80011d <q1+0x1>
    113a:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <q1+0x2>
    113e:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <q1+0x3>
	q2 /= norm;
    1142:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <q2>
    1146:	70 91 19 01 	lds	r23, 0x0119	; 0x800119 <q2+0x1>
    114a:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <q2+0x2>
    114e:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <q2+0x3>
    1152:	a7 01       	movw	r20, r14
    1154:	96 01       	movw	r18, r12
    1156:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__divsf3>
    115a:	60 93 18 01 	sts	0x0118, r22	; 0x800118 <q2>
    115e:	70 93 19 01 	sts	0x0119, r23	; 0x800119 <q2+0x1>
    1162:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <q2+0x2>
    1166:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <q2+0x3>
	q3 /= norm;
    116a:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <q3>
    116e:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <q3+0x1>
    1172:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <q3+0x2>
    1176:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <q3+0x3>
    117a:	a7 01       	movw	r20, r14
    117c:	96 01       	movw	r18, r12
    117e:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__divsf3>
    1182:	60 93 14 01 	sts	0x0114, r22	; 0x800114 <q3>
    1186:	70 93 15 01 	sts	0x0115, r23	; 0x800115 <q3+0x1>
    118a:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <q3+0x2>
    118e:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <q3+0x3>
}
    1192:	a4 96       	adiw	r28, 0x24	; 36
    1194:	0f b6       	in	r0, 0x3f	; 63
    1196:	f8 94       	cli
    1198:	de bf       	out	0x3e, r29	; 62
    119a:	0f be       	out	0x3f, r0	; 63
    119c:	cd bf       	out	0x3d, r28	; 61
    119e:	df 91       	pop	r29
    11a0:	cf 91       	pop	r28
    11a2:	1f 91       	pop	r17
    11a4:	0f 91       	pop	r16
    11a6:	ff 90       	pop	r15
    11a8:	ef 90       	pop	r14
    11aa:	df 90       	pop	r13
    11ac:	cf 90       	pop	r12
    11ae:	bf 90       	pop	r11
    11b0:	af 90       	pop	r10
    11b2:	9f 90       	pop	r9
    11b4:	8f 90       	pop	r8
    11b6:	7f 90       	pop	r7
    11b8:	6f 90       	pop	r6
    11ba:	5f 90       	pop	r5
    11bc:	4f 90       	pop	r4
    11be:	08 95       	ret

000011c0 <mpu6050_updateQuaternion>:

/*
 * update quaternion
 */
void mpu6050_updateQuaternion() {
    11c0:	4f 92       	push	r4
    11c2:	5f 92       	push	r5
    11c4:	6f 92       	push	r6
    11c6:	7f 92       	push	r7
    11c8:	af 92       	push	r10
    11ca:	bf 92       	push	r11
    11cc:	cf 92       	push	r12
    11ce:	df 92       	push	r13
    11d0:	ef 92       	push	r14
    11d2:	ff 92       	push	r15
    11d4:	0f 93       	push	r16
    11d6:	1f 93       	push	r17
    11d8:	cf 93       	push	r28
    11da:	df 93       	push	r29
    11dc:	cd b7       	in	r28, 0x3d	; 61
    11de:	de b7       	in	r29, 0x3e	; 62
    11e0:	2b 97       	sbiw	r28, 0x0b	; 11
    11e2:	0f b6       	in	r0, 0x3f	; 63
    11e4:	f8 94       	cli
    11e6:	de bf       	out	0x3e, r29	; 62
    11e8:	0f be       	out	0x3f, r0	; 63
    11ea:	cd bf       	out	0x3d, r28	; 61
	double gyrs = 0;
	double gzrs = 0;

	//get raw data
	while(1) {
		mpu6050_readBit(MPU6050_RA_INT_STATUS, MPU6050_INTERRUPT_DATA_RDY_BIT, (uint8_t *)buffer);
    11ec:	45 e6       	ldi	r20, 0x65	; 101
    11ee:	51 e0       	ldi	r21, 0x01	; 1
    11f0:	60 e0       	ldi	r22, 0x00	; 0
    11f2:	8a e3       	ldi	r24, 0x3A	; 58
    11f4:	0e 94 04 03 	call	0x608	; 0x608 <mpu6050_readBit>
		if(buffer[0])
    11f8:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <buffer>
    11fc:	81 11       	cpse	r24, r1
    11fe:	05 c0       	rjmp	.+10     	; 0x120a <mpu6050_updateQuaternion+0x4a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1200:	2a e1       	ldi	r18, 0x1A	; 26
    1202:	2a 95       	dec	r18
    1204:	f1 f7       	brne	.-4      	; 0x1202 <mpu6050_updateQuaternion+0x42>
    1206:	00 c0       	rjmp	.+0      	; 0x1208 <mpu6050_updateQuaternion+0x48>
    1208:	f1 cf       	rjmp	.-30     	; 0x11ec <mpu6050_updateQuaternion+0x2c>
			break;
		_delay_us(10);
	}

	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14, (uint8_t *)buffer);
    120a:	45 e6       	ldi	r20, 0x65	; 101
    120c:	51 e0       	ldi	r21, 0x01	; 1
    120e:	6e e0       	ldi	r22, 0x0E	; 14
    1210:	8b e3       	ldi	r24, 0x3B	; 59
    1212:	0e 94 78 02 	call	0x4f0	; 0x4f0 <mpu6050_readBytes>
    ax = (((int16_t)buffer[0]) << 8) | buffer[1];
    1216:	e5 e6       	ldi	r30, 0x65	; 101
    1218:	f1 e0       	ldi	r31, 0x01	; 1
    121a:	80 81       	ld	r24, Z
    121c:	61 81       	ldd	r22, Z+1	; 0x01
    ay = (((int16_t)buffer[2]) << 8) | buffer[3];
    121e:	02 81       	ldd	r16, Z+2	; 0x02
    1220:	33 81       	ldd	r19, Z+3	; 0x03
    1222:	39 87       	std	Y+9, r19	; 0x09
    az = (((int16_t)buffer[4]) << 8) | buffer[5];
    1224:	14 81       	ldd	r17, Z+4	; 0x04
    1226:	95 81       	ldd	r25, Z+5	; 0x05
    1228:	9a 87       	std	Y+10, r25	; 0x0a
    gx = (((int16_t)buffer[8]) << 8) | buffer[9];
    122a:	60 84       	ldd	r6, Z+8	; 0x08
    122c:	71 84       	ldd	r7, Z+9	; 0x09
    gy = (((int16_t)buffer[10]) << 8) | buffer[11];
    122e:	52 84       	ldd	r5, Z+10	; 0x0a
    1230:	43 84       	ldd	r4, Z+11	; 0x0b
    gz = (((int16_t)buffer[12]) << 8) | buffer[13];
    1232:	e4 84       	ldd	r14, Z+12	; 0x0c
    1234:	f5 84       	ldd	r15, Z+13	; 0x0d
	gyrs = (double)(gy)/MPU6050_GGAIN*0.01745329; //degree to radians
	gzrs = (double)(gz)/MPU6050_GGAIN*0.01745329; //degree to radians
	#endif

    //compute data
    mpu6050_mahonyUpdate(gxrs, gyrs, gzrs, axg, ayg, azg);
    1236:	70 e0       	ldi	r23, 0x00	; 0
    1238:	78 2b       	or	r23, r24
    123a:	07 2e       	mov	r0, r23
    123c:	00 0c       	add	r0, r0
    123e:	88 0b       	sbc	r24, r24
    1240:	99 0b       	sbc	r25, r25
    1242:	0e 94 eb 0d 	call	0x1bd6	; 0x1bd6 <__floatsisf>
    1246:	20 e0       	ldi	r18, 0x00	; 0
    1248:	30 e0       	ldi	r19, 0x00	; 0
    124a:	40 e8       	ldi	r20, 0x80	; 128
    124c:	58 e3       	ldi	r21, 0x38	; 56
    124e:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    1252:	5b 01       	movw	r10, r22
    1254:	6c 01       	movw	r12, r24
    1256:	6f 2d       	mov	r22, r15
    1258:	70 e0       	ldi	r23, 0x00	; 0
    125a:	7e 29       	or	r23, r14
    125c:	63 5e       	subi	r22, 0xE3	; 227
    125e:	7f 4f       	sbci	r23, 0xFF	; 255
    1260:	07 2e       	mov	r0, r23
    1262:	00 0c       	add	r0, r0
    1264:	88 0b       	sbc	r24, r24
    1266:	99 0b       	sbc	r25, r25
    1268:	0e 94 eb 0d 	call	0x1bd6	; 0x1bd6 <__floatsisf>
    126c:	23 e3       	ldi	r18, 0x33	; 51
    126e:	33 e3       	ldi	r19, 0x33	; 51
    1270:	43 e8       	ldi	r20, 0x83	; 131
    1272:	51 e4       	ldi	r21, 0x41	; 65
    1274:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__divsf3>
    1278:	24 e3       	ldi	r18, 0x34	; 52
    127a:	3a ef       	ldi	r19, 0xFA	; 250
    127c:	4e e8       	ldi	r20, 0x8E	; 142
    127e:	5c e3       	ldi	r21, 0x3C	; 60
    1280:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    1284:	69 83       	std	Y+1, r22	; 0x01
    1286:	7a 83       	std	Y+2, r23	; 0x02
    1288:	8b 83       	std	Y+3, r24	; 0x03
    128a:	9c 83       	std	Y+4, r25	; 0x04
    128c:	64 2d       	mov	r22, r4
    128e:	70 e0       	ldi	r23, 0x00	; 0
    1290:	75 29       	or	r23, r5
    1292:	69 50       	subi	r22, 0x09	; 9
    1294:	71 09       	sbc	r23, r1
    1296:	07 2e       	mov	r0, r23
    1298:	00 0c       	add	r0, r0
    129a:	88 0b       	sbc	r24, r24
    129c:	99 0b       	sbc	r25, r25
    129e:	0e 94 eb 0d 	call	0x1bd6	; 0x1bd6 <__floatsisf>
    12a2:	23 e3       	ldi	r18, 0x33	; 51
    12a4:	33 e3       	ldi	r19, 0x33	; 51
    12a6:	43 e8       	ldi	r20, 0x83	; 131
    12a8:	51 e4       	ldi	r21, 0x41	; 65
    12aa:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__divsf3>
    12ae:	24 e3       	ldi	r18, 0x34	; 52
    12b0:	3a ef       	ldi	r19, 0xFA	; 250
    12b2:	4e e8       	ldi	r20, 0x8E	; 142
    12b4:	5c e3       	ldi	r21, 0x3C	; 60
    12b6:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    12ba:	6d 83       	std	Y+5, r22	; 0x05
    12bc:	7e 83       	std	Y+6, r23	; 0x06
    12be:	8f 83       	std	Y+7, r24	; 0x07
    12c0:	98 87       	std	Y+8, r25	; 0x08
    12c2:	67 2d       	mov	r22, r7
    12c4:	70 e0       	ldi	r23, 0x00	; 0
    12c6:	76 29       	or	r23, r6
    12c8:	66 5d       	subi	r22, 0xD6	; 214
    12ca:	7f 4f       	sbci	r23, 0xFF	; 255
    12cc:	07 2e       	mov	r0, r23
    12ce:	00 0c       	add	r0, r0
    12d0:	88 0b       	sbc	r24, r24
    12d2:	99 0b       	sbc	r25, r25
    12d4:	0e 94 eb 0d 	call	0x1bd6	; 0x1bd6 <__floatsisf>
    12d8:	23 e3       	ldi	r18, 0x33	; 51
    12da:	33 e3       	ldi	r19, 0x33	; 51
    12dc:	43 e8       	ldi	r20, 0x83	; 131
    12de:	51 e4       	ldi	r21, 0x41	; 65
    12e0:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__divsf3>
    12e4:	24 e3       	ldi	r18, 0x34	; 52
    12e6:	3a ef       	ldi	r19, 0xFA	; 250
    12e8:	4e e8       	ldi	r20, 0x8E	; 142
    12ea:	5c e3       	ldi	r21, 0x3C	; 60
    12ec:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    12f0:	2b 01       	movw	r4, r22
    12f2:	3c 01       	movw	r6, r24
    12f4:	2a 85       	ldd	r18, Y+10	; 0x0a
    12f6:	62 2f       	mov	r22, r18
    12f8:	70 e0       	ldi	r23, 0x00	; 0
    12fa:	71 2b       	or	r23, r17
    12fc:	07 2e       	mov	r0, r23
    12fe:	00 0c       	add	r0, r0
    1300:	88 0b       	sbc	r24, r24
    1302:	99 0b       	sbc	r25, r25
    1304:	0e 94 eb 0d 	call	0x1bd6	; 0x1bd6 <__floatsisf>
    1308:	20 e0       	ldi	r18, 0x00	; 0
    130a:	30 e0       	ldi	r19, 0x00	; 0
    130c:	40 e8       	ldi	r20, 0x80	; 128
    130e:	58 e3       	ldi	r21, 0x38	; 56
    1310:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    1314:	9f 93       	push	r25
    1316:	8f 93       	push	r24
    1318:	7f 93       	push	r23
    131a:	6f 93       	push	r22
    131c:	39 85       	ldd	r19, Y+9	; 0x09
    131e:	63 2f       	mov	r22, r19
    1320:	70 e0       	ldi	r23, 0x00	; 0
    1322:	cb 01       	movw	r24, r22
    1324:	90 2b       	or	r25, r16
    1326:	9b 87       	std	Y+11, r25	; 0x0b
    1328:	8a 87       	std	Y+10, r24	; 0x0a
    132a:	bc 01       	movw	r22, r24
    132c:	99 0f       	add	r25, r25
    132e:	88 0b       	sbc	r24, r24
    1330:	99 0b       	sbc	r25, r25
    1332:	0e 94 eb 0d 	call	0x1bd6	; 0x1bd6 <__floatsisf>
    1336:	20 e0       	ldi	r18, 0x00	; 0
    1338:	30 e0       	ldi	r19, 0x00	; 0
    133a:	40 e8       	ldi	r20, 0x80	; 128
    133c:	58 e3       	ldi	r21, 0x38	; 56
    133e:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    1342:	9f 93       	push	r25
    1344:	8f 93       	push	r24
    1346:	7f 93       	push	r23
    1348:	6f 93       	push	r22
    134a:	e9 80       	ldd	r14, Y+1	; 0x01
    134c:	fa 80       	ldd	r15, Y+2	; 0x02
    134e:	0b 81       	ldd	r16, Y+3	; 0x03
    1350:	1c 81       	ldd	r17, Y+4	; 0x04
    1352:	2d 81       	ldd	r18, Y+5	; 0x05
    1354:	3e 81       	ldd	r19, Y+6	; 0x06
    1356:	4f 81       	ldd	r20, Y+7	; 0x07
    1358:	58 85       	ldd	r21, Y+8	; 0x08
    135a:	c3 01       	movw	r24, r6
    135c:	b2 01       	movw	r22, r4
    135e:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <mpu6050_mahonyUpdate>
}
    1362:	0f b6       	in	r0, 0x3f	; 63
    1364:	f8 94       	cli
    1366:	de bf       	out	0x3e, r29	; 62
    1368:	0f be       	out	0x3f, r0	; 63
    136a:	cd bf       	out	0x3d, r28	; 61
    136c:	2b 96       	adiw	r28, 0x0b	; 11
    136e:	0f b6       	in	r0, 0x3f	; 63
    1370:	f8 94       	cli
    1372:	de bf       	out	0x3e, r29	; 62
    1374:	0f be       	out	0x3f, r0	; 63
    1376:	cd bf       	out	0x3d, r28	; 61
    1378:	df 91       	pop	r29
    137a:	cf 91       	pop	r28
    137c:	1f 91       	pop	r17
    137e:	0f 91       	pop	r16
    1380:	ff 90       	pop	r15
    1382:	ef 90       	pop	r14
    1384:	df 90       	pop	r13
    1386:	cf 90       	pop	r12
    1388:	bf 90       	pop	r11
    138a:	af 90       	pop	r10
    138c:	7f 90       	pop	r7
    138e:	6f 90       	pop	r6
    1390:	5f 90       	pop	r5
    1392:	4f 90       	pop	r4
    1394:	08 95       	ret

00001396 <__vector_16>:

/*
 * update timer for attitude
 */
ISR(TIMER0_OVF_vect) {
    1396:	1f 92       	push	r1
    1398:	0f 92       	push	r0
    139a:	0f b6       	in	r0, 0x3f	; 63
    139c:	0f 92       	push	r0
    139e:	11 24       	eor	r1, r1
    13a0:	2f 93       	push	r18
    13a2:	3f 93       	push	r19
    13a4:	4f 93       	push	r20
    13a6:	5f 93       	push	r21
    13a8:	6f 93       	push	r22
    13aa:	7f 93       	push	r23
    13ac:	8f 93       	push	r24
    13ae:	9f 93       	push	r25
    13b0:	af 93       	push	r26
    13b2:	bf 93       	push	r27
    13b4:	ef 93       	push	r30
    13b6:	ff 93       	push	r31
	mpu6050_updateQuaternion();
    13b8:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <mpu6050_updateQuaternion>
}
    13bc:	ff 91       	pop	r31
    13be:	ef 91       	pop	r30
    13c0:	bf 91       	pop	r27
    13c2:	af 91       	pop	r26
    13c4:	9f 91       	pop	r25
    13c6:	8f 91       	pop	r24
    13c8:	7f 91       	pop	r23
    13ca:	6f 91       	pop	r22
    13cc:	5f 91       	pop	r21
    13ce:	4f 91       	pop	r20
    13d0:	3f 91       	pop	r19
    13d2:	2f 91       	pop	r18
    13d4:	0f 90       	pop	r0
    13d6:	0f be       	out	0x3f, r0	; 63
    13d8:	0f 90       	pop	r0
    13da:	1f 90       	pop	r1
    13dc:	18 95       	reti

000013de <mpu6050_getQuaternion>:

/*
 * get quaternion
 */
void mpu6050_getQuaternion(double *qw, double *qx, double *qy, double *qz) {
    13de:	cf 92       	push	r12
    13e0:	df 92       	push	r13
    13e2:	ef 92       	push	r14
    13e4:	ff 92       	push	r15
	*qw = q0;
    13e6:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <__data_start>
    13ea:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <__data_start+0x1>
    13ee:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <__data_start+0x2>
    13f2:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <__data_start+0x3>
    13f6:	fc 01       	movw	r30, r24
    13f8:	c0 82       	st	Z, r12
    13fa:	d1 82       	std	Z+1, r13	; 0x01
    13fc:	e2 82       	std	Z+2, r14	; 0x02
    13fe:	f3 82       	std	Z+3, r15	; 0x03
	*qx = q1;
    1400:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <q1>
    1404:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <q1+0x1>
    1408:	a0 91 1e 01 	lds	r26, 0x011E	; 0x80011e <q1+0x2>
    140c:	b0 91 1f 01 	lds	r27, 0x011F	; 0x80011f <q1+0x3>
    1410:	fb 01       	movw	r30, r22
    1412:	80 83       	st	Z, r24
    1414:	91 83       	std	Z+1, r25	; 0x01
    1416:	a2 83       	std	Z+2, r26	; 0x02
    1418:	b3 83       	std	Z+3, r27	; 0x03
	*qy = q2;
    141a:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <q2>
    141e:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <q2+0x1>
    1422:	a0 91 1a 01 	lds	r26, 0x011A	; 0x80011a <q2+0x2>
    1426:	b0 91 1b 01 	lds	r27, 0x011B	; 0x80011b <q2+0x3>
    142a:	fa 01       	movw	r30, r20
    142c:	80 83       	st	Z, r24
    142e:	91 83       	std	Z+1, r25	; 0x01
    1430:	a2 83       	std	Z+2, r26	; 0x02
    1432:	b3 83       	std	Z+3, r27	; 0x03
	*qz = q3;
    1434:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <q3>
    1438:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <q3+0x1>
    143c:	a0 91 16 01 	lds	r26, 0x0116	; 0x800116 <q3+0x2>
    1440:	b0 91 17 01 	lds	r27, 0x0117	; 0x800117 <q3+0x3>
    1444:	f9 01       	movw	r30, r18
    1446:	80 83       	st	Z, r24
    1448:	91 83       	std	Z+1, r25	; 0x01
    144a:	a2 83       	std	Z+2, r26	; 0x02
    144c:	b3 83       	std	Z+3, r27	; 0x03
}
    144e:	ff 90       	pop	r15
    1450:	ef 90       	pop	r14
    1452:	df 90       	pop	r13
    1454:	cf 90       	pop	r12
    1456:	08 95       	ret

00001458 <mpu6050_getRollPitchYaw>:
 * aerospace sequence, to obtain sensor attitude:
 * 1. rotate around sensor Z plane by yaw
 * 2. rotate around sensor Y plane by pitch
 * 3. rotate around sensor X plane by roll
 */
void mpu6050_getRollPitchYaw(double *roll, double *pitch, double *yaw) {
    1458:	2f 92       	push	r2
    145a:	3f 92       	push	r3
    145c:	4f 92       	push	r4
    145e:	5f 92       	push	r5
    1460:	6f 92       	push	r6
    1462:	7f 92       	push	r7
    1464:	8f 92       	push	r8
    1466:	9f 92       	push	r9
    1468:	af 92       	push	r10
    146a:	bf 92       	push	r11
    146c:	cf 92       	push	r12
    146e:	df 92       	push	r13
    1470:	ef 92       	push	r14
    1472:	ff 92       	push	r15
    1474:	0f 93       	push	r16
    1476:	1f 93       	push	r17
    1478:	cf 93       	push	r28
    147a:	df 93       	push	r29
    147c:	cd b7       	in	r28, 0x3d	; 61
    147e:	de b7       	in	r29, 0x3e	; 62
    1480:	62 97       	sbiw	r28, 0x12	; 18
    1482:	0f b6       	in	r0, 0x3f	; 63
    1484:	f8 94       	cli
    1486:	de bf       	out	0x3e, r29	; 62
    1488:	0f be       	out	0x3f, r0	; 63
    148a:	cd bf       	out	0x3d, r28	; 61
    148c:	1c 01       	movw	r2, r24
    148e:	8b 01       	movw	r16, r22
    1490:	5a 8b       	std	Y+18, r21	; 0x12
    1492:	49 8b       	std	Y+17, r20	; 0x11
	*yaw = atan2(2*q1*q2 - 2*q0*q3, 2*q0*q0 + 2*q1*q1 - 1);
    1494:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
    1498:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_start+0x1>
    149c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_start+0x2>
    14a0:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_start+0x3>
    14a4:	80 90 00 01 	lds	r8, 0x0100	; 0x800100 <__data_start>
    14a8:	90 90 01 01 	lds	r9, 0x0101	; 0x800101 <__data_start+0x1>
    14ac:	a0 90 02 01 	lds	r10, 0x0102	; 0x800102 <__data_start+0x2>
    14b0:	b0 90 03 01 	lds	r11, 0x0103	; 0x800103 <__data_start+0x3>
    14b4:	c0 90 1c 01 	lds	r12, 0x011C	; 0x80011c <q1>
    14b8:	d0 90 1d 01 	lds	r13, 0x011D	; 0x80011d <q1+0x1>
    14bc:	e0 90 1e 01 	lds	r14, 0x011E	; 0x80011e <q1+0x2>
    14c0:	f0 90 1f 01 	lds	r15, 0x011F	; 0x80011f <q1+0x3>
    14c4:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <q1>
    14c8:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <q1+0x1>
    14cc:	40 91 1e 01 	lds	r20, 0x011E	; 0x80011e <q1+0x2>
    14d0:	50 91 1f 01 	lds	r21, 0x011F	; 0x80011f <q1+0x3>
    14d4:	2d 83       	std	Y+5, r18	; 0x05
    14d6:	3e 83       	std	Y+6, r19	; 0x06
    14d8:	4f 83       	std	Y+7, r20	; 0x07
    14da:	58 87       	std	Y+8, r21	; 0x08
    14dc:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <q1>
    14e0:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <q1+0x1>
    14e4:	40 91 1e 01 	lds	r20, 0x011E	; 0x80011e <q1+0x2>
    14e8:	50 91 1f 01 	lds	r21, 0x011F	; 0x80011f <q1+0x3>
    14ec:	29 83       	std	Y+1, r18	; 0x01
    14ee:	3a 83       	std	Y+2, r19	; 0x02
    14f0:	4b 83       	std	Y+3, r20	; 0x03
    14f2:	5c 83       	std	Y+4, r21	; 0x04
    14f4:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <q2>
    14f8:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <q2+0x1>
    14fc:	40 91 1a 01 	lds	r20, 0x011A	; 0x80011a <q2+0x2>
    1500:	50 91 1b 01 	lds	r21, 0x011B	; 0x80011b <q2+0x3>
    1504:	29 87       	std	Y+9, r18	; 0x09
    1506:	3a 87       	std	Y+10, r19	; 0x0a
    1508:	4b 87       	std	Y+11, r20	; 0x0b
    150a:	5c 87       	std	Y+12, r21	; 0x0c
    150c:	40 90 00 01 	lds	r4, 0x0100	; 0x800100 <__data_start>
    1510:	50 90 01 01 	lds	r5, 0x0101	; 0x800101 <__data_start+0x1>
    1514:	60 90 02 01 	lds	r6, 0x0102	; 0x800102 <__data_start+0x2>
    1518:	70 90 03 01 	lds	r7, 0x0103	; 0x800103 <__data_start+0x3>
    151c:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <q3>
    1520:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <q3+0x1>
    1524:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <q3+0x2>
    1528:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <q3+0x3>
    152c:	2d 87       	std	Y+13, r18	; 0x0d
    152e:	3e 87       	std	Y+14, r19	; 0x0e
    1530:	4f 87       	std	Y+15, r20	; 0x0f
    1532:	58 8b       	std	Y+16, r21	; 0x10
    1534:	9b 01       	movw	r18, r22
    1536:	ac 01       	movw	r20, r24
    1538:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
    153c:	a5 01       	movw	r20, r10
    153e:	94 01       	movw	r18, r8
    1540:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    1544:	4b 01       	movw	r8, r22
    1546:	5c 01       	movw	r10, r24
    1548:	a7 01       	movw	r20, r14
    154a:	96 01       	movw	r18, r12
    154c:	c7 01       	movw	r24, r14
    154e:	b6 01       	movw	r22, r12
    1550:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
    1554:	2d 81       	ldd	r18, Y+5	; 0x05
    1556:	3e 81       	ldd	r19, Y+6	; 0x06
    1558:	4f 81       	ldd	r20, Y+7	; 0x07
    155a:	58 85       	ldd	r21, Y+8	; 0x08
    155c:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    1560:	9b 01       	movw	r18, r22
    1562:	ac 01       	movw	r20, r24
    1564:	c5 01       	movw	r24, r10
    1566:	b4 01       	movw	r22, r8
    1568:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
    156c:	20 e0       	ldi	r18, 0x00	; 0
    156e:	30 e0       	ldi	r19, 0x00	; 0
    1570:	40 e8       	ldi	r20, 0x80	; 128
    1572:	5f e3       	ldi	r21, 0x3F	; 63
    1574:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <__subsf3>
    1578:	6b 01       	movw	r12, r22
    157a:	7c 01       	movw	r14, r24
    157c:	29 81       	ldd	r18, Y+1	; 0x01
    157e:	3a 81       	ldd	r19, Y+2	; 0x02
    1580:	4b 81       	ldd	r20, Y+3	; 0x03
    1582:	5c 81       	ldd	r21, Y+4	; 0x04
    1584:	ca 01       	movw	r24, r20
    1586:	b9 01       	movw	r22, r18
    1588:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
    158c:	29 85       	ldd	r18, Y+9	; 0x09
    158e:	3a 85       	ldd	r19, Y+10	; 0x0a
    1590:	4b 85       	ldd	r20, Y+11	; 0x0b
    1592:	5c 85       	ldd	r21, Y+12	; 0x0c
    1594:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    1598:	4b 01       	movw	r8, r22
    159a:	5c 01       	movw	r10, r24
    159c:	a3 01       	movw	r20, r6
    159e:	92 01       	movw	r18, r4
    15a0:	c3 01       	movw	r24, r6
    15a2:	b2 01       	movw	r22, r4
    15a4:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
    15a8:	2d 85       	ldd	r18, Y+13	; 0x0d
    15aa:	3e 85       	ldd	r19, Y+14	; 0x0e
    15ac:	4f 85       	ldd	r20, Y+15	; 0x0f
    15ae:	58 89       	ldd	r21, Y+16	; 0x10
    15b0:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    15b4:	9b 01       	movw	r18, r22
    15b6:	ac 01       	movw	r20, r24
    15b8:	c5 01       	movw	r24, r10
    15ba:	b4 01       	movw	r22, r8
    15bc:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <__subsf3>
    15c0:	a7 01       	movw	r20, r14
    15c2:	96 01       	movw	r18, r12
    15c4:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <atan2>
    15c8:	e9 89       	ldd	r30, Y+17	; 0x11
    15ca:	fa 89       	ldd	r31, Y+18	; 0x12
    15cc:	60 83       	st	Z, r22
    15ce:	71 83       	std	Z+1, r23	; 0x01
    15d0:	82 83       	std	Z+2, r24	; 0x02
    15d2:	93 83       	std	Z+3, r25	; 0x03
	*pitch = -asin(2*q1*q3 + 2*q0*q2);
    15d4:	60 91 1c 01 	lds	r22, 0x011C	; 0x80011c <q1>
    15d8:	70 91 1d 01 	lds	r23, 0x011D	; 0x80011d <q1+0x1>
    15dc:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <q1+0x2>
    15e0:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <q1+0x3>
    15e4:	80 90 14 01 	lds	r8, 0x0114	; 0x800114 <q3>
    15e8:	90 90 15 01 	lds	r9, 0x0115	; 0x800115 <q3+0x1>
    15ec:	a0 90 16 01 	lds	r10, 0x0116	; 0x800116 <q3+0x2>
    15f0:	b0 90 17 01 	lds	r11, 0x0117	; 0x800117 <q3+0x3>
    15f4:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <__data_start>
    15f8:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <__data_start+0x1>
    15fc:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <__data_start+0x2>
    1600:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <__data_start+0x3>
    1604:	40 90 18 01 	lds	r4, 0x0118	; 0x800118 <q2>
    1608:	50 90 19 01 	lds	r5, 0x0119	; 0x800119 <q2+0x1>
    160c:	60 90 1a 01 	lds	r6, 0x011A	; 0x80011a <q2+0x2>
    1610:	70 90 1b 01 	lds	r7, 0x011B	; 0x80011b <q2+0x3>
    1614:	9b 01       	movw	r18, r22
    1616:	ac 01       	movw	r20, r24
    1618:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
    161c:	a5 01       	movw	r20, r10
    161e:	94 01       	movw	r18, r8
    1620:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    1624:	4b 01       	movw	r8, r22
    1626:	5c 01       	movw	r10, r24
    1628:	a7 01       	movw	r20, r14
    162a:	96 01       	movw	r18, r12
    162c:	c7 01       	movw	r24, r14
    162e:	b6 01       	movw	r22, r12
    1630:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
    1634:	a3 01       	movw	r20, r6
    1636:	92 01       	movw	r18, r4
    1638:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    163c:	9b 01       	movw	r18, r22
    163e:	ac 01       	movw	r20, r24
    1640:	c5 01       	movw	r24, r10
    1642:	b4 01       	movw	r22, r8
    1644:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
    1648:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <asin>
    164c:	dc 01       	movw	r26, r24
    164e:	cb 01       	movw	r24, r22
    1650:	b0 58       	subi	r27, 0x80	; 128
    1652:	f8 01       	movw	r30, r16
    1654:	80 83       	st	Z, r24
    1656:	91 83       	std	Z+1, r25	; 0x01
    1658:	a2 83       	std	Z+2, r26	; 0x02
    165a:	b3 83       	std	Z+3, r27	; 0x03
	*roll = atan2(2*q2*q3 - 2*q0*q1, 2*q0*q0 + 2*q3*q3 - 1);
    165c:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
    1660:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_start+0x1>
    1664:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_start+0x2>
    1668:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_start+0x3>
    166c:	80 90 00 01 	lds	r8, 0x0100	; 0x800100 <__data_start>
    1670:	90 90 01 01 	lds	r9, 0x0101	; 0x800101 <__data_start+0x1>
    1674:	a0 90 02 01 	lds	r10, 0x0102	; 0x800102 <__data_start+0x2>
    1678:	b0 90 03 01 	lds	r11, 0x0103	; 0x800103 <__data_start+0x3>
    167c:	c0 90 14 01 	lds	r12, 0x0114	; 0x800114 <q3>
    1680:	d0 90 15 01 	lds	r13, 0x0115	; 0x800115 <q3+0x1>
    1684:	e0 90 16 01 	lds	r14, 0x0116	; 0x800116 <q3+0x2>
    1688:	f0 90 17 01 	lds	r15, 0x0117	; 0x800117 <q3+0x3>
    168c:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <q3>
    1690:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <q3+0x1>
    1694:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <q3+0x2>
    1698:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <q3+0x3>
    169c:	2d 83       	std	Y+5, r18	; 0x05
    169e:	3e 83       	std	Y+6, r19	; 0x06
    16a0:	4f 83       	std	Y+7, r20	; 0x07
    16a2:	58 87       	std	Y+8, r21	; 0x08
    16a4:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <q2>
    16a8:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <q2+0x1>
    16ac:	40 91 1a 01 	lds	r20, 0x011A	; 0x80011a <q2+0x2>
    16b0:	50 91 1b 01 	lds	r21, 0x011B	; 0x80011b <q2+0x3>
    16b4:	29 83       	std	Y+1, r18	; 0x01
    16b6:	3a 83       	std	Y+2, r19	; 0x02
    16b8:	4b 83       	std	Y+3, r20	; 0x03
    16ba:	5c 83       	std	Y+4, r21	; 0x04
    16bc:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <q3>
    16c0:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <q3+0x1>
    16c4:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <q3+0x2>
    16c8:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <q3+0x3>
    16cc:	29 87       	std	Y+9, r18	; 0x09
    16ce:	3a 87       	std	Y+10, r19	; 0x0a
    16d0:	4b 87       	std	Y+11, r20	; 0x0b
    16d2:	5c 87       	std	Y+12, r21	; 0x0c
    16d4:	40 90 00 01 	lds	r4, 0x0100	; 0x800100 <__data_start>
    16d8:	50 90 01 01 	lds	r5, 0x0101	; 0x800101 <__data_start+0x1>
    16dc:	60 90 02 01 	lds	r6, 0x0102	; 0x800102 <__data_start+0x2>
    16e0:	70 90 03 01 	lds	r7, 0x0103	; 0x800103 <__data_start+0x3>
    16e4:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <q1>
    16e8:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <q1+0x1>
    16ec:	40 91 1e 01 	lds	r20, 0x011E	; 0x80011e <q1+0x2>
    16f0:	50 91 1f 01 	lds	r21, 0x011F	; 0x80011f <q1+0x3>
    16f4:	2d 87       	std	Y+13, r18	; 0x0d
    16f6:	3e 87       	std	Y+14, r19	; 0x0e
    16f8:	4f 87       	std	Y+15, r20	; 0x0f
    16fa:	58 8b       	std	Y+16, r21	; 0x10
    16fc:	9b 01       	movw	r18, r22
    16fe:	ac 01       	movw	r20, r24
    1700:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
    1704:	a5 01       	movw	r20, r10
    1706:	94 01       	movw	r18, r8
    1708:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    170c:	4b 01       	movw	r8, r22
    170e:	5c 01       	movw	r10, r24
    1710:	a7 01       	movw	r20, r14
    1712:	96 01       	movw	r18, r12
    1714:	c7 01       	movw	r24, r14
    1716:	b6 01       	movw	r22, r12
    1718:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
    171c:	2d 81       	ldd	r18, Y+5	; 0x05
    171e:	3e 81       	ldd	r19, Y+6	; 0x06
    1720:	4f 81       	ldd	r20, Y+7	; 0x07
    1722:	58 85       	ldd	r21, Y+8	; 0x08
    1724:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    1728:	9b 01       	movw	r18, r22
    172a:	ac 01       	movw	r20, r24
    172c:	c5 01       	movw	r24, r10
    172e:	b4 01       	movw	r22, r8
    1730:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
    1734:	20 e0       	ldi	r18, 0x00	; 0
    1736:	30 e0       	ldi	r19, 0x00	; 0
    1738:	40 e8       	ldi	r20, 0x80	; 128
    173a:	5f e3       	ldi	r21, 0x3F	; 63
    173c:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <__subsf3>
    1740:	6b 01       	movw	r12, r22
    1742:	7c 01       	movw	r14, r24
    1744:	29 81       	ldd	r18, Y+1	; 0x01
    1746:	3a 81       	ldd	r19, Y+2	; 0x02
    1748:	4b 81       	ldd	r20, Y+3	; 0x03
    174a:	5c 81       	ldd	r21, Y+4	; 0x04
    174c:	ca 01       	movw	r24, r20
    174e:	b9 01       	movw	r22, r18
    1750:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
    1754:	29 85       	ldd	r18, Y+9	; 0x09
    1756:	3a 85       	ldd	r19, Y+10	; 0x0a
    1758:	4b 85       	ldd	r20, Y+11	; 0x0b
    175a:	5c 85       	ldd	r21, Y+12	; 0x0c
    175c:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    1760:	4b 01       	movw	r8, r22
    1762:	5c 01       	movw	r10, r24
    1764:	a3 01       	movw	r20, r6
    1766:	92 01       	movw	r18, r4
    1768:	c3 01       	movw	r24, r6
    176a:	b2 01       	movw	r22, r4
    176c:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__addsf3>
    1770:	2d 85       	ldd	r18, Y+13	; 0x0d
    1772:	3e 85       	ldd	r19, Y+14	; 0x0e
    1774:	4f 85       	ldd	r20, Y+15	; 0x0f
    1776:	58 89       	ldd	r21, Y+16	; 0x10
    1778:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    177c:	9b 01       	movw	r18, r22
    177e:	ac 01       	movw	r20, r24
    1780:	c5 01       	movw	r24, r10
    1782:	b4 01       	movw	r22, r8
    1784:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <__subsf3>
    1788:	a7 01       	movw	r20, r14
    178a:	96 01       	movw	r18, r12
    178c:	0e 94 13 0d 	call	0x1a26	; 0x1a26 <atan2>
    1790:	f1 01       	movw	r30, r2
    1792:	60 83       	st	Z, r22
    1794:	71 83       	std	Z+1, r23	; 0x01
    1796:	82 83       	std	Z+2, r24	; 0x02
    1798:	93 83       	std	Z+3, r25	; 0x03
}
    179a:	62 96       	adiw	r28, 0x12	; 18
    179c:	0f b6       	in	r0, 0x3f	; 63
    179e:	f8 94       	cli
    17a0:	de bf       	out	0x3e, r29	; 62
    17a2:	0f be       	out	0x3f, r0	; 63
    17a4:	cd bf       	out	0x3d, r28	; 61
    17a6:	df 91       	pop	r29
    17a8:	cf 91       	pop	r28
    17aa:	1f 91       	pop	r17
    17ac:	0f 91       	pop	r16
    17ae:	ff 90       	pop	r15
    17b0:	ef 90       	pop	r14
    17b2:	df 90       	pop	r13
    17b4:	cf 90       	pop	r12
    17b6:	bf 90       	pop	r11
    17b8:	af 90       	pop	r10
    17ba:	9f 90       	pop	r9
    17bc:	8f 90       	pop	r8
    17be:	7f 90       	pop	r7
    17c0:	6f 90       	pop	r6
    17c2:	5f 90       	pop	r5
    17c4:	4f 90       	pop	r4
    17c6:	3f 90       	pop	r3
    17c8:	2f 90       	pop	r2
    17ca:	08 95       	ret

000017cc <__vector_18>:
    /* get data from receive buffer */
    data = UART_RxBuf[tmptail];
    
    return (UART_LastRxError << 8) + data;

}/* uart_getc */
    17cc:	1f 92       	push	r1
    17ce:	0f 92       	push	r0
    17d0:	0f b6       	in	r0, 0x3f	; 63
    17d2:	0f 92       	push	r0
    17d4:	11 24       	eor	r1, r1
    17d6:	2f 93       	push	r18
    17d8:	8f 93       	push	r24
    17da:	9f 93       	push	r25
    17dc:	ef 93       	push	r30
    17de:	ff 93       	push	r31
    17e0:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    17e4:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    17e8:	88 71       	andi	r24, 0x18	; 24
    17ea:	e0 91 22 01 	lds	r30, 0x0122	; 0x800122 <UART_RxHead>
    17ee:	ef 5f       	subi	r30, 0xFF	; 255
    17f0:	ef 71       	andi	r30, 0x1F	; 31
    17f2:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <UART_RxTail>
    17f6:	e9 17       	cp	r30, r25
    17f8:	39 f0       	breq	.+14     	; 0x1808 <__vector_18+0x3c>
    17fa:	e0 93 22 01 	sts	0x0122, r30	; 0x800122 <UART_RxHead>
    17fe:	f0 e0       	ldi	r31, 0x00	; 0
    1800:	eb 5d       	subi	r30, 0xDB	; 219
    1802:	fe 4f       	sbci	r31, 0xFE	; 254
    1804:	20 83       	st	Z, r18
    1806:	01 c0       	rjmp	.+2      	; 0x180a <__vector_18+0x3e>
    1808:	82 e0       	ldi	r24, 0x02	; 2
    180a:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <UART_LastRxError>
    180e:	ff 91       	pop	r31
    1810:	ef 91       	pop	r30
    1812:	9f 91       	pop	r25
    1814:	8f 91       	pop	r24
    1816:	2f 91       	pop	r18
    1818:	0f 90       	pop	r0
    181a:	0f be       	out	0x3f, r0	; 63
    181c:	0f 90       	pop	r0
    181e:	1f 90       	pop	r1
    1820:	18 95       	reti

00001822 <__vector_19>:
    1822:	1f 92       	push	r1
    1824:	0f 92       	push	r0
    1826:	0f b6       	in	r0, 0x3f	; 63
    1828:	0f 92       	push	r0
    182a:	11 24       	eor	r1, r1
    182c:	8f 93       	push	r24
    182e:	9f 93       	push	r25
    1830:	ef 93       	push	r30
    1832:	ff 93       	push	r31
    1834:	90 91 24 01 	lds	r25, 0x0124	; 0x800124 <UART_TxHead>
    1838:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <UART_TxTail>
    183c:	98 17       	cp	r25, r24
    183e:	69 f0       	breq	.+26     	; 0x185a <__vector_19+0x38>
    1840:	e0 91 23 01 	lds	r30, 0x0123	; 0x800123 <UART_TxTail>
    1844:	ef 5f       	subi	r30, 0xFF	; 255
    1846:	ef 71       	andi	r30, 0x1F	; 31
    1848:	e0 93 23 01 	sts	0x0123, r30	; 0x800123 <UART_TxTail>
    184c:	f0 e0       	ldi	r31, 0x00	; 0
    184e:	eb 5b       	subi	r30, 0xBB	; 187
    1850:	fe 4f       	sbci	r31, 0xFE	; 254
    1852:	80 81       	ld	r24, Z
    1854:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    1858:	05 c0       	rjmp	.+10     	; 0x1864 <__vector_19+0x42>
    185a:	e1 ec       	ldi	r30, 0xC1	; 193
    185c:	f0 e0       	ldi	r31, 0x00	; 0
    185e:	80 81       	ld	r24, Z
    1860:	8f 7d       	andi	r24, 0xDF	; 223
    1862:	80 83       	st	Z, r24
    1864:	ff 91       	pop	r31
    1866:	ef 91       	pop	r30
    1868:	9f 91       	pop	r25
    186a:	8f 91       	pop	r24
    186c:	0f 90       	pop	r0
    186e:	0f be       	out	0x3f, r0	; 63
    1870:	0f 90       	pop	r0
    1872:	1f 90       	pop	r1
    1874:	18 95       	reti

00001876 <uart_init>:
    1876:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <UART_TxHead>
    187a:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <UART_TxTail>
    187e:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <UART_RxHead>
    1882:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <UART_RxTail>
    1886:	99 23       	and	r25, r25
    1888:	24 f4       	brge	.+8      	; 0x1892 <uart_init+0x1c>
    188a:	22 e0       	ldi	r18, 0x02	; 2
    188c:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    1890:	9f 77       	andi	r25, 0x7F	; 127
    1892:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    1896:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    189a:	88 e9       	ldi	r24, 0x98	; 152
    189c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    18a0:	86 e0       	ldi	r24, 0x06	; 6
    18a2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
    18a6:	08 95       	ret

000018a8 <uart_putc>:
void uart_putc(unsigned char data)
{
    unsigned char tmphead;

    
    tmphead  = (UART_TxHead + 1) & UART_TX_BUFFER_MASK;
    18a8:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <UART_TxHead>
    18ac:	2f 5f       	subi	r18, 0xFF	; 255
    18ae:	2f 71       	andi	r18, 0x1F	; 31
    
    while ( tmphead == UART_TxTail ){
    18b0:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <UART_TxTail>
    18b4:	29 17       	cp	r18, r25
    18b6:	e1 f3       	breq	.-8      	; 0x18b0 <uart_putc+0x8>
        ;/* wait for free space in buffer */
    }
    
    UART_TxBuf[tmphead] = data;
    18b8:	e2 2f       	mov	r30, r18
    18ba:	f0 e0       	ldi	r31, 0x00	; 0
    18bc:	eb 5b       	subi	r30, 0xBB	; 187
    18be:	fe 4f       	sbci	r31, 0xFE	; 254
    18c0:	80 83       	st	Z, r24
    UART_TxHead = tmphead;
    18c2:	20 93 24 01 	sts	0x0124, r18	; 0x800124 <UART_TxHead>

    /* enable UDRE interrupt */
    UART0_CONTROL    |= _BV(UART0_UDRIE);
    18c6:	e1 ec       	ldi	r30, 0xC1	; 193
    18c8:	f0 e0       	ldi	r31, 0x00	; 0
    18ca:	80 81       	ld	r24, Z
    18cc:	80 62       	ori	r24, 0x20	; 32
    18ce:	80 83       	st	Z, r24
    18d0:	08 95       	ret

000018d2 <uart_puts>:
Purpose:  transmit string to UART
Input:    string to be transmitted
Returns:  none          
**************************************************************************/
void uart_puts(const char *s )
{
    18d2:	cf 93       	push	r28
    18d4:	df 93       	push	r29
    18d6:	ec 01       	movw	r28, r24
    while (*s) 
    18d8:	88 81       	ld	r24, Y
    18da:	88 23       	and	r24, r24
    18dc:	31 f0       	breq	.+12     	; 0x18ea <uart_puts+0x18>
    18de:	21 96       	adiw	r28, 0x01	; 1
      uart_putc(*s++);
    18e0:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <uart_putc>
Input:    string to be transmitted
Returns:  none          
**************************************************************************/
void uart_puts(const char *s )
{
    while (*s) 
    18e4:	89 91       	ld	r24, Y+
    18e6:	81 11       	cpse	r24, r1
    18e8:	fb cf       	rjmp	.-10     	; 0x18e0 <uart_puts+0xe>
      uart_putc(*s++);

}/* uart_puts */
    18ea:	df 91       	pop	r29
    18ec:	cf 91       	pop	r28
    18ee:	08 95       	ret

000018f0 <__subsf3>:
    18f0:	50 58       	subi	r21, 0x80	; 128

000018f2 <__addsf3>:
    18f2:	bb 27       	eor	r27, r27
    18f4:	aa 27       	eor	r26, r26
    18f6:	0e 94 90 0c 	call	0x1920	; 0x1920 <__addsf3x>
    18fa:	0c 94 bc 0e 	jmp	0x1d78	; 0x1d78 <__fp_round>
    18fe:	0e 94 ae 0e 	call	0x1d5c	; 0x1d5c <__fp_pscA>
    1902:	38 f0       	brcs	.+14     	; 0x1912 <__addsf3+0x20>
    1904:	0e 94 b5 0e 	call	0x1d6a	; 0x1d6a <__fp_pscB>
    1908:	20 f0       	brcs	.+8      	; 0x1912 <__addsf3+0x20>
    190a:	39 f4       	brne	.+14     	; 0x191a <__addsf3+0x28>
    190c:	9f 3f       	cpi	r25, 0xFF	; 255
    190e:	19 f4       	brne	.+6      	; 0x1916 <__addsf3+0x24>
    1910:	26 f4       	brtc	.+8      	; 0x191a <__addsf3+0x28>
    1912:	0c 94 70 0e 	jmp	0x1ce0	; 0x1ce0 <__fp_nan>
    1916:	0e f4       	brtc	.+2      	; 0x191a <__addsf3+0x28>
    1918:	e0 95       	com	r30
    191a:	e7 fb       	bst	r30, 7
    191c:	0c 94 6a 0e 	jmp	0x1cd4	; 0x1cd4 <__fp_inf>

00001920 <__addsf3x>:
    1920:	e9 2f       	mov	r30, r25
    1922:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <__fp_split3>
    1926:	58 f3       	brcs	.-42     	; 0x18fe <__addsf3+0xc>
    1928:	ba 17       	cp	r27, r26
    192a:	62 07       	cpc	r22, r18
    192c:	73 07       	cpc	r23, r19
    192e:	84 07       	cpc	r24, r20
    1930:	95 07       	cpc	r25, r21
    1932:	20 f0       	brcs	.+8      	; 0x193c <__addsf3x+0x1c>
    1934:	79 f4       	brne	.+30     	; 0x1954 <__addsf3x+0x34>
    1936:	a6 f5       	brtc	.+104    	; 0x19a0 <__addsf3x+0x80>
    1938:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__fp_zero>
    193c:	0e f4       	brtc	.+2      	; 0x1940 <__addsf3x+0x20>
    193e:	e0 95       	com	r30
    1940:	0b 2e       	mov	r0, r27
    1942:	ba 2f       	mov	r27, r26
    1944:	a0 2d       	mov	r26, r0
    1946:	0b 01       	movw	r0, r22
    1948:	b9 01       	movw	r22, r18
    194a:	90 01       	movw	r18, r0
    194c:	0c 01       	movw	r0, r24
    194e:	ca 01       	movw	r24, r20
    1950:	a0 01       	movw	r20, r0
    1952:	11 24       	eor	r1, r1
    1954:	ff 27       	eor	r31, r31
    1956:	59 1b       	sub	r21, r25
    1958:	99 f0       	breq	.+38     	; 0x1980 <__addsf3x+0x60>
    195a:	59 3f       	cpi	r21, 0xF9	; 249
    195c:	50 f4       	brcc	.+20     	; 0x1972 <__addsf3x+0x52>
    195e:	50 3e       	cpi	r21, 0xE0	; 224
    1960:	68 f1       	brcs	.+90     	; 0x19bc <__addsf3x+0x9c>
    1962:	1a 16       	cp	r1, r26
    1964:	f0 40       	sbci	r31, 0x00	; 0
    1966:	a2 2f       	mov	r26, r18
    1968:	23 2f       	mov	r18, r19
    196a:	34 2f       	mov	r19, r20
    196c:	44 27       	eor	r20, r20
    196e:	58 5f       	subi	r21, 0xF8	; 248
    1970:	f3 cf       	rjmp	.-26     	; 0x1958 <__addsf3x+0x38>
    1972:	46 95       	lsr	r20
    1974:	37 95       	ror	r19
    1976:	27 95       	ror	r18
    1978:	a7 95       	ror	r26
    197a:	f0 40       	sbci	r31, 0x00	; 0
    197c:	53 95       	inc	r21
    197e:	c9 f7       	brne	.-14     	; 0x1972 <__addsf3x+0x52>
    1980:	7e f4       	brtc	.+30     	; 0x19a0 <__addsf3x+0x80>
    1982:	1f 16       	cp	r1, r31
    1984:	ba 0b       	sbc	r27, r26
    1986:	62 0b       	sbc	r22, r18
    1988:	73 0b       	sbc	r23, r19
    198a:	84 0b       	sbc	r24, r20
    198c:	ba f0       	brmi	.+46     	; 0x19bc <__addsf3x+0x9c>
    198e:	91 50       	subi	r25, 0x01	; 1
    1990:	a1 f0       	breq	.+40     	; 0x19ba <__addsf3x+0x9a>
    1992:	ff 0f       	add	r31, r31
    1994:	bb 1f       	adc	r27, r27
    1996:	66 1f       	adc	r22, r22
    1998:	77 1f       	adc	r23, r23
    199a:	88 1f       	adc	r24, r24
    199c:	c2 f7       	brpl	.-16     	; 0x198e <__addsf3x+0x6e>
    199e:	0e c0       	rjmp	.+28     	; 0x19bc <__addsf3x+0x9c>
    19a0:	ba 0f       	add	r27, r26
    19a2:	62 1f       	adc	r22, r18
    19a4:	73 1f       	adc	r23, r19
    19a6:	84 1f       	adc	r24, r20
    19a8:	48 f4       	brcc	.+18     	; 0x19bc <__addsf3x+0x9c>
    19aa:	87 95       	ror	r24
    19ac:	77 95       	ror	r23
    19ae:	67 95       	ror	r22
    19b0:	b7 95       	ror	r27
    19b2:	f7 95       	ror	r31
    19b4:	9e 3f       	cpi	r25, 0xFE	; 254
    19b6:	08 f0       	brcs	.+2      	; 0x19ba <__addsf3x+0x9a>
    19b8:	b0 cf       	rjmp	.-160    	; 0x191a <__addsf3+0x28>
    19ba:	93 95       	inc	r25
    19bc:	88 0f       	add	r24, r24
    19be:	08 f0       	brcs	.+2      	; 0x19c2 <__addsf3x+0xa2>
    19c0:	99 27       	eor	r25, r25
    19c2:	ee 0f       	add	r30, r30
    19c4:	97 95       	ror	r25
    19c6:	87 95       	ror	r24
    19c8:	08 95       	ret

000019ca <asin>:
    19ca:	9f 93       	push	r25
    19cc:	9f 77       	andi	r25, 0x7F	; 127
    19ce:	ee e3       	ldi	r30, 0x3E	; 62
    19d0:	89 37       	cpi	r24, 0x79	; 121
    19d2:	9e 07       	cpc	r25, r30
    19d4:	28 f4       	brcc	.+10     	; 0x19e0 <asin+0x16>
    19d6:	e8 e6       	ldi	r30, 0x68	; 104
    19d8:	f0 e0       	ldi	r31, 0x00	; 0
    19da:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <__fp_powsodd>
    19de:	0c c0       	rjmp	.+24     	; 0x19f8 <asin+0x2e>
    19e0:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__fp_arccos>
    19e4:	90 58       	subi	r25, 0x80	; 128
    19e6:	a2 ea       	ldi	r26, 0xA2	; 162
    19e8:	2a ed       	ldi	r18, 0xDA	; 218
    19ea:	3f e0       	ldi	r19, 0x0F	; 15
    19ec:	49 ec       	ldi	r20, 0xC9	; 201
    19ee:	5f e3       	ldi	r21, 0x3F	; 63
    19f0:	0e 94 90 0c 	call	0x1920	; 0x1920 <__addsf3x>
    19f4:	0e 94 bc 0e 	call	0x1d78	; 0x1d78 <__fp_round>
    19f8:	0f 90       	pop	r0
    19fa:	07 fc       	sbrc	r0, 7
    19fc:	90 58       	subi	r25, 0x80	; 128
    19fe:	08 95       	ret
    1a00:	0e 94 ae 0e 	call	0x1d5c	; 0x1d5c <__fp_pscA>
    1a04:	60 f0       	brcs	.+24     	; 0x1a1e <asin+0x54>
    1a06:	80 e8       	ldi	r24, 0x80	; 128
    1a08:	91 e0       	ldi	r25, 0x01	; 1
    1a0a:	09 f4       	brne	.+2      	; 0x1a0e <asin+0x44>
    1a0c:	9e ef       	ldi	r25, 0xFE	; 254
    1a0e:	0e 94 b5 0e 	call	0x1d6a	; 0x1d6a <__fp_pscB>
    1a12:	28 f0       	brcs	.+10     	; 0x1a1e <asin+0x54>
    1a14:	40 e8       	ldi	r20, 0x80	; 128
    1a16:	51 e0       	ldi	r21, 0x01	; 1
    1a18:	71 f4       	brne	.+28     	; 0x1a36 <atan2+0x10>
    1a1a:	5e ef       	ldi	r21, 0xFE	; 254
    1a1c:	0c c0       	rjmp	.+24     	; 0x1a36 <atan2+0x10>
    1a1e:	0c 94 70 0e 	jmp	0x1ce0	; 0x1ce0 <__fp_nan>
    1a22:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__fp_zero>

00001a26 <atan2>:
    1a26:	e9 2f       	mov	r30, r25
    1a28:	e0 78       	andi	r30, 0x80	; 128
    1a2a:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <__fp_split3>
    1a2e:	40 f3       	brcs	.-48     	; 0x1a00 <asin+0x36>
    1a30:	09 2e       	mov	r0, r25
    1a32:	05 2a       	or	r0, r21
    1a34:	b1 f3       	breq	.-20     	; 0x1a22 <asin+0x58>
    1a36:	26 17       	cp	r18, r22
    1a38:	37 07       	cpc	r19, r23
    1a3a:	48 07       	cpc	r20, r24
    1a3c:	59 07       	cpc	r21, r25
    1a3e:	38 f0       	brcs	.+14     	; 0x1a4e <atan2+0x28>
    1a40:	0e 2e       	mov	r0, r30
    1a42:	07 f8       	bld	r0, 7
    1a44:	e0 25       	eor	r30, r0
    1a46:	69 f0       	breq	.+26     	; 0x1a62 <atan2+0x3c>
    1a48:	e0 25       	eor	r30, r0
    1a4a:	e0 64       	ori	r30, 0x40	; 64
    1a4c:	0a c0       	rjmp	.+20     	; 0x1a62 <atan2+0x3c>
    1a4e:	ef 63       	ori	r30, 0x3F	; 63
    1a50:	07 f8       	bld	r0, 7
    1a52:	00 94       	com	r0
    1a54:	07 fa       	bst	r0, 7
    1a56:	db 01       	movw	r26, r22
    1a58:	b9 01       	movw	r22, r18
    1a5a:	9d 01       	movw	r18, r26
    1a5c:	dc 01       	movw	r26, r24
    1a5e:	ca 01       	movw	r24, r20
    1a60:	ad 01       	movw	r20, r26
    1a62:	ef 93       	push	r30
    1a64:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <__divsf3_pse>
    1a68:	0e 94 bc 0e 	call	0x1d78	; 0x1d78 <__fp_round>
    1a6c:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <atan>
    1a70:	5f 91       	pop	r21
    1a72:	55 23       	and	r21, r21
    1a74:	39 f0       	breq	.+14     	; 0x1a84 <atan2+0x5e>
    1a76:	2b ed       	ldi	r18, 0xDB	; 219
    1a78:	3f e0       	ldi	r19, 0x0F	; 15
    1a7a:	49 e4       	ldi	r20, 0x49	; 73
    1a7c:	50 fd       	sbrc	r21, 0
    1a7e:	49 ec       	ldi	r20, 0xC9	; 201
    1a80:	0c 94 79 0c 	jmp	0x18f2	; 0x18f2 <__addsf3>
    1a84:	08 95       	ret

00001a86 <atan>:
    1a86:	df 93       	push	r29
    1a88:	dd 27       	eor	r29, r29
    1a8a:	b9 2f       	mov	r27, r25
    1a8c:	bf 77       	andi	r27, 0x7F	; 127
    1a8e:	40 e8       	ldi	r20, 0x80	; 128
    1a90:	5f e3       	ldi	r21, 0x3F	; 63
    1a92:	16 16       	cp	r1, r22
    1a94:	17 06       	cpc	r1, r23
    1a96:	48 07       	cpc	r20, r24
    1a98:	5b 07       	cpc	r21, r27
    1a9a:	18 f4       	brcc	.+6      	; 0x1aa2 <atan+0x1c>
    1a9c:	d9 2f       	mov	r29, r25
    1a9e:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <inverse>
    1aa2:	9f 93       	push	r25
    1aa4:	8f 93       	push	r24
    1aa6:	7f 93       	push	r23
    1aa8:	6f 93       	push	r22
    1aaa:	0e 94 b1 0f 	call	0x1f62	; 0x1f62 <square>
    1aae:	ec e7       	ldi	r30, 0x7C	; 124
    1ab0:	f0 e0       	ldi	r31, 0x00	; 0
    1ab2:	0e 94 73 0e 	call	0x1ce6	; 0x1ce6 <__fp_powser>
    1ab6:	0e 94 bc 0e 	call	0x1d78	; 0x1d78 <__fp_round>
    1aba:	2f 91       	pop	r18
    1abc:	3f 91       	pop	r19
    1abe:	4f 91       	pop	r20
    1ac0:	5f 91       	pop	r21
    1ac2:	0e 94 11 0f 	call	0x1e22	; 0x1e22 <__mulsf3x>
    1ac6:	dd 23       	and	r29, r29
    1ac8:	51 f0       	breq	.+20     	; 0x1ade <atan+0x58>
    1aca:	90 58       	subi	r25, 0x80	; 128
    1acc:	a2 ea       	ldi	r26, 0xA2	; 162
    1ace:	2a ed       	ldi	r18, 0xDA	; 218
    1ad0:	3f e0       	ldi	r19, 0x0F	; 15
    1ad2:	49 ec       	ldi	r20, 0xC9	; 201
    1ad4:	5f e3       	ldi	r21, 0x3F	; 63
    1ad6:	d0 78       	andi	r29, 0x80	; 128
    1ad8:	5d 27       	eor	r21, r29
    1ada:	0e 94 90 0c 	call	0x1920	; 0x1920 <__addsf3x>
    1ade:	df 91       	pop	r29
    1ae0:	0c 94 bc 0e 	jmp	0x1d78	; 0x1d78 <__fp_round>

00001ae4 <__cmpsf2>:
    1ae4:	0e 94 46 0e 	call	0x1c8c	; 0x1c8c <__fp_cmp>
    1ae8:	08 f4       	brcc	.+2      	; 0x1aec <__cmpsf2+0x8>
    1aea:	81 e0       	ldi	r24, 0x01	; 1
    1aec:	08 95       	ret

00001aee <__divsf3>:
    1aee:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <__divsf3x>
    1af2:	0c 94 bc 0e 	jmp	0x1d78	; 0x1d78 <__fp_round>
    1af6:	0e 94 b5 0e 	call	0x1d6a	; 0x1d6a <__fp_pscB>
    1afa:	58 f0       	brcs	.+22     	; 0x1b12 <__divsf3+0x24>
    1afc:	0e 94 ae 0e 	call	0x1d5c	; 0x1d5c <__fp_pscA>
    1b00:	40 f0       	brcs	.+16     	; 0x1b12 <__divsf3+0x24>
    1b02:	29 f4       	brne	.+10     	; 0x1b0e <__divsf3+0x20>
    1b04:	5f 3f       	cpi	r21, 0xFF	; 255
    1b06:	29 f0       	breq	.+10     	; 0x1b12 <__divsf3+0x24>
    1b08:	0c 94 6a 0e 	jmp	0x1cd4	; 0x1cd4 <__fp_inf>
    1b0c:	51 11       	cpse	r21, r1
    1b0e:	0c 94 f0 0e 	jmp	0x1de0	; 0x1de0 <__fp_szero>
    1b12:	0c 94 70 0e 	jmp	0x1ce0	; 0x1ce0 <__fp_nan>

00001b16 <__divsf3x>:
    1b16:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <__fp_split3>
    1b1a:	68 f3       	brcs	.-38     	; 0x1af6 <__divsf3+0x8>

00001b1c <__divsf3_pse>:
    1b1c:	99 23       	and	r25, r25
    1b1e:	b1 f3       	breq	.-20     	; 0x1b0c <__divsf3+0x1e>
    1b20:	55 23       	and	r21, r21
    1b22:	91 f3       	breq	.-28     	; 0x1b08 <__divsf3+0x1a>
    1b24:	95 1b       	sub	r25, r21
    1b26:	55 0b       	sbc	r21, r21
    1b28:	bb 27       	eor	r27, r27
    1b2a:	aa 27       	eor	r26, r26
    1b2c:	62 17       	cp	r22, r18
    1b2e:	73 07       	cpc	r23, r19
    1b30:	84 07       	cpc	r24, r20
    1b32:	38 f0       	brcs	.+14     	; 0x1b42 <__divsf3_pse+0x26>
    1b34:	9f 5f       	subi	r25, 0xFF	; 255
    1b36:	5f 4f       	sbci	r21, 0xFF	; 255
    1b38:	22 0f       	add	r18, r18
    1b3a:	33 1f       	adc	r19, r19
    1b3c:	44 1f       	adc	r20, r20
    1b3e:	aa 1f       	adc	r26, r26
    1b40:	a9 f3       	breq	.-22     	; 0x1b2c <__divsf3_pse+0x10>
    1b42:	35 d0       	rcall	.+106    	; 0x1bae <__divsf3_pse+0x92>
    1b44:	0e 2e       	mov	r0, r30
    1b46:	3a f0       	brmi	.+14     	; 0x1b56 <__divsf3_pse+0x3a>
    1b48:	e0 e8       	ldi	r30, 0x80	; 128
    1b4a:	32 d0       	rcall	.+100    	; 0x1bb0 <__divsf3_pse+0x94>
    1b4c:	91 50       	subi	r25, 0x01	; 1
    1b4e:	50 40       	sbci	r21, 0x00	; 0
    1b50:	e6 95       	lsr	r30
    1b52:	00 1c       	adc	r0, r0
    1b54:	ca f7       	brpl	.-14     	; 0x1b48 <__divsf3_pse+0x2c>
    1b56:	2b d0       	rcall	.+86     	; 0x1bae <__divsf3_pse+0x92>
    1b58:	fe 2f       	mov	r31, r30
    1b5a:	29 d0       	rcall	.+82     	; 0x1bae <__divsf3_pse+0x92>
    1b5c:	66 0f       	add	r22, r22
    1b5e:	77 1f       	adc	r23, r23
    1b60:	88 1f       	adc	r24, r24
    1b62:	bb 1f       	adc	r27, r27
    1b64:	26 17       	cp	r18, r22
    1b66:	37 07       	cpc	r19, r23
    1b68:	48 07       	cpc	r20, r24
    1b6a:	ab 07       	cpc	r26, r27
    1b6c:	b0 e8       	ldi	r27, 0x80	; 128
    1b6e:	09 f0       	breq	.+2      	; 0x1b72 <__divsf3_pse+0x56>
    1b70:	bb 0b       	sbc	r27, r27
    1b72:	80 2d       	mov	r24, r0
    1b74:	bf 01       	movw	r22, r30
    1b76:	ff 27       	eor	r31, r31
    1b78:	93 58       	subi	r25, 0x83	; 131
    1b7a:	5f 4f       	sbci	r21, 0xFF	; 255
    1b7c:	3a f0       	brmi	.+14     	; 0x1b8c <__divsf3_pse+0x70>
    1b7e:	9e 3f       	cpi	r25, 0xFE	; 254
    1b80:	51 05       	cpc	r21, r1
    1b82:	78 f0       	brcs	.+30     	; 0x1ba2 <__divsf3_pse+0x86>
    1b84:	0c 94 6a 0e 	jmp	0x1cd4	; 0x1cd4 <__fp_inf>
    1b88:	0c 94 f0 0e 	jmp	0x1de0	; 0x1de0 <__fp_szero>
    1b8c:	5f 3f       	cpi	r21, 0xFF	; 255
    1b8e:	e4 f3       	brlt	.-8      	; 0x1b88 <__divsf3_pse+0x6c>
    1b90:	98 3e       	cpi	r25, 0xE8	; 232
    1b92:	d4 f3       	brlt	.-12     	; 0x1b88 <__divsf3_pse+0x6c>
    1b94:	86 95       	lsr	r24
    1b96:	77 95       	ror	r23
    1b98:	67 95       	ror	r22
    1b9a:	b7 95       	ror	r27
    1b9c:	f7 95       	ror	r31
    1b9e:	9f 5f       	subi	r25, 0xFF	; 255
    1ba0:	c9 f7       	brne	.-14     	; 0x1b94 <__divsf3_pse+0x78>
    1ba2:	88 0f       	add	r24, r24
    1ba4:	91 1d       	adc	r25, r1
    1ba6:	96 95       	lsr	r25
    1ba8:	87 95       	ror	r24
    1baa:	97 f9       	bld	r25, 7
    1bac:	08 95       	ret
    1bae:	e1 e0       	ldi	r30, 0x01	; 1
    1bb0:	66 0f       	add	r22, r22
    1bb2:	77 1f       	adc	r23, r23
    1bb4:	88 1f       	adc	r24, r24
    1bb6:	bb 1f       	adc	r27, r27
    1bb8:	62 17       	cp	r22, r18
    1bba:	73 07       	cpc	r23, r19
    1bbc:	84 07       	cpc	r24, r20
    1bbe:	ba 07       	cpc	r27, r26
    1bc0:	20 f0       	brcs	.+8      	; 0x1bca <__divsf3_pse+0xae>
    1bc2:	62 1b       	sub	r22, r18
    1bc4:	73 0b       	sbc	r23, r19
    1bc6:	84 0b       	sbc	r24, r20
    1bc8:	ba 0b       	sbc	r27, r26
    1bca:	ee 1f       	adc	r30, r30
    1bcc:	88 f7       	brcc	.-30     	; 0x1bb0 <__divsf3_pse+0x94>
    1bce:	e0 95       	com	r30
    1bd0:	08 95       	ret

00001bd2 <__floatunsisf>:
    1bd2:	e8 94       	clt
    1bd4:	09 c0       	rjmp	.+18     	; 0x1be8 <__floatsisf+0x12>

00001bd6 <__floatsisf>:
    1bd6:	97 fb       	bst	r25, 7
    1bd8:	3e f4       	brtc	.+14     	; 0x1be8 <__floatsisf+0x12>
    1bda:	90 95       	com	r25
    1bdc:	80 95       	com	r24
    1bde:	70 95       	com	r23
    1be0:	61 95       	neg	r22
    1be2:	7f 4f       	sbci	r23, 0xFF	; 255
    1be4:	8f 4f       	sbci	r24, 0xFF	; 255
    1be6:	9f 4f       	sbci	r25, 0xFF	; 255
    1be8:	99 23       	and	r25, r25
    1bea:	a9 f0       	breq	.+42     	; 0x1c16 <__floatsisf+0x40>
    1bec:	f9 2f       	mov	r31, r25
    1bee:	96 e9       	ldi	r25, 0x96	; 150
    1bf0:	bb 27       	eor	r27, r27
    1bf2:	93 95       	inc	r25
    1bf4:	f6 95       	lsr	r31
    1bf6:	87 95       	ror	r24
    1bf8:	77 95       	ror	r23
    1bfa:	67 95       	ror	r22
    1bfc:	b7 95       	ror	r27
    1bfe:	f1 11       	cpse	r31, r1
    1c00:	f8 cf       	rjmp	.-16     	; 0x1bf2 <__floatsisf+0x1c>
    1c02:	fa f4       	brpl	.+62     	; 0x1c42 <__floatsisf+0x6c>
    1c04:	bb 0f       	add	r27, r27
    1c06:	11 f4       	brne	.+4      	; 0x1c0c <__floatsisf+0x36>
    1c08:	60 ff       	sbrs	r22, 0
    1c0a:	1b c0       	rjmp	.+54     	; 0x1c42 <__floatsisf+0x6c>
    1c0c:	6f 5f       	subi	r22, 0xFF	; 255
    1c0e:	7f 4f       	sbci	r23, 0xFF	; 255
    1c10:	8f 4f       	sbci	r24, 0xFF	; 255
    1c12:	9f 4f       	sbci	r25, 0xFF	; 255
    1c14:	16 c0       	rjmp	.+44     	; 0x1c42 <__floatsisf+0x6c>
    1c16:	88 23       	and	r24, r24
    1c18:	11 f0       	breq	.+4      	; 0x1c1e <__floatsisf+0x48>
    1c1a:	96 e9       	ldi	r25, 0x96	; 150
    1c1c:	11 c0       	rjmp	.+34     	; 0x1c40 <__floatsisf+0x6a>
    1c1e:	77 23       	and	r23, r23
    1c20:	21 f0       	breq	.+8      	; 0x1c2a <__floatsisf+0x54>
    1c22:	9e e8       	ldi	r25, 0x8E	; 142
    1c24:	87 2f       	mov	r24, r23
    1c26:	76 2f       	mov	r23, r22
    1c28:	05 c0       	rjmp	.+10     	; 0x1c34 <__floatsisf+0x5e>
    1c2a:	66 23       	and	r22, r22
    1c2c:	71 f0       	breq	.+28     	; 0x1c4a <__floatsisf+0x74>
    1c2e:	96 e8       	ldi	r25, 0x86	; 134
    1c30:	86 2f       	mov	r24, r22
    1c32:	70 e0       	ldi	r23, 0x00	; 0
    1c34:	60 e0       	ldi	r22, 0x00	; 0
    1c36:	2a f0       	brmi	.+10     	; 0x1c42 <__floatsisf+0x6c>
    1c38:	9a 95       	dec	r25
    1c3a:	66 0f       	add	r22, r22
    1c3c:	77 1f       	adc	r23, r23
    1c3e:	88 1f       	adc	r24, r24
    1c40:	da f7       	brpl	.-10     	; 0x1c38 <__floatsisf+0x62>
    1c42:	88 0f       	add	r24, r24
    1c44:	96 95       	lsr	r25
    1c46:	87 95       	ror	r24
    1c48:	97 f9       	bld	r25, 7
    1c4a:	08 95       	ret

00001c4c <__fp_arccos>:
    1c4c:	df 93       	push	r29
    1c4e:	cf 93       	push	r28
    1c50:	1f 93       	push	r17
    1c52:	0f 93       	push	r16
    1c54:	8b 01       	movw	r16, r22
    1c56:	ec 01       	movw	r28, r24
    1c58:	e9 ea       	ldi	r30, 0xA9	; 169
    1c5a:	f0 e0       	ldi	r31, 0x00	; 0
    1c5c:	0e 94 73 0e 	call	0x1ce6	; 0x1ce6 <__fp_powser>
    1c60:	0e 94 bc 0e 	call	0x1d78	; 0x1d78 <__fp_round>
    1c64:	98 01       	movw	r18, r16
    1c66:	ae 01       	movw	r20, r28
    1c68:	8b 01       	movw	r16, r22
    1c6a:	ec 01       	movw	r28, r24
    1c6c:	60 e0       	ldi	r22, 0x00	; 0
    1c6e:	70 e0       	ldi	r23, 0x00	; 0
    1c70:	80 e8       	ldi	r24, 0x80	; 128
    1c72:	9f e3       	ldi	r25, 0x3F	; 63
    1c74:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <__subsf3>
    1c78:	0e 94 71 0f 	call	0x1ee2	; 0x1ee2 <sqrt>
    1c7c:	98 01       	movw	r18, r16
    1c7e:	ae 01       	movw	r20, r28
    1c80:	0f 91       	pop	r16
    1c82:	1f 91       	pop	r17
    1c84:	cf 91       	pop	r28
    1c86:	df 91       	pop	r29
    1c88:	0c 94 11 0f 	jmp	0x1e22	; 0x1e22 <__mulsf3x>

00001c8c <__fp_cmp>:
    1c8c:	99 0f       	add	r25, r25
    1c8e:	00 08       	sbc	r0, r0
    1c90:	55 0f       	add	r21, r21
    1c92:	aa 0b       	sbc	r26, r26
    1c94:	e0 e8       	ldi	r30, 0x80	; 128
    1c96:	fe ef       	ldi	r31, 0xFE	; 254
    1c98:	16 16       	cp	r1, r22
    1c9a:	17 06       	cpc	r1, r23
    1c9c:	e8 07       	cpc	r30, r24
    1c9e:	f9 07       	cpc	r31, r25
    1ca0:	c0 f0       	brcs	.+48     	; 0x1cd2 <__fp_cmp+0x46>
    1ca2:	12 16       	cp	r1, r18
    1ca4:	13 06       	cpc	r1, r19
    1ca6:	e4 07       	cpc	r30, r20
    1ca8:	f5 07       	cpc	r31, r21
    1caa:	98 f0       	brcs	.+38     	; 0x1cd2 <__fp_cmp+0x46>
    1cac:	62 1b       	sub	r22, r18
    1cae:	73 0b       	sbc	r23, r19
    1cb0:	84 0b       	sbc	r24, r20
    1cb2:	95 0b       	sbc	r25, r21
    1cb4:	39 f4       	brne	.+14     	; 0x1cc4 <__fp_cmp+0x38>
    1cb6:	0a 26       	eor	r0, r26
    1cb8:	61 f0       	breq	.+24     	; 0x1cd2 <__fp_cmp+0x46>
    1cba:	23 2b       	or	r18, r19
    1cbc:	24 2b       	or	r18, r20
    1cbe:	25 2b       	or	r18, r21
    1cc0:	21 f4       	brne	.+8      	; 0x1cca <__fp_cmp+0x3e>
    1cc2:	08 95       	ret
    1cc4:	0a 26       	eor	r0, r26
    1cc6:	09 f4       	brne	.+2      	; 0x1cca <__fp_cmp+0x3e>
    1cc8:	a1 40       	sbci	r26, 0x01	; 1
    1cca:	a6 95       	lsr	r26
    1ccc:	8f ef       	ldi	r24, 0xFF	; 255
    1cce:	81 1d       	adc	r24, r1
    1cd0:	81 1d       	adc	r24, r1
    1cd2:	08 95       	ret

00001cd4 <__fp_inf>:
    1cd4:	97 f9       	bld	r25, 7
    1cd6:	9f 67       	ori	r25, 0x7F	; 127
    1cd8:	80 e8       	ldi	r24, 0x80	; 128
    1cda:	70 e0       	ldi	r23, 0x00	; 0
    1cdc:	60 e0       	ldi	r22, 0x00	; 0
    1cde:	08 95       	ret

00001ce0 <__fp_nan>:
    1ce0:	9f ef       	ldi	r25, 0xFF	; 255
    1ce2:	80 ec       	ldi	r24, 0xC0	; 192
    1ce4:	08 95       	ret

00001ce6 <__fp_powser>:
    1ce6:	df 93       	push	r29
    1ce8:	cf 93       	push	r28
    1cea:	1f 93       	push	r17
    1cec:	0f 93       	push	r16
    1cee:	ff 92       	push	r15
    1cf0:	ef 92       	push	r14
    1cf2:	df 92       	push	r13
    1cf4:	7b 01       	movw	r14, r22
    1cf6:	8c 01       	movw	r16, r24
    1cf8:	68 94       	set
    1cfa:	06 c0       	rjmp	.+12     	; 0x1d08 <__fp_powser+0x22>
    1cfc:	da 2e       	mov	r13, r26
    1cfe:	ef 01       	movw	r28, r30
    1d00:	0e 94 11 0f 	call	0x1e22	; 0x1e22 <__mulsf3x>
    1d04:	fe 01       	movw	r30, r28
    1d06:	e8 94       	clt
    1d08:	a5 91       	lpm	r26, Z+
    1d0a:	25 91       	lpm	r18, Z+
    1d0c:	35 91       	lpm	r19, Z+
    1d0e:	45 91       	lpm	r20, Z+
    1d10:	55 91       	lpm	r21, Z+
    1d12:	a6 f3       	brts	.-24     	; 0x1cfc <__fp_powser+0x16>
    1d14:	ef 01       	movw	r28, r30
    1d16:	0e 94 90 0c 	call	0x1920	; 0x1920 <__addsf3x>
    1d1a:	fe 01       	movw	r30, r28
    1d1c:	97 01       	movw	r18, r14
    1d1e:	a8 01       	movw	r20, r16
    1d20:	da 94       	dec	r13
    1d22:	69 f7       	brne	.-38     	; 0x1cfe <__fp_powser+0x18>
    1d24:	df 90       	pop	r13
    1d26:	ef 90       	pop	r14
    1d28:	ff 90       	pop	r15
    1d2a:	0f 91       	pop	r16
    1d2c:	1f 91       	pop	r17
    1d2e:	cf 91       	pop	r28
    1d30:	df 91       	pop	r29
    1d32:	08 95       	ret

00001d34 <__fp_powsodd>:
    1d34:	9f 93       	push	r25
    1d36:	8f 93       	push	r24
    1d38:	7f 93       	push	r23
    1d3a:	6f 93       	push	r22
    1d3c:	ff 93       	push	r31
    1d3e:	ef 93       	push	r30
    1d40:	9b 01       	movw	r18, r22
    1d42:	ac 01       	movw	r20, r24
    1d44:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <__mulsf3>
    1d48:	ef 91       	pop	r30
    1d4a:	ff 91       	pop	r31
    1d4c:	0e 94 73 0e 	call	0x1ce6	; 0x1ce6 <__fp_powser>
    1d50:	2f 91       	pop	r18
    1d52:	3f 91       	pop	r19
    1d54:	4f 91       	pop	r20
    1d56:	5f 91       	pop	r21
    1d58:	0c 94 fe 0e 	jmp	0x1dfc	; 0x1dfc <__mulsf3>

00001d5c <__fp_pscA>:
    1d5c:	00 24       	eor	r0, r0
    1d5e:	0a 94       	dec	r0
    1d60:	16 16       	cp	r1, r22
    1d62:	17 06       	cpc	r1, r23
    1d64:	18 06       	cpc	r1, r24
    1d66:	09 06       	cpc	r0, r25
    1d68:	08 95       	ret

00001d6a <__fp_pscB>:
    1d6a:	00 24       	eor	r0, r0
    1d6c:	0a 94       	dec	r0
    1d6e:	12 16       	cp	r1, r18
    1d70:	13 06       	cpc	r1, r19
    1d72:	14 06       	cpc	r1, r20
    1d74:	05 06       	cpc	r0, r21
    1d76:	08 95       	ret

00001d78 <__fp_round>:
    1d78:	09 2e       	mov	r0, r25
    1d7a:	03 94       	inc	r0
    1d7c:	00 0c       	add	r0, r0
    1d7e:	11 f4       	brne	.+4      	; 0x1d84 <__fp_round+0xc>
    1d80:	88 23       	and	r24, r24
    1d82:	52 f0       	brmi	.+20     	; 0x1d98 <__fp_round+0x20>
    1d84:	bb 0f       	add	r27, r27
    1d86:	40 f4       	brcc	.+16     	; 0x1d98 <__fp_round+0x20>
    1d88:	bf 2b       	or	r27, r31
    1d8a:	11 f4       	brne	.+4      	; 0x1d90 <__fp_round+0x18>
    1d8c:	60 ff       	sbrs	r22, 0
    1d8e:	04 c0       	rjmp	.+8      	; 0x1d98 <__fp_round+0x20>
    1d90:	6f 5f       	subi	r22, 0xFF	; 255
    1d92:	7f 4f       	sbci	r23, 0xFF	; 255
    1d94:	8f 4f       	sbci	r24, 0xFF	; 255
    1d96:	9f 4f       	sbci	r25, 0xFF	; 255
    1d98:	08 95       	ret

00001d9a <__fp_split3>:
    1d9a:	57 fd       	sbrc	r21, 7
    1d9c:	90 58       	subi	r25, 0x80	; 128
    1d9e:	44 0f       	add	r20, r20
    1da0:	55 1f       	adc	r21, r21
    1da2:	59 f0       	breq	.+22     	; 0x1dba <__fp_splitA+0x10>
    1da4:	5f 3f       	cpi	r21, 0xFF	; 255
    1da6:	71 f0       	breq	.+28     	; 0x1dc4 <__fp_splitA+0x1a>
    1da8:	47 95       	ror	r20

00001daa <__fp_splitA>:
    1daa:	88 0f       	add	r24, r24
    1dac:	97 fb       	bst	r25, 7
    1dae:	99 1f       	adc	r25, r25
    1db0:	61 f0       	breq	.+24     	; 0x1dca <__fp_splitA+0x20>
    1db2:	9f 3f       	cpi	r25, 0xFF	; 255
    1db4:	79 f0       	breq	.+30     	; 0x1dd4 <__fp_splitA+0x2a>
    1db6:	87 95       	ror	r24
    1db8:	08 95       	ret
    1dba:	12 16       	cp	r1, r18
    1dbc:	13 06       	cpc	r1, r19
    1dbe:	14 06       	cpc	r1, r20
    1dc0:	55 1f       	adc	r21, r21
    1dc2:	f2 cf       	rjmp	.-28     	; 0x1da8 <__fp_split3+0xe>
    1dc4:	46 95       	lsr	r20
    1dc6:	f1 df       	rcall	.-30     	; 0x1daa <__fp_splitA>
    1dc8:	08 c0       	rjmp	.+16     	; 0x1dda <__fp_splitA+0x30>
    1dca:	16 16       	cp	r1, r22
    1dcc:	17 06       	cpc	r1, r23
    1dce:	18 06       	cpc	r1, r24
    1dd0:	99 1f       	adc	r25, r25
    1dd2:	f1 cf       	rjmp	.-30     	; 0x1db6 <__fp_splitA+0xc>
    1dd4:	86 95       	lsr	r24
    1dd6:	71 05       	cpc	r23, r1
    1dd8:	61 05       	cpc	r22, r1
    1dda:	08 94       	sec
    1ddc:	08 95       	ret

00001dde <__fp_zero>:
    1dde:	e8 94       	clt

00001de0 <__fp_szero>:
    1de0:	bb 27       	eor	r27, r27
    1de2:	66 27       	eor	r22, r22
    1de4:	77 27       	eor	r23, r23
    1de6:	cb 01       	movw	r24, r22
    1de8:	97 f9       	bld	r25, 7
    1dea:	08 95       	ret

00001dec <inverse>:
    1dec:	9b 01       	movw	r18, r22
    1dee:	ac 01       	movw	r20, r24
    1df0:	60 e0       	ldi	r22, 0x00	; 0
    1df2:	70 e0       	ldi	r23, 0x00	; 0
    1df4:	80 e8       	ldi	r24, 0x80	; 128
    1df6:	9f e3       	ldi	r25, 0x3F	; 63
    1df8:	0c 94 77 0d 	jmp	0x1aee	; 0x1aee <__divsf3>

00001dfc <__mulsf3>:
    1dfc:	0e 94 11 0f 	call	0x1e22	; 0x1e22 <__mulsf3x>
    1e00:	0c 94 bc 0e 	jmp	0x1d78	; 0x1d78 <__fp_round>
    1e04:	0e 94 ae 0e 	call	0x1d5c	; 0x1d5c <__fp_pscA>
    1e08:	38 f0       	brcs	.+14     	; 0x1e18 <__mulsf3+0x1c>
    1e0a:	0e 94 b5 0e 	call	0x1d6a	; 0x1d6a <__fp_pscB>
    1e0e:	20 f0       	brcs	.+8      	; 0x1e18 <__mulsf3+0x1c>
    1e10:	95 23       	and	r25, r21
    1e12:	11 f0       	breq	.+4      	; 0x1e18 <__mulsf3+0x1c>
    1e14:	0c 94 6a 0e 	jmp	0x1cd4	; 0x1cd4 <__fp_inf>
    1e18:	0c 94 70 0e 	jmp	0x1ce0	; 0x1ce0 <__fp_nan>
    1e1c:	11 24       	eor	r1, r1
    1e1e:	0c 94 f0 0e 	jmp	0x1de0	; 0x1de0 <__fp_szero>

00001e22 <__mulsf3x>:
    1e22:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <__fp_split3>
    1e26:	70 f3       	brcs	.-36     	; 0x1e04 <__mulsf3+0x8>

00001e28 <__mulsf3_pse>:
    1e28:	95 9f       	mul	r25, r21
    1e2a:	c1 f3       	breq	.-16     	; 0x1e1c <__mulsf3+0x20>
    1e2c:	95 0f       	add	r25, r21
    1e2e:	50 e0       	ldi	r21, 0x00	; 0
    1e30:	55 1f       	adc	r21, r21
    1e32:	62 9f       	mul	r22, r18
    1e34:	f0 01       	movw	r30, r0
    1e36:	72 9f       	mul	r23, r18
    1e38:	bb 27       	eor	r27, r27
    1e3a:	f0 0d       	add	r31, r0
    1e3c:	b1 1d       	adc	r27, r1
    1e3e:	63 9f       	mul	r22, r19
    1e40:	aa 27       	eor	r26, r26
    1e42:	f0 0d       	add	r31, r0
    1e44:	b1 1d       	adc	r27, r1
    1e46:	aa 1f       	adc	r26, r26
    1e48:	64 9f       	mul	r22, r20
    1e4a:	66 27       	eor	r22, r22
    1e4c:	b0 0d       	add	r27, r0
    1e4e:	a1 1d       	adc	r26, r1
    1e50:	66 1f       	adc	r22, r22
    1e52:	82 9f       	mul	r24, r18
    1e54:	22 27       	eor	r18, r18
    1e56:	b0 0d       	add	r27, r0
    1e58:	a1 1d       	adc	r26, r1
    1e5a:	62 1f       	adc	r22, r18
    1e5c:	73 9f       	mul	r23, r19
    1e5e:	b0 0d       	add	r27, r0
    1e60:	a1 1d       	adc	r26, r1
    1e62:	62 1f       	adc	r22, r18
    1e64:	83 9f       	mul	r24, r19
    1e66:	a0 0d       	add	r26, r0
    1e68:	61 1d       	adc	r22, r1
    1e6a:	22 1f       	adc	r18, r18
    1e6c:	74 9f       	mul	r23, r20
    1e6e:	33 27       	eor	r19, r19
    1e70:	a0 0d       	add	r26, r0
    1e72:	61 1d       	adc	r22, r1
    1e74:	23 1f       	adc	r18, r19
    1e76:	84 9f       	mul	r24, r20
    1e78:	60 0d       	add	r22, r0
    1e7a:	21 1d       	adc	r18, r1
    1e7c:	82 2f       	mov	r24, r18
    1e7e:	76 2f       	mov	r23, r22
    1e80:	6a 2f       	mov	r22, r26
    1e82:	11 24       	eor	r1, r1
    1e84:	9f 57       	subi	r25, 0x7F	; 127
    1e86:	50 40       	sbci	r21, 0x00	; 0
    1e88:	9a f0       	brmi	.+38     	; 0x1eb0 <__mulsf3_pse+0x88>
    1e8a:	f1 f0       	breq	.+60     	; 0x1ec8 <__mulsf3_pse+0xa0>
    1e8c:	88 23       	and	r24, r24
    1e8e:	4a f0       	brmi	.+18     	; 0x1ea2 <__mulsf3_pse+0x7a>
    1e90:	ee 0f       	add	r30, r30
    1e92:	ff 1f       	adc	r31, r31
    1e94:	bb 1f       	adc	r27, r27
    1e96:	66 1f       	adc	r22, r22
    1e98:	77 1f       	adc	r23, r23
    1e9a:	88 1f       	adc	r24, r24
    1e9c:	91 50       	subi	r25, 0x01	; 1
    1e9e:	50 40       	sbci	r21, 0x00	; 0
    1ea0:	a9 f7       	brne	.-22     	; 0x1e8c <__mulsf3_pse+0x64>
    1ea2:	9e 3f       	cpi	r25, 0xFE	; 254
    1ea4:	51 05       	cpc	r21, r1
    1ea6:	80 f0       	brcs	.+32     	; 0x1ec8 <__mulsf3_pse+0xa0>
    1ea8:	0c 94 6a 0e 	jmp	0x1cd4	; 0x1cd4 <__fp_inf>
    1eac:	0c 94 f0 0e 	jmp	0x1de0	; 0x1de0 <__fp_szero>
    1eb0:	5f 3f       	cpi	r21, 0xFF	; 255
    1eb2:	e4 f3       	brlt	.-8      	; 0x1eac <__mulsf3_pse+0x84>
    1eb4:	98 3e       	cpi	r25, 0xE8	; 232
    1eb6:	d4 f3       	brlt	.-12     	; 0x1eac <__mulsf3_pse+0x84>
    1eb8:	86 95       	lsr	r24
    1eba:	77 95       	ror	r23
    1ebc:	67 95       	ror	r22
    1ebe:	b7 95       	ror	r27
    1ec0:	f7 95       	ror	r31
    1ec2:	e7 95       	ror	r30
    1ec4:	9f 5f       	subi	r25, 0xFF	; 255
    1ec6:	c1 f7       	brne	.-16     	; 0x1eb8 <__mulsf3_pse+0x90>
    1ec8:	fe 2b       	or	r31, r30
    1eca:	88 0f       	add	r24, r24
    1ecc:	91 1d       	adc	r25, r1
    1ece:	96 95       	lsr	r25
    1ed0:	87 95       	ror	r24
    1ed2:	97 f9       	bld	r25, 7
    1ed4:	08 95       	ret
    1ed6:	19 f4       	brne	.+6      	; 0x1ede <__mulsf3_pse+0xb6>
    1ed8:	16 f4       	brtc	.+4      	; 0x1ede <__mulsf3_pse+0xb6>
    1eda:	0c 94 70 0e 	jmp	0x1ce0	; 0x1ce0 <__fp_nan>
    1ede:	0c 94 b5 0f 	jmp	0x1f6a	; 0x1f6a <__fp_mpack>

00001ee2 <sqrt>:
    1ee2:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <__fp_splitA>
    1ee6:	b8 f3       	brcs	.-18     	; 0x1ed6 <__mulsf3_pse+0xae>
    1ee8:	99 23       	and	r25, r25
    1eea:	c9 f3       	breq	.-14     	; 0x1ede <__mulsf3_pse+0xb6>
    1eec:	b6 f3       	brts	.-20     	; 0x1eda <__mulsf3_pse+0xb2>
    1eee:	9f 57       	subi	r25, 0x7F	; 127
    1ef0:	55 0b       	sbc	r21, r21
    1ef2:	87 ff       	sbrs	r24, 7
    1ef4:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__fp_norm2>
    1ef8:	00 24       	eor	r0, r0
    1efa:	a0 e6       	ldi	r26, 0x60	; 96
    1efc:	40 ea       	ldi	r20, 0xA0	; 160
    1efe:	90 01       	movw	r18, r0
    1f00:	80 58       	subi	r24, 0x80	; 128
    1f02:	56 95       	lsr	r21
    1f04:	97 95       	ror	r25
    1f06:	28 f4       	brcc	.+10     	; 0x1f12 <sqrt+0x30>
    1f08:	80 5c       	subi	r24, 0xC0	; 192
    1f0a:	66 0f       	add	r22, r22
    1f0c:	77 1f       	adc	r23, r23
    1f0e:	88 1f       	adc	r24, r24
    1f10:	20 f0       	brcs	.+8      	; 0x1f1a <sqrt+0x38>
    1f12:	26 17       	cp	r18, r22
    1f14:	37 07       	cpc	r19, r23
    1f16:	48 07       	cpc	r20, r24
    1f18:	30 f4       	brcc	.+12     	; 0x1f26 <sqrt+0x44>
    1f1a:	62 1b       	sub	r22, r18
    1f1c:	73 0b       	sbc	r23, r19
    1f1e:	84 0b       	sbc	r24, r20
    1f20:	20 29       	or	r18, r0
    1f22:	31 29       	or	r19, r1
    1f24:	4a 2b       	or	r20, r26
    1f26:	a6 95       	lsr	r26
    1f28:	17 94       	ror	r1
    1f2a:	07 94       	ror	r0
    1f2c:	20 25       	eor	r18, r0
    1f2e:	31 25       	eor	r19, r1
    1f30:	4a 27       	eor	r20, r26
    1f32:	58 f7       	brcc	.-42     	; 0x1f0a <sqrt+0x28>
    1f34:	66 0f       	add	r22, r22
    1f36:	77 1f       	adc	r23, r23
    1f38:	88 1f       	adc	r24, r24
    1f3a:	20 f0       	brcs	.+8      	; 0x1f44 <sqrt+0x62>
    1f3c:	26 17       	cp	r18, r22
    1f3e:	37 07       	cpc	r19, r23
    1f40:	48 07       	cpc	r20, r24
    1f42:	30 f4       	brcc	.+12     	; 0x1f50 <sqrt+0x6e>
    1f44:	62 0b       	sbc	r22, r18
    1f46:	73 0b       	sbc	r23, r19
    1f48:	84 0b       	sbc	r24, r20
    1f4a:	20 0d       	add	r18, r0
    1f4c:	31 1d       	adc	r19, r1
    1f4e:	41 1d       	adc	r20, r1
    1f50:	a0 95       	com	r26
    1f52:	81 f7       	brne	.-32     	; 0x1f34 <sqrt+0x52>
    1f54:	b9 01       	movw	r22, r18
    1f56:	84 2f       	mov	r24, r20
    1f58:	91 58       	subi	r25, 0x81	; 129
    1f5a:	88 0f       	add	r24, r24
    1f5c:	96 95       	lsr	r25
    1f5e:	87 95       	ror	r24
    1f60:	08 95       	ret

00001f62 <square>:
    1f62:	9b 01       	movw	r18, r22
    1f64:	ac 01       	movw	r20, r24
    1f66:	0c 94 fe 0e 	jmp	0x1dfc	; 0x1dfc <__mulsf3>

00001f6a <__fp_mpack>:
    1f6a:	9f 3f       	cpi	r25, 0xFF	; 255
    1f6c:	31 f0       	breq	.+12     	; 0x1f7a <__fp_mpack_finite+0xc>

00001f6e <__fp_mpack_finite>:
    1f6e:	91 50       	subi	r25, 0x01	; 1
    1f70:	20 f4       	brcc	.+8      	; 0x1f7a <__fp_mpack_finite+0xc>
    1f72:	87 95       	ror	r24
    1f74:	77 95       	ror	r23
    1f76:	67 95       	ror	r22
    1f78:	b7 95       	ror	r27
    1f7a:	88 0f       	add	r24, r24
    1f7c:	91 1d       	adc	r25, r1
    1f7e:	96 95       	lsr	r25
    1f80:	87 95       	ror	r24
    1f82:	97 f9       	bld	r25, 7
    1f84:	08 95       	ret

00001f86 <__fp_norm2>:
    1f86:	91 50       	subi	r25, 0x01	; 1
    1f88:	50 40       	sbci	r21, 0x00	; 0
    1f8a:	66 0f       	add	r22, r22
    1f8c:	77 1f       	adc	r23, r23
    1f8e:	88 1f       	adc	r24, r24
    1f90:	d2 f7       	brpl	.-12     	; 0x1f86 <__fp_norm2>
    1f92:	08 95       	ret

00001f94 <dtostrf>:
    1f94:	ef 92       	push	r14
    1f96:	0f 93       	push	r16
    1f98:	1f 93       	push	r17
    1f9a:	cf 93       	push	r28
    1f9c:	df 93       	push	r29
    1f9e:	e8 01       	movw	r28, r16
    1fa0:	47 fd       	sbrc	r20, 7
    1fa2:	02 c0       	rjmp	.+4      	; 0x1fa8 <dtostrf+0x14>
    1fa4:	34 e0       	ldi	r19, 0x04	; 4
    1fa6:	01 c0       	rjmp	.+2      	; 0x1faa <dtostrf+0x16>
    1fa8:	34 e1       	ldi	r19, 0x14	; 20
    1faa:	04 2e       	mov	r0, r20
    1fac:	00 0c       	add	r0, r0
    1fae:	55 0b       	sbc	r21, r21
    1fb0:	57 ff       	sbrs	r21, 7
    1fb2:	03 c0       	rjmp	.+6      	; 0x1fba <dtostrf+0x26>
    1fb4:	51 95       	neg	r21
    1fb6:	41 95       	neg	r20
    1fb8:	51 09       	sbc	r21, r1
    1fba:	e3 2e       	mov	r14, r19
    1fbc:	02 2f       	mov	r16, r18
    1fbe:	24 2f       	mov	r18, r20
    1fc0:	ae 01       	movw	r20, r28
    1fc2:	0e 94 ea 0f 	call	0x1fd4	; 0x1fd4 <dtoa_prf>
    1fc6:	ce 01       	movw	r24, r28
    1fc8:	df 91       	pop	r29
    1fca:	cf 91       	pop	r28
    1fcc:	1f 91       	pop	r17
    1fce:	0f 91       	pop	r16
    1fd0:	ef 90       	pop	r14
    1fd2:	08 95       	ret

00001fd4 <dtoa_prf>:
    1fd4:	a9 e0       	ldi	r26, 0x09	; 9
    1fd6:	b0 e0       	ldi	r27, 0x00	; 0
    1fd8:	e0 ef       	ldi	r30, 0xF0	; 240
    1fda:	ff e0       	ldi	r31, 0x0F	; 15
    1fdc:	0c 94 22 12 	jmp	0x2444	; 0x2444 <__prologue_saves__+0xc>
    1fe0:	6a 01       	movw	r12, r20
    1fe2:	12 2f       	mov	r17, r18
    1fe4:	b0 2e       	mov	r11, r16
    1fe6:	2b e3       	ldi	r18, 0x3B	; 59
    1fe8:	20 17       	cp	r18, r16
    1fea:	20 f0       	brcs	.+8      	; 0x1ff4 <dtoa_prf+0x20>
    1fec:	ff 24       	eor	r15, r15
    1fee:	f3 94       	inc	r15
    1ff0:	f0 0e       	add	r15, r16
    1ff2:	02 c0       	rjmp	.+4      	; 0x1ff8 <dtoa_prf+0x24>
    1ff4:	2c e3       	ldi	r18, 0x3C	; 60
    1ff6:	f2 2e       	mov	r15, r18
    1ff8:	0f 2d       	mov	r16, r15
    1ffa:	27 e0       	ldi	r18, 0x07	; 7
    1ffc:	ae 01       	movw	r20, r28
    1ffe:	4f 5f       	subi	r20, 0xFF	; 255
    2000:	5f 4f       	sbci	r21, 0xFF	; 255
    2002:	0e 94 44 11 	call	0x2288	; 0x2288 <__ftoa_engine>
    2006:	bc 01       	movw	r22, r24
    2008:	49 81       	ldd	r20, Y+1	; 0x01
    200a:	84 2f       	mov	r24, r20
    200c:	89 70       	andi	r24, 0x09	; 9
    200e:	81 30       	cpi	r24, 0x01	; 1
    2010:	31 f0       	breq	.+12     	; 0x201e <dtoa_prf+0x4a>
    2012:	e1 fc       	sbrc	r14, 1
    2014:	06 c0       	rjmp	.+12     	; 0x2022 <dtoa_prf+0x4e>
    2016:	e0 fe       	sbrs	r14, 0
    2018:	06 c0       	rjmp	.+12     	; 0x2026 <dtoa_prf+0x52>
    201a:	90 e2       	ldi	r25, 0x20	; 32
    201c:	05 c0       	rjmp	.+10     	; 0x2028 <dtoa_prf+0x54>
    201e:	9d e2       	ldi	r25, 0x2D	; 45
    2020:	03 c0       	rjmp	.+6      	; 0x2028 <dtoa_prf+0x54>
    2022:	9b e2       	ldi	r25, 0x2B	; 43
    2024:	01 c0       	rjmp	.+2      	; 0x2028 <dtoa_prf+0x54>
    2026:	90 e0       	ldi	r25, 0x00	; 0
    2028:	5e 2d       	mov	r21, r14
    202a:	50 71       	andi	r21, 0x10	; 16
    202c:	43 ff       	sbrs	r20, 3
    202e:	3c c0       	rjmp	.+120    	; 0x20a8 <dtoa_prf+0xd4>
    2030:	91 11       	cpse	r25, r1
    2032:	02 c0       	rjmp	.+4      	; 0x2038 <dtoa_prf+0x64>
    2034:	83 e0       	ldi	r24, 0x03	; 3
    2036:	01 c0       	rjmp	.+2      	; 0x203a <dtoa_prf+0x66>
    2038:	84 e0       	ldi	r24, 0x04	; 4
    203a:	81 17       	cp	r24, r17
    203c:	18 f4       	brcc	.+6      	; 0x2044 <dtoa_prf+0x70>
    203e:	21 2f       	mov	r18, r17
    2040:	28 1b       	sub	r18, r24
    2042:	01 c0       	rjmp	.+2      	; 0x2046 <dtoa_prf+0x72>
    2044:	20 e0       	ldi	r18, 0x00	; 0
    2046:	51 11       	cpse	r21, r1
    2048:	0b c0       	rjmp	.+22     	; 0x2060 <dtoa_prf+0x8c>
    204a:	f6 01       	movw	r30, r12
    204c:	82 2f       	mov	r24, r18
    204e:	30 e2       	ldi	r19, 0x20	; 32
    2050:	88 23       	and	r24, r24
    2052:	19 f0       	breq	.+6      	; 0x205a <dtoa_prf+0x86>
    2054:	31 93       	st	Z+, r19
    2056:	81 50       	subi	r24, 0x01	; 1
    2058:	fb cf       	rjmp	.-10     	; 0x2050 <dtoa_prf+0x7c>
    205a:	c2 0e       	add	r12, r18
    205c:	d1 1c       	adc	r13, r1
    205e:	20 e0       	ldi	r18, 0x00	; 0
    2060:	99 23       	and	r25, r25
    2062:	29 f0       	breq	.+10     	; 0x206e <dtoa_prf+0x9a>
    2064:	d6 01       	movw	r26, r12
    2066:	9c 93       	st	X, r25
    2068:	f6 01       	movw	r30, r12
    206a:	31 96       	adiw	r30, 0x01	; 1
    206c:	6f 01       	movw	r12, r30
    206e:	c6 01       	movw	r24, r12
    2070:	03 96       	adiw	r24, 0x03	; 3
    2072:	e2 fe       	sbrs	r14, 2
    2074:	0a c0       	rjmp	.+20     	; 0x208a <dtoa_prf+0xb6>
    2076:	3e e4       	ldi	r19, 0x4E	; 78
    2078:	d6 01       	movw	r26, r12
    207a:	3c 93       	st	X, r19
    207c:	41 e4       	ldi	r20, 0x41	; 65
    207e:	11 96       	adiw	r26, 0x01	; 1
    2080:	4c 93       	st	X, r20
    2082:	11 97       	sbiw	r26, 0x01	; 1
    2084:	12 96       	adiw	r26, 0x02	; 2
    2086:	3c 93       	st	X, r19
    2088:	06 c0       	rjmp	.+12     	; 0x2096 <dtoa_prf+0xc2>
    208a:	3e e6       	ldi	r19, 0x6E	; 110
    208c:	f6 01       	movw	r30, r12
    208e:	30 83       	st	Z, r19
    2090:	41 e6       	ldi	r20, 0x61	; 97
    2092:	41 83       	std	Z+1, r20	; 0x01
    2094:	32 83       	std	Z+2, r19	; 0x02
    2096:	fc 01       	movw	r30, r24
    2098:	32 2f       	mov	r19, r18
    209a:	40 e2       	ldi	r20, 0x20	; 32
    209c:	33 23       	and	r19, r19
    209e:	09 f4       	brne	.+2      	; 0x20a2 <dtoa_prf+0xce>
    20a0:	42 c0       	rjmp	.+132    	; 0x2126 <dtoa_prf+0x152>
    20a2:	41 93       	st	Z+, r20
    20a4:	31 50       	subi	r19, 0x01	; 1
    20a6:	fa cf       	rjmp	.-12     	; 0x209c <dtoa_prf+0xc8>
    20a8:	42 ff       	sbrs	r20, 2
    20aa:	44 c0       	rjmp	.+136    	; 0x2134 <dtoa_prf+0x160>
    20ac:	91 11       	cpse	r25, r1
    20ae:	02 c0       	rjmp	.+4      	; 0x20b4 <dtoa_prf+0xe0>
    20b0:	83 e0       	ldi	r24, 0x03	; 3
    20b2:	01 c0       	rjmp	.+2      	; 0x20b6 <dtoa_prf+0xe2>
    20b4:	84 e0       	ldi	r24, 0x04	; 4
    20b6:	81 17       	cp	r24, r17
    20b8:	18 f4       	brcc	.+6      	; 0x20c0 <dtoa_prf+0xec>
    20ba:	21 2f       	mov	r18, r17
    20bc:	28 1b       	sub	r18, r24
    20be:	01 c0       	rjmp	.+2      	; 0x20c2 <dtoa_prf+0xee>
    20c0:	20 e0       	ldi	r18, 0x00	; 0
    20c2:	51 11       	cpse	r21, r1
    20c4:	0b c0       	rjmp	.+22     	; 0x20dc <dtoa_prf+0x108>
    20c6:	f6 01       	movw	r30, r12
    20c8:	82 2f       	mov	r24, r18
    20ca:	30 e2       	ldi	r19, 0x20	; 32
    20cc:	88 23       	and	r24, r24
    20ce:	19 f0       	breq	.+6      	; 0x20d6 <dtoa_prf+0x102>
    20d0:	31 93       	st	Z+, r19
    20d2:	81 50       	subi	r24, 0x01	; 1
    20d4:	fb cf       	rjmp	.-10     	; 0x20cc <dtoa_prf+0xf8>
    20d6:	c2 0e       	add	r12, r18
    20d8:	d1 1c       	adc	r13, r1
    20da:	20 e0       	ldi	r18, 0x00	; 0
    20dc:	99 23       	and	r25, r25
    20de:	29 f0       	breq	.+10     	; 0x20ea <dtoa_prf+0x116>
    20e0:	d6 01       	movw	r26, r12
    20e2:	9c 93       	st	X, r25
    20e4:	f6 01       	movw	r30, r12
    20e6:	31 96       	adiw	r30, 0x01	; 1
    20e8:	6f 01       	movw	r12, r30
    20ea:	c6 01       	movw	r24, r12
    20ec:	03 96       	adiw	r24, 0x03	; 3
    20ee:	e2 fe       	sbrs	r14, 2
    20f0:	0b c0       	rjmp	.+22     	; 0x2108 <dtoa_prf+0x134>
    20f2:	39 e4       	ldi	r19, 0x49	; 73
    20f4:	d6 01       	movw	r26, r12
    20f6:	3c 93       	st	X, r19
    20f8:	3e e4       	ldi	r19, 0x4E	; 78
    20fa:	11 96       	adiw	r26, 0x01	; 1
    20fc:	3c 93       	st	X, r19
    20fe:	11 97       	sbiw	r26, 0x01	; 1
    2100:	36 e4       	ldi	r19, 0x46	; 70
    2102:	12 96       	adiw	r26, 0x02	; 2
    2104:	3c 93       	st	X, r19
    2106:	07 c0       	rjmp	.+14     	; 0x2116 <dtoa_prf+0x142>
    2108:	39 e6       	ldi	r19, 0x69	; 105
    210a:	f6 01       	movw	r30, r12
    210c:	30 83       	st	Z, r19
    210e:	3e e6       	ldi	r19, 0x6E	; 110
    2110:	31 83       	std	Z+1, r19	; 0x01
    2112:	36 e6       	ldi	r19, 0x66	; 102
    2114:	32 83       	std	Z+2, r19	; 0x02
    2116:	fc 01       	movw	r30, r24
    2118:	32 2f       	mov	r19, r18
    211a:	40 e2       	ldi	r20, 0x20	; 32
    211c:	33 23       	and	r19, r19
    211e:	19 f0       	breq	.+6      	; 0x2126 <dtoa_prf+0x152>
    2120:	41 93       	st	Z+, r20
    2122:	31 50       	subi	r19, 0x01	; 1
    2124:	fb cf       	rjmp	.-10     	; 0x211c <dtoa_prf+0x148>
    2126:	fc 01       	movw	r30, r24
    2128:	e2 0f       	add	r30, r18
    212a:	f1 1d       	adc	r31, r1
    212c:	10 82       	st	Z, r1
    212e:	8e ef       	ldi	r24, 0xFE	; 254
    2130:	9f ef       	ldi	r25, 0xFF	; 255
    2132:	a6 c0       	rjmp	.+332    	; 0x2280 <dtoa_prf+0x2ac>
    2134:	21 e0       	ldi	r18, 0x01	; 1
    2136:	30 e0       	ldi	r19, 0x00	; 0
    2138:	91 11       	cpse	r25, r1
    213a:	02 c0       	rjmp	.+4      	; 0x2140 <dtoa_prf+0x16c>
    213c:	20 e0       	ldi	r18, 0x00	; 0
    213e:	30 e0       	ldi	r19, 0x00	; 0
    2140:	16 16       	cp	r1, r22
    2142:	17 06       	cpc	r1, r23
    2144:	1c f4       	brge	.+6      	; 0x214c <dtoa_prf+0x178>
    2146:	fb 01       	movw	r30, r22
    2148:	31 96       	adiw	r30, 0x01	; 1
    214a:	02 c0       	rjmp	.+4      	; 0x2150 <dtoa_prf+0x17c>
    214c:	e1 e0       	ldi	r30, 0x01	; 1
    214e:	f0 e0       	ldi	r31, 0x00	; 0
    2150:	2e 0f       	add	r18, r30
    2152:	3f 1f       	adc	r19, r31
    2154:	bb 20       	and	r11, r11
    2156:	21 f0       	breq	.+8      	; 0x2160 <dtoa_prf+0x18c>
    2158:	eb 2d       	mov	r30, r11
    215a:	f0 e0       	ldi	r31, 0x00	; 0
    215c:	31 96       	adiw	r30, 0x01	; 1
    215e:	02 c0       	rjmp	.+4      	; 0x2164 <dtoa_prf+0x190>
    2160:	e0 e0       	ldi	r30, 0x00	; 0
    2162:	f0 e0       	ldi	r31, 0x00	; 0
    2164:	2e 0f       	add	r18, r30
    2166:	3f 1f       	adc	r19, r31
    2168:	e1 2f       	mov	r30, r17
    216a:	f0 e0       	ldi	r31, 0x00	; 0
    216c:	2e 17       	cp	r18, r30
    216e:	3f 07       	cpc	r19, r31
    2170:	1c f4       	brge	.+6      	; 0x2178 <dtoa_prf+0x1a4>
    2172:	12 1b       	sub	r17, r18
    2174:	21 2f       	mov	r18, r17
    2176:	01 c0       	rjmp	.+2      	; 0x217a <dtoa_prf+0x1a6>
    2178:	20 e0       	ldi	r18, 0x00	; 0
    217a:	8e 2d       	mov	r24, r14
    217c:	88 71       	andi	r24, 0x18	; 24
    217e:	59 f4       	brne	.+22     	; 0x2196 <dtoa_prf+0x1c2>
    2180:	f6 01       	movw	r30, r12
    2182:	82 2f       	mov	r24, r18
    2184:	30 e2       	ldi	r19, 0x20	; 32
    2186:	88 23       	and	r24, r24
    2188:	19 f0       	breq	.+6      	; 0x2190 <dtoa_prf+0x1bc>
    218a:	31 93       	st	Z+, r19
    218c:	81 50       	subi	r24, 0x01	; 1
    218e:	fb cf       	rjmp	.-10     	; 0x2186 <dtoa_prf+0x1b2>
    2190:	c2 0e       	add	r12, r18
    2192:	d1 1c       	adc	r13, r1
    2194:	20 e0       	ldi	r18, 0x00	; 0
    2196:	99 23       	and	r25, r25
    2198:	29 f0       	breq	.+10     	; 0x21a4 <dtoa_prf+0x1d0>
    219a:	d6 01       	movw	r26, r12
    219c:	9c 93       	st	X, r25
    219e:	f6 01       	movw	r30, r12
    21a0:	31 96       	adiw	r30, 0x01	; 1
    21a2:	6f 01       	movw	r12, r30
    21a4:	51 11       	cpse	r21, r1
    21a6:	0b c0       	rjmp	.+22     	; 0x21be <dtoa_prf+0x1ea>
    21a8:	f6 01       	movw	r30, r12
    21aa:	82 2f       	mov	r24, r18
    21ac:	90 e3       	ldi	r25, 0x30	; 48
    21ae:	88 23       	and	r24, r24
    21b0:	19 f0       	breq	.+6      	; 0x21b8 <dtoa_prf+0x1e4>
    21b2:	91 93       	st	Z+, r25
    21b4:	81 50       	subi	r24, 0x01	; 1
    21b6:	fb cf       	rjmp	.-10     	; 0x21ae <dtoa_prf+0x1da>
    21b8:	c2 0e       	add	r12, r18
    21ba:	d1 1c       	adc	r13, r1
    21bc:	20 e0       	ldi	r18, 0x00	; 0
    21be:	0f 2d       	mov	r16, r15
    21c0:	06 0f       	add	r16, r22
    21c2:	9a 81       	ldd	r25, Y+2	; 0x02
    21c4:	34 2f       	mov	r19, r20
    21c6:	30 71       	andi	r19, 0x10	; 16
    21c8:	44 ff       	sbrs	r20, 4
    21ca:	03 c0       	rjmp	.+6      	; 0x21d2 <dtoa_prf+0x1fe>
    21cc:	91 33       	cpi	r25, 0x31	; 49
    21ce:	09 f4       	brne	.+2      	; 0x21d2 <dtoa_prf+0x1fe>
    21d0:	01 50       	subi	r16, 0x01	; 1
    21d2:	10 16       	cp	r1, r16
    21d4:	24 f4       	brge	.+8      	; 0x21de <dtoa_prf+0x20a>
    21d6:	09 30       	cpi	r16, 0x09	; 9
    21d8:	18 f0       	brcs	.+6      	; 0x21e0 <dtoa_prf+0x20c>
    21da:	08 e0       	ldi	r16, 0x08	; 8
    21dc:	01 c0       	rjmp	.+2      	; 0x21e0 <dtoa_prf+0x20c>
    21de:	01 e0       	ldi	r16, 0x01	; 1
    21e0:	ab 01       	movw	r20, r22
    21e2:	77 ff       	sbrs	r23, 7
    21e4:	02 c0       	rjmp	.+4      	; 0x21ea <dtoa_prf+0x216>
    21e6:	40 e0       	ldi	r20, 0x00	; 0
    21e8:	50 e0       	ldi	r21, 0x00	; 0
    21ea:	fb 01       	movw	r30, r22
    21ec:	e4 1b       	sub	r30, r20
    21ee:	f5 0b       	sbc	r31, r21
    21f0:	a1 e0       	ldi	r26, 0x01	; 1
    21f2:	b0 e0       	ldi	r27, 0x00	; 0
    21f4:	ac 0f       	add	r26, r28
    21f6:	bd 1f       	adc	r27, r29
    21f8:	ea 0f       	add	r30, r26
    21fa:	fb 1f       	adc	r31, r27
    21fc:	8e e2       	ldi	r24, 0x2E	; 46
    21fe:	a8 2e       	mov	r10, r24
    2200:	4b 01       	movw	r8, r22
    2202:	80 1a       	sub	r8, r16
    2204:	91 08       	sbc	r9, r1
    2206:	0b 2d       	mov	r16, r11
    2208:	10 e0       	ldi	r17, 0x00	; 0
    220a:	11 95       	neg	r17
    220c:	01 95       	neg	r16
    220e:	11 09       	sbc	r17, r1
    2210:	4f 3f       	cpi	r20, 0xFF	; 255
    2212:	bf ef       	ldi	r27, 0xFF	; 255
    2214:	5b 07       	cpc	r21, r27
    2216:	21 f4       	brne	.+8      	; 0x2220 <dtoa_prf+0x24c>
    2218:	d6 01       	movw	r26, r12
    221a:	ac 92       	st	X, r10
    221c:	11 96       	adiw	r26, 0x01	; 1
    221e:	6d 01       	movw	r12, r26
    2220:	64 17       	cp	r22, r20
    2222:	75 07       	cpc	r23, r21
    2224:	2c f0       	brlt	.+10     	; 0x2230 <dtoa_prf+0x25c>
    2226:	84 16       	cp	r8, r20
    2228:	95 06       	cpc	r9, r21
    222a:	14 f4       	brge	.+4      	; 0x2230 <dtoa_prf+0x25c>
    222c:	81 81       	ldd	r24, Z+1	; 0x01
    222e:	01 c0       	rjmp	.+2      	; 0x2232 <dtoa_prf+0x25e>
    2230:	80 e3       	ldi	r24, 0x30	; 48
    2232:	41 50       	subi	r20, 0x01	; 1
    2234:	51 09       	sbc	r21, r1
    2236:	31 96       	adiw	r30, 0x01	; 1
    2238:	d6 01       	movw	r26, r12
    223a:	11 96       	adiw	r26, 0x01	; 1
    223c:	7d 01       	movw	r14, r26
    223e:	40 17       	cp	r20, r16
    2240:	51 07       	cpc	r21, r17
    2242:	24 f0       	brlt	.+8      	; 0x224c <dtoa_prf+0x278>
    2244:	d6 01       	movw	r26, r12
    2246:	8c 93       	st	X, r24
    2248:	67 01       	movw	r12, r14
    224a:	e2 cf       	rjmp	.-60     	; 0x2210 <dtoa_prf+0x23c>
    224c:	64 17       	cp	r22, r20
    224e:	75 07       	cpc	r23, r21
    2250:	39 f4       	brne	.+14     	; 0x2260 <dtoa_prf+0x28c>
    2252:	96 33       	cpi	r25, 0x36	; 54
    2254:	20 f4       	brcc	.+8      	; 0x225e <dtoa_prf+0x28a>
    2256:	95 33       	cpi	r25, 0x35	; 53
    2258:	19 f4       	brne	.+6      	; 0x2260 <dtoa_prf+0x28c>
    225a:	31 11       	cpse	r19, r1
    225c:	01 c0       	rjmp	.+2      	; 0x2260 <dtoa_prf+0x28c>
    225e:	81 e3       	ldi	r24, 0x31	; 49
    2260:	f6 01       	movw	r30, r12
    2262:	80 83       	st	Z, r24
    2264:	f7 01       	movw	r30, r14
    2266:	82 2f       	mov	r24, r18
    2268:	90 e2       	ldi	r25, 0x20	; 32
    226a:	88 23       	and	r24, r24
    226c:	19 f0       	breq	.+6      	; 0x2274 <dtoa_prf+0x2a0>
    226e:	91 93       	st	Z+, r25
    2270:	81 50       	subi	r24, 0x01	; 1
    2272:	fb cf       	rjmp	.-10     	; 0x226a <dtoa_prf+0x296>
    2274:	f7 01       	movw	r30, r14
    2276:	e2 0f       	add	r30, r18
    2278:	f1 1d       	adc	r31, r1
    227a:	10 82       	st	Z, r1
    227c:	80 e0       	ldi	r24, 0x00	; 0
    227e:	90 e0       	ldi	r25, 0x00	; 0
    2280:	29 96       	adiw	r28, 0x09	; 9
    2282:	ec e0       	ldi	r30, 0x0C	; 12
    2284:	0c 94 3e 12 	jmp	0x247c	; 0x247c <__epilogue_restores__+0xc>

00002288 <__ftoa_engine>:
    2288:	28 30       	cpi	r18, 0x08	; 8
    228a:	08 f0       	brcs	.+2      	; 0x228e <__ftoa_engine+0x6>
    228c:	27 e0       	ldi	r18, 0x07	; 7
    228e:	33 27       	eor	r19, r19
    2290:	da 01       	movw	r26, r20
    2292:	99 0f       	add	r25, r25
    2294:	31 1d       	adc	r19, r1
    2296:	87 fd       	sbrc	r24, 7
    2298:	91 60       	ori	r25, 0x01	; 1
    229a:	00 96       	adiw	r24, 0x00	; 0
    229c:	61 05       	cpc	r22, r1
    229e:	71 05       	cpc	r23, r1
    22a0:	39 f4       	brne	.+14     	; 0x22b0 <__ftoa_engine+0x28>
    22a2:	32 60       	ori	r19, 0x02	; 2
    22a4:	2e 5f       	subi	r18, 0xFE	; 254
    22a6:	3d 93       	st	X+, r19
    22a8:	30 e3       	ldi	r19, 0x30	; 48
    22aa:	2a 95       	dec	r18
    22ac:	e1 f7       	brne	.-8      	; 0x22a6 <__ftoa_engine+0x1e>
    22ae:	08 95       	ret
    22b0:	9f 3f       	cpi	r25, 0xFF	; 255
    22b2:	30 f0       	brcs	.+12     	; 0x22c0 <__ftoa_engine+0x38>
    22b4:	80 38       	cpi	r24, 0x80	; 128
    22b6:	71 05       	cpc	r23, r1
    22b8:	61 05       	cpc	r22, r1
    22ba:	09 f0       	breq	.+2      	; 0x22be <__ftoa_engine+0x36>
    22bc:	3c 5f       	subi	r19, 0xFC	; 252
    22be:	3c 5f       	subi	r19, 0xFC	; 252
    22c0:	3d 93       	st	X+, r19
    22c2:	91 30       	cpi	r25, 0x01	; 1
    22c4:	08 f0       	brcs	.+2      	; 0x22c8 <__ftoa_engine+0x40>
    22c6:	80 68       	ori	r24, 0x80	; 128
    22c8:	91 1d       	adc	r25, r1
    22ca:	df 93       	push	r29
    22cc:	cf 93       	push	r28
    22ce:	1f 93       	push	r17
    22d0:	0f 93       	push	r16
    22d2:	ff 92       	push	r15
    22d4:	ef 92       	push	r14
    22d6:	19 2f       	mov	r17, r25
    22d8:	98 7f       	andi	r25, 0xF8	; 248
    22da:	96 95       	lsr	r25
    22dc:	e9 2f       	mov	r30, r25
    22de:	96 95       	lsr	r25
    22e0:	96 95       	lsr	r25
    22e2:	e9 0f       	add	r30, r25
    22e4:	ff 27       	eor	r31, r31
    22e6:	e4 5d       	subi	r30, 0xD4	; 212
    22e8:	fe 4f       	sbci	r31, 0xFE	; 254
    22ea:	99 27       	eor	r25, r25
    22ec:	33 27       	eor	r19, r19
    22ee:	ee 24       	eor	r14, r14
    22f0:	ff 24       	eor	r15, r15
    22f2:	a7 01       	movw	r20, r14
    22f4:	e7 01       	movw	r28, r14
    22f6:	05 90       	lpm	r0, Z+
    22f8:	08 94       	sec
    22fa:	07 94       	ror	r0
    22fc:	28 f4       	brcc	.+10     	; 0x2308 <__ftoa_engine+0x80>
    22fe:	36 0f       	add	r19, r22
    2300:	e7 1e       	adc	r14, r23
    2302:	f8 1e       	adc	r15, r24
    2304:	49 1f       	adc	r20, r25
    2306:	51 1d       	adc	r21, r1
    2308:	66 0f       	add	r22, r22
    230a:	77 1f       	adc	r23, r23
    230c:	88 1f       	adc	r24, r24
    230e:	99 1f       	adc	r25, r25
    2310:	06 94       	lsr	r0
    2312:	a1 f7       	brne	.-24     	; 0x22fc <__ftoa_engine+0x74>
    2314:	05 90       	lpm	r0, Z+
    2316:	07 94       	ror	r0
    2318:	28 f4       	brcc	.+10     	; 0x2324 <__ftoa_engine+0x9c>
    231a:	e7 0e       	add	r14, r23
    231c:	f8 1e       	adc	r15, r24
    231e:	49 1f       	adc	r20, r25
    2320:	56 1f       	adc	r21, r22
    2322:	c1 1d       	adc	r28, r1
    2324:	77 0f       	add	r23, r23
    2326:	88 1f       	adc	r24, r24
    2328:	99 1f       	adc	r25, r25
    232a:	66 1f       	adc	r22, r22
    232c:	06 94       	lsr	r0
    232e:	a1 f7       	brne	.-24     	; 0x2318 <__ftoa_engine+0x90>
    2330:	05 90       	lpm	r0, Z+
    2332:	07 94       	ror	r0
    2334:	28 f4       	brcc	.+10     	; 0x2340 <__ftoa_engine+0xb8>
    2336:	f8 0e       	add	r15, r24
    2338:	49 1f       	adc	r20, r25
    233a:	56 1f       	adc	r21, r22
    233c:	c7 1f       	adc	r28, r23
    233e:	d1 1d       	adc	r29, r1
    2340:	88 0f       	add	r24, r24
    2342:	99 1f       	adc	r25, r25
    2344:	66 1f       	adc	r22, r22
    2346:	77 1f       	adc	r23, r23
    2348:	06 94       	lsr	r0
    234a:	a1 f7       	brne	.-24     	; 0x2334 <__ftoa_engine+0xac>
    234c:	05 90       	lpm	r0, Z+
    234e:	07 94       	ror	r0
    2350:	20 f4       	brcc	.+8      	; 0x235a <__ftoa_engine+0xd2>
    2352:	49 0f       	add	r20, r25
    2354:	56 1f       	adc	r21, r22
    2356:	c7 1f       	adc	r28, r23
    2358:	d8 1f       	adc	r29, r24
    235a:	99 0f       	add	r25, r25
    235c:	66 1f       	adc	r22, r22
    235e:	77 1f       	adc	r23, r23
    2360:	88 1f       	adc	r24, r24
    2362:	06 94       	lsr	r0
    2364:	a9 f7       	brne	.-22     	; 0x2350 <__ftoa_engine+0xc8>
    2366:	84 91       	lpm	r24, Z
    2368:	10 95       	com	r17
    236a:	17 70       	andi	r17, 0x07	; 7
    236c:	41 f0       	breq	.+16     	; 0x237e <__ftoa_engine+0xf6>
    236e:	d6 95       	lsr	r29
    2370:	c7 95       	ror	r28
    2372:	57 95       	ror	r21
    2374:	47 95       	ror	r20
    2376:	f7 94       	ror	r15
    2378:	e7 94       	ror	r14
    237a:	1a 95       	dec	r17
    237c:	c1 f7       	brne	.-16     	; 0x236e <__ftoa_engine+0xe6>
    237e:	e2 ed       	ldi	r30, 0xD2	; 210
    2380:	f0 e0       	ldi	r31, 0x00	; 0
    2382:	68 94       	set
    2384:	15 90       	lpm	r1, Z+
    2386:	15 91       	lpm	r17, Z+
    2388:	35 91       	lpm	r19, Z+
    238a:	65 91       	lpm	r22, Z+
    238c:	95 91       	lpm	r25, Z+
    238e:	05 90       	lpm	r0, Z+
    2390:	7f e2       	ldi	r23, 0x2F	; 47
    2392:	73 95       	inc	r23
    2394:	e1 18       	sub	r14, r1
    2396:	f1 0a       	sbc	r15, r17
    2398:	43 0b       	sbc	r20, r19
    239a:	56 0b       	sbc	r21, r22
    239c:	c9 0b       	sbc	r28, r25
    239e:	d0 09       	sbc	r29, r0
    23a0:	c0 f7       	brcc	.-16     	; 0x2392 <__ftoa_engine+0x10a>
    23a2:	e1 0c       	add	r14, r1
    23a4:	f1 1e       	adc	r15, r17
    23a6:	43 1f       	adc	r20, r19
    23a8:	56 1f       	adc	r21, r22
    23aa:	c9 1f       	adc	r28, r25
    23ac:	d0 1d       	adc	r29, r0
    23ae:	7e f4       	brtc	.+30     	; 0x23ce <__ftoa_engine+0x146>
    23b0:	70 33       	cpi	r23, 0x30	; 48
    23b2:	11 f4       	brne	.+4      	; 0x23b8 <__ftoa_engine+0x130>
    23b4:	8a 95       	dec	r24
    23b6:	e6 cf       	rjmp	.-52     	; 0x2384 <__ftoa_engine+0xfc>
    23b8:	e8 94       	clt
    23ba:	01 50       	subi	r16, 0x01	; 1
    23bc:	30 f0       	brcs	.+12     	; 0x23ca <__ftoa_engine+0x142>
    23be:	08 0f       	add	r16, r24
    23c0:	0a f4       	brpl	.+2      	; 0x23c4 <__ftoa_engine+0x13c>
    23c2:	00 27       	eor	r16, r16
    23c4:	02 17       	cp	r16, r18
    23c6:	08 f4       	brcc	.+2      	; 0x23ca <__ftoa_engine+0x142>
    23c8:	20 2f       	mov	r18, r16
    23ca:	23 95       	inc	r18
    23cc:	02 2f       	mov	r16, r18
    23ce:	7a 33       	cpi	r23, 0x3A	; 58
    23d0:	28 f0       	brcs	.+10     	; 0x23dc <__ftoa_engine+0x154>
    23d2:	79 e3       	ldi	r23, 0x39	; 57
    23d4:	7d 93       	st	X+, r23
    23d6:	2a 95       	dec	r18
    23d8:	e9 f7       	brne	.-6      	; 0x23d4 <__ftoa_engine+0x14c>
    23da:	10 c0       	rjmp	.+32     	; 0x23fc <__ftoa_engine+0x174>
    23dc:	7d 93       	st	X+, r23
    23de:	2a 95       	dec	r18
    23e0:	89 f6       	brne	.-94     	; 0x2384 <__ftoa_engine+0xfc>
    23e2:	06 94       	lsr	r0
    23e4:	97 95       	ror	r25
    23e6:	67 95       	ror	r22
    23e8:	37 95       	ror	r19
    23ea:	17 95       	ror	r17
    23ec:	17 94       	ror	r1
    23ee:	e1 18       	sub	r14, r1
    23f0:	f1 0a       	sbc	r15, r17
    23f2:	43 0b       	sbc	r20, r19
    23f4:	56 0b       	sbc	r21, r22
    23f6:	c9 0b       	sbc	r28, r25
    23f8:	d0 09       	sbc	r29, r0
    23fa:	98 f0       	brcs	.+38     	; 0x2422 <__ftoa_engine+0x19a>
    23fc:	23 95       	inc	r18
    23fe:	7e 91       	ld	r23, -X
    2400:	73 95       	inc	r23
    2402:	7a 33       	cpi	r23, 0x3A	; 58
    2404:	08 f0       	brcs	.+2      	; 0x2408 <__ftoa_engine+0x180>
    2406:	70 e3       	ldi	r23, 0x30	; 48
    2408:	7c 93       	st	X, r23
    240a:	20 13       	cpse	r18, r16
    240c:	b8 f7       	brcc	.-18     	; 0x23fc <__ftoa_engine+0x174>
    240e:	7e 91       	ld	r23, -X
    2410:	70 61       	ori	r23, 0x10	; 16
    2412:	7d 93       	st	X+, r23
    2414:	30 f0       	brcs	.+12     	; 0x2422 <__ftoa_engine+0x19a>
    2416:	83 95       	inc	r24
    2418:	71 e3       	ldi	r23, 0x31	; 49
    241a:	7d 93       	st	X+, r23
    241c:	70 e3       	ldi	r23, 0x30	; 48
    241e:	2a 95       	dec	r18
    2420:	e1 f7       	brne	.-8      	; 0x241a <__ftoa_engine+0x192>
    2422:	11 24       	eor	r1, r1
    2424:	ef 90       	pop	r14
    2426:	ff 90       	pop	r15
    2428:	0f 91       	pop	r16
    242a:	1f 91       	pop	r17
    242c:	cf 91       	pop	r28
    242e:	df 91       	pop	r29
    2430:	99 27       	eor	r25, r25
    2432:	87 fd       	sbrc	r24, 7
    2434:	90 95       	com	r25
    2436:	08 95       	ret

00002438 <__prologue_saves__>:
    2438:	2f 92       	push	r2
    243a:	3f 92       	push	r3
    243c:	4f 92       	push	r4
    243e:	5f 92       	push	r5
    2440:	6f 92       	push	r6
    2442:	7f 92       	push	r7
    2444:	8f 92       	push	r8
    2446:	9f 92       	push	r9
    2448:	af 92       	push	r10
    244a:	bf 92       	push	r11
    244c:	cf 92       	push	r12
    244e:	df 92       	push	r13
    2450:	ef 92       	push	r14
    2452:	ff 92       	push	r15
    2454:	0f 93       	push	r16
    2456:	1f 93       	push	r17
    2458:	cf 93       	push	r28
    245a:	df 93       	push	r29
    245c:	cd b7       	in	r28, 0x3d	; 61
    245e:	de b7       	in	r29, 0x3e	; 62
    2460:	ca 1b       	sub	r28, r26
    2462:	db 0b       	sbc	r29, r27
    2464:	0f b6       	in	r0, 0x3f	; 63
    2466:	f8 94       	cli
    2468:	de bf       	out	0x3e, r29	; 62
    246a:	0f be       	out	0x3f, r0	; 63
    246c:	cd bf       	out	0x3d, r28	; 61
    246e:	09 94       	ijmp

00002470 <__epilogue_restores__>:
    2470:	2a 88       	ldd	r2, Y+18	; 0x12
    2472:	39 88       	ldd	r3, Y+17	; 0x11
    2474:	48 88       	ldd	r4, Y+16	; 0x10
    2476:	5f 84       	ldd	r5, Y+15	; 0x0f
    2478:	6e 84       	ldd	r6, Y+14	; 0x0e
    247a:	7d 84       	ldd	r7, Y+13	; 0x0d
    247c:	8c 84       	ldd	r8, Y+12	; 0x0c
    247e:	9b 84       	ldd	r9, Y+11	; 0x0b
    2480:	aa 84       	ldd	r10, Y+10	; 0x0a
    2482:	b9 84       	ldd	r11, Y+9	; 0x09
    2484:	c8 84       	ldd	r12, Y+8	; 0x08
    2486:	df 80       	ldd	r13, Y+7	; 0x07
    2488:	ee 80       	ldd	r14, Y+6	; 0x06
    248a:	fd 80       	ldd	r15, Y+5	; 0x05
    248c:	0c 81       	ldd	r16, Y+4	; 0x04
    248e:	1b 81       	ldd	r17, Y+3	; 0x03
    2490:	aa 81       	ldd	r26, Y+2	; 0x02
    2492:	b9 81       	ldd	r27, Y+1	; 0x01
    2494:	ce 0f       	add	r28, r30
    2496:	d1 1d       	adc	r29, r1
    2498:	0f b6       	in	r0, 0x3f	; 63
    249a:	f8 94       	cli
    249c:	de bf       	out	0x3e, r29	; 62
    249e:	0f be       	out	0x3f, r0	; 63
    24a0:	cd bf       	out	0x3d, r28	; 61
    24a2:	ed 01       	movw	r28, r26
    24a4:	08 95       	ret

000024a6 <_exit>:
    24a6:	f8 94       	cli

000024a8 <__stop_program>:
    24a8:	ff cf       	rjmp	.-2      	; 0x24a8 <__stop_program>
